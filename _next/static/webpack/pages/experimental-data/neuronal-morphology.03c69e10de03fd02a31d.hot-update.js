webpackHotUpdate_N_E("pages/experimental-data/neuronal-morphology",{

/***/ "./src/queries/es/index.ts":
/*!*********************************!*\
  !*** ./src/queries/es/index.ts ***!
  \*********************************/
/*! exports provided: layerAnatomyDataQuery, electroPhysiologyDataQuery, ephysByNameDataQuery, mtypeExpMorphologyListDataQuery, morphologyDataQuery, dataByIdQuery, etypeTracesDataQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"layerAnatomyDataQuery\", function() { return layerAnatomyDataQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"electroPhysiologyDataQuery\", function() { return electroPhysiologyDataQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ephysByNameDataQuery\", function() { return ephysByNameDataQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mtypeExpMorphologyListDataQuery\", function() { return mtypeExpMorphologyListDataQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"morphologyDataQuery\", function() { return morphologyDataQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dataByIdQuery\", function() { return dataByIdQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"etypeTracesDataQuery\", function() { return etypeTracesDataQuery; });\n/**\n * Lists get specific experiment of specific e-type\n *\n */\nvar layerAnatomyDataQuery = {\n  from: 0,\n  size: 1000,\n  query: {\n    bool: {\n      filter: [{\n        bool: {\n          should: [{\n            term: {\n              '@type': 'https://neuroshapes.org/LayerThickness'\n            }\n          }, {\n            term: {\n              '@type': 'https://neuroshapes.org/NeuronDensity'\n            }\n          }, {\n            term: {\n              '@type': 'https://neuroshapes.org/SliceCollection'\n            }\n          }]\n        }\n      }]\n    }\n  }\n};\nvar electroPhysiologyDataQuery = function electroPhysiologyDataQuery(etype, experiment) {\n  if (!etype || !experiment) {\n    return null;\n  }\n\n  return {\n    from: 0,\n    size: 100,\n    query: {\n      bool: {\n        filter: [{\n          bool: {\n            must: [{\n              term: {\n                '@type': 'https://neuroshapes.org/Trace'\n              }\n            }]\n          }\n        }, {\n          bool: {\n            must: {\n              term: {\n                'name.raw': experiment\n              }\n            }\n          }\n        }, {\n          nested: {\n            path: 'annotation.hasBody',\n            query: {\n              bool: {\n                filter: {\n                  term: {\n                    'annotation.hasBody.label.raw': etype\n                  }\n                }\n              }\n            }\n          }\n        }, {\n          nested: {\n            path: 'distribution',\n            query: {\n              bool: {\n                must: {\n                  match: {\n                    'distribution.encodingFormat': 'application/nwb'\n                  }\n                }\n              }\n            }\n          }\n        }]\n      }\n    }\n  };\n};\nvar ephysByNameDataQuery = function ephysByNameDataQuery(names) {\n  if (!names) {\n    return null;\n  }\n\n  return {\n    from: 0,\n    size: 10000,\n    query: {\n      bool: {\n        filter: [{\n          bool: {\n            must: [{\n              term: {\n                '@type': 'https://neuroshapes.org/Trace'\n              }\n            }]\n          }\n        }, {\n          bool: {\n            must: {\n              terms: {\n                'name.raw': names\n              }\n            }\n          }\n        }, {\n          bool: {\n            must: {\n              term: {\n                'note': 'subset'\n              }\n            }\n          }\n        }, {\n          nested: {\n            path: 'distribution',\n            query: {\n              bool: {\n                must: {\n                  match: {\n                    'distribution.encodingFormat': 'application/nwb'\n                  }\n                }\n              }\n            }\n          }\n        }]\n      }\n    }\n  };\n};\nvar mtypeExpMorphologyListDataQuery = function mtypeExpMorphologyListDataQuery(mtype) {\n  if (!mtype) {\n    return null;\n  }\n\n  return {\n    from: 0,\n    size: 200,\n    query: {\n      bool: {\n        filter: [{\n          bool: {\n            should: [{\n              term: {\n                '_deprecated': false\n              }\n            }]\n          }\n        }, {\n          bool: {\n            should: [{\n              term: {\n                '@type': 'https://neuroshapes.org/ReconstructedCell'\n              }\n            }]\n          }\n        }, {\n          nested: {\n            path: 'annotation.hasBody',\n            query: {\n              bool: {\n                filter: [{\n                  term: {\n                    'annotation.hasBody.label.raw': mtype\n                  }\n                }]\n              }\n            }\n          }\n        }]\n      }\n    }\n  };\n};\nvar morphologyDataQuery = function morphologyDataQuery(mtype, instance) {\n  if (!mtype || !instance) {\n    return null;\n  }\n\n  return {\n    from: 0,\n    size: 100,\n    query: {\n      bool: {\n        filter: [{\n          bool: {\n            should: [{\n              term: {\n                '_deprecated': false\n              }\n            }]\n          }\n        }, {\n          bool: {\n            should: [{\n              term: {\n                '@type': 'https://neuroshapes.org/NeuronMorphology'\n              }\n            }]\n          }\n        }, {\n          bool: {\n            should: [{\n              term: {\n                'name.raw': instance\n              }\n            }]\n          }\n        } // {\n        //   nested: {\n        //     path: 'annotation.hasBody',\n        //     query: {\n        //       bool: {\n        //         filter: [\n        //           {\n        //             term: {\n        //               'annotation.hasBody.label.raw': mtype,\n        //             },\n        //           },\n        //         ],\n        //       },\n        //     },\n        //   },\n        // },\n        ]\n      }\n    }\n  };\n};\nvar dataByIdQuery = function dataByIdQuery(id) {\n  if (!id) {\n    return null;\n  }\n\n  return {\n    from: 0,\n    size: 100,\n    query: {\n      bool: {\n        filter: [{\n          bool: {\n            should: [{\n              term: {\n                '_deprecated': false\n              }\n            }]\n          }\n        }, {\n          bool: {\n            should: [{\n              term: {\n                '@id': id\n              }\n            }]\n          }\n        }]\n      }\n    }\n  };\n};\nvar etypeTracesDataQuery = function etypeTracesDataQuery(etype) {\n  if (!etype) {\n    return null;\n  }\n\n  return {\n    from: 0,\n    size: 10000,\n    query: {\n      bool: {\n        filter: [{\n          bool: {\n            must: [{\n              term: {\n                '@type': 'https://neuroshapes.org/Trace'\n              }\n            }]\n          }\n        }, {\n          bool: {\n            must_not: {\n              exists: {\n                \"field\": \"note\"\n              }\n            }\n          }\n        }, {\n          nested: {\n            path: 'annotation.hasBody',\n            query: {\n              bool: {\n                filter: {\n                  term: {\n                    'annotation.hasBody.label.raw': etype\n                  }\n                }\n              }\n            }\n          }\n        }, {\n          nested: {\n            path: 'distribution',\n            query: {\n              bool: {\n                must: {\n                  match: {\n                    'distribution.encodingFormat': 'application/rab'\n                  }\n                }\n              }\n            }\n          }\n        }]\n      }\n    }\n  };\n};\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/queries/es/index.ts\n");

/***/ })

})