{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_highlight_scala.1fa6e3c3bec27e03.js","mappings":"uaA2IAA,EAAAC,OAAA,CAnIA,SAAAC,CAAA,EAOA,IAAAC,EAAA,CACAC,UAAA,QACAC,SAAA,CACA,CACAC,MAAA,kBACA,EACA,CACAA,MAAA,OACAC,IAAA,IACA,EACA,EAGAC,EAAA,CACAJ,UAAA,SACAC,SAAA,CACA,CACAC,MAAA,MACAC,IAAA,KACA,EACA,CACAD,MAAA,IACAC,IAAA,IACAE,QAAA,MACAC,SAAA,CAAAR,EAAAS,gBAAA,GAEA,CACAL,MAAA,UACAC,IAAA,IACAE,QAAA,MACAC,SAAA,CACAR,EAAAS,gBAAA,CACAR,EACA,EAEA,CACAC,UAAA,SACAE,MAAA,YACAC,IAAA,MACAG,SAAA,CAAAP,EAAA,CACAS,UAAA,EACA,EACA,EASAC,EAAA,CACAT,UAAA,OACAE,MAAA,wBACAM,UAAA,CACA,EAEAE,EAAA,CACAV,UAAA,QACAE,MAAA,iFACAM,UAAA,CACA,EAEAG,EAAA,CACAX,UAAA,QACAY,cAAA,0BACAT,IAAA,aACAU,WAAA,GACAP,SAAA,CACAR,EAAAgB,mBAAA,CACAhB,EAAAiB,oBAAA,CACA,CACAH,cAAA,eACAJ,UAAA,EACA,EACA,CACAN,MAAA,KACAC,IAAA,KACAa,aAAA,GACAH,WAAA,GACAL,UAAA,EACAF,SAAA,CAAAG,EAAA,EAEA,CACAT,UAAA,SACAE,MAAA,KACAC,IAAA,KACAa,aAAA,GACAH,WAAA,GACAL,UAAA,EACAF,SAAA,CAAAG,EAAA,EAEAC,EACA,EAWA,OACAO,KAAA,QACAC,SAAA,CACAC,QAAA,kBACAC,QAAA,uPACA,EACAd,SAAA,CACAR,EAAAgB,mBAAA,CACAhB,EAAAiB,oBAAA,CACAX,EAnEA,CACAJ,UAAA,SACAE,MAAA,qBACA,EAkEAO,EAnBA,CACAT,UAAA,WACAY,cAAA,MACAT,IAAA,cACAU,WAAA,GACAP,SAAA,CAAAI,EAAA,EAgBAC,EACAb,EAAAuB,aAAA,CA5HA,CACArB,UAAA,OACAE,MAAA,YACA,EA2HA,CAEA","sources":["webpack://_N_E/./node_modules/highlight.js/lib/languages/scala.js","webpack://_N_E/<anon>"],"sourcesContent":["/*\nLanguage: Scala\nCategory: functional\nAuthor: Jan Berkel <jan.berkel@gmail.com>\nContributors: Erik Osheim <d_m@plastic-idolatry.com>\nWebsite: https://www.scala-lang.org\n*/\n\nfunction scala(hljs) {\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@[A-Za-z]+'\n  };\n\n  // used in strings for escaping/interpolation/substitution\n  const SUBST = {\n    className: 'subst',\n    variants: [\n      {\n        begin: '\\\\$[A-Za-z0-9_]+'\n      },\n      {\n        begin: /\\$\\{/,\n        end: /\\}/\n      }\n    ]\n  };\n\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"'\n      },\n      {\n        begin: '\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '[a-z]+\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ]\n      },\n      {\n        className: 'string',\n        begin: '[a-z]+\"\"\"',\n        end: '\"\"\"',\n        contains: [ SUBST ],\n        relevance: 10\n      }\n    ]\n\n  };\n\n  const SYMBOL = {\n    className: 'symbol',\n    begin: '\\'\\\\w[\\\\w\\\\d_]*(?!\\')'\n  };\n\n  const TYPE = {\n    className: 'type',\n    begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n    relevance: 0\n  };\n\n  const NAME = {\n    className: 'title',\n    begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,\n    relevance: 0\n  };\n\n  const CLASS = {\n    className: 'class',\n    beginKeywords: 'class object trait type',\n    end: /[:={\\[\\n;]/,\n    excludeEnd: true,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        beginKeywords: 'extends with',\n        relevance: 10\n      },\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0,\n        contains: [ TYPE ]\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0,\n        contains: [ TYPE ]\n      },\n      NAME\n    ]\n  };\n\n  const METHOD = {\n    className: 'function',\n    beginKeywords: 'def',\n    end: /[:={\\[(\\n;]/,\n    excludeEnd: true,\n    contains: [ NAME ]\n  };\n\n  return {\n    name: 'Scala',\n    keywords: {\n      literal: 'true false null',\n      keyword: 'type yield lazy override def with val var sealed abstract private trait object if forSome for while throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      STRING,\n      SYMBOL,\n      TYPE,\n      METHOD,\n      CLASS,\n      hljs.C_NUMBER_MODE,\n      ANNOTATION\n    ]\n  };\n}\n\nmodule.exports = scala;\n"],"names":["module","exports","hljs","SUBST","className","variants","begin","end","STRING","illegal","contains","BACKSLASH_ESCAPE","relevance","TYPE","NAME","CLASS","beginKeywords","excludeEnd","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","excludeBegin","name","keywords","literal","keyword","C_NUMBER_MODE"],"sourceRoot":""}