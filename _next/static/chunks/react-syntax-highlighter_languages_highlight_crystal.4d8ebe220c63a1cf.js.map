{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_highlight_crystal.4d8ebe220c63a1cf.js","mappings":"waAqUAA,EAAAC,OAAA,CA9TA,SAAAC,CAAA,EACA,IAAAC,EAAA,4BAGAC,EAAA,gHACAC,EAAA,iCACAC,EAAA,CACAC,SAJA,sBAKAC,QACA,yYAIAC,QAAA,gBACA,EACAC,EAAA,CACAC,UAAA,QACAC,MAAA,MACAC,IAAA,KACAC,SAAAR,CACA,EACAS,EAAA,CACAJ,UAAA,oBACAK,SAAA,CACA,CACAJ,MAAA,SACAC,IAAA,QACA,EACA,CACAD,MAAA,OACAC,IAAA,MACA,EACA,CACAC,SAAAR,CACA,EAEA,SAAAW,eAAAL,CAAA,CAAAC,CAAA,EACA,IACAK,EAAA,CACA,CACAN,MAAAA,EACAC,IAAAA,CACA,EACA,CAEA,OADAK,CAAA,IAAAA,QAAA,CAAAA,EACAA,CACA,CACA,IAAAC,EAAA,CACAR,UAAA,SACAO,SAAA,CACAhB,EAAAkB,gBAAA,CACAV,EACA,CACAM,SAAA,CACA,CACAJ,MAAA,IACAC,IAAA,GACA,EACA,CACAD,MAAA,IACAC,IAAA,GACA,EACA,CACAD,MAAA,IACAC,IAAA,GACA,EACA,CACAD,MAAA,aACAC,IAAA,MACAK,SAAAD,eAAA,YACA,EACA,CACAL,MAAA,aACAC,IAAA,MACAK,SAAAD,eAAA,YACA,EACA,CACAL,MAAA,aACAC,IAAA,KACAK,SAAAD,eAAA,KAAoC,KACpC,EACA,CACAL,MAAA,WACAC,IAAA,IACAK,SAAAD,eAAA,QACA,EACA,CACAL,MAAA,aACAC,IAAA,KACA,EACA,CACAD,MAAA,UACAC,IAAA,UACA,EACA,CACAQ,UAAA,CACA,EACAC,EAAA,CACAX,UAAA,SACAK,SAAA,CACA,CACAJ,MAAA,QACAC,IAAA,MACAK,SAAAD,eAAA,YACA,EACA,CACAL,MAAA,QACAC,IAAA,MACAK,SAAAD,eAAA,YACA,EACA,CACAL,MAAA,QACAC,IAAA,KACAK,SAAAD,eAAA,KAAoC,KACpC,EACA,CACAL,MAAA,MACAC,IAAA,IACAK,SAAAD,eAAA,QACA,EACA,CACAL,MAAA,QACAC,IAAA,KACA,EACA,CACAD,MAAA,YACAC,IAAA,UACA,EACA,CACAQ,UAAA,CACA,EACAE,EAAA,CACAX,MAAA,YAAmBV,EAAAsB,cAAA,4DACnBV,SAAA,yCACAI,SAAA,CACA,CACAP,UAAA,SACAO,SAAA,CACAhB,EAAAkB,gBAAA,CACAV,EACA,CACAM,SAAA,CACA,CACAJ,MAAA,WACAS,UAAA,CACA,EACA,CACAT,MAAA,WACAC,IAAA,SACA,EACA,EAEA,CACAQ,UAAA,CACA,EACAI,EAAA,CACAd,UAAA,SACAO,SAAA,CACAhB,EAAAkB,gBAAA,CACAV,EACA,CACAM,SAAA,CACA,CACAJ,MAAA,QACAC,IAAA,MACAK,SAAAD,eAAA,YACA,EACA,CACAL,MAAA,QACAC,IAAA,MACAK,SAAAD,eAAA,YACA,EACA,CACAL,MAAA,QACAC,IAAA,KACAK,SAAAD,eAAA,KAAoC,KACpC,EACA,CACAL,MAAA,MACAC,IAAA,IACAK,SAAAD,eAAA,QACA,EACA,CACAL,MAAA,QACAC,IAAA,KACA,EACA,CACAQ,UAAA,CACA,EACAK,EAAA,CACAf,UAAA,OACAC,MAAA,OACAC,IAAA,MACAK,SAAA,CACAhB,EAAAyB,OAAA,CAAAzB,EAAA0B,iBAAA,EACAjB,UAAA,aACA,GACA,EAEAkB,EAAA,CACAd,EACAI,EACAG,EACAG,EACAF,EACAG,EACAxB,EAAA4B,iBAAA,CACA,CACAnB,UAAA,QACAoB,cAAA,sBACAlB,IAAA,MACAmB,QAAA,IACAd,SAAA,CACAhB,EAAA4B,iBAAA,CACA5B,EAAAyB,OAAA,CAAAzB,EAAA+B,UAAA,EACArB,MAAAP,CACA,GACA,CACAO,MAAA,GACA,EACA,EAEA,CACAD,UAAA,QACAoB,cAAA,iBACAlB,IAAA,MACAmB,QAAA,IACAd,SAAA,CACAhB,EAAA4B,iBAAA,CACA5B,EAAAyB,OAAA,CAAAzB,EAAA+B,UAAA,EACArB,MAAAP,CACA,GACA,EAEA,CACA0B,cAAA,aACAlB,IAAA,MACAmB,QAAA,IACAd,SAAA,CACAhB,EAAA4B,iBAAA,CACA5B,EAAAyB,OAAA,CAAAzB,EAAA+B,UAAA,EACArB,MAAAP,CACA,GACA,CACAgB,UAAA,CACA,EACA,CACAV,UAAA,WACAoB,cAAA,MACAlB,IAAA,OACAK,SAAA,CACAhB,EAAAyB,OAAA,CAAAzB,EAAA+B,UAAA,EACArB,MAAAR,EACA8B,WAAA,EACA,GACA,EAEA,CACAvB,UAAA,WACAoB,cAAA,YACAlB,IAAA,OACAK,SAAA,CACAhB,EAAAyB,OAAA,CAAAzB,EAAA+B,UAAA,EACArB,MAAAR,EACA8B,WAAA,EACA,GACA,CACAb,UAAA,CACA,EACA,CACAV,UAAA,SACAC,MAAAV,EAAAiC,mBAAA,aACAd,UAAA,CACA,EACA,CACAV,UAAA,SACAC,MAAA,IACAM,SAAA,CACAC,EACA,CACAP,MAAAR,CACA,EACA,CACAiB,UAAA,CACA,EACA,CACAV,UAAA,SACAK,SAAA,CACA,CACAJ,MAAA,gBAAAT,CACA,EACA,CACAS,MAAA,iBAAAT,CACA,EACA,CACAS,MAAA,uBAAAT,CACA,EACA,CACAS,MAAA,uFACA,EACA,CACAA,MAAA,sBAAAT,CACA,EACA,CACAkB,UAAA,CACA,EACA,CAIA,OAHAX,EAAAQ,QAAA,CAAAW,EACAd,EAAAG,QAAA,CAAAW,EAAAO,KAAA,IAEA,CACAC,KAAA,UACAC,QAAA,OACAxB,SAAAR,EACAY,SAAAW,CACA,CACA","sources":["webpack://_N_E/./node_modules/highlight.js/lib/languages/crystal.js","webpack://_N_E/<anon>"],"sourcesContent":["/*\nLanguage: Crystal\nAuthor: TSUYUSATO Kitsune <make.just.on@gmail.com>\nWebsite: https://crystal-lang.org\n*/\n\n/** @type LanguageFn */\nfunction crystal(hljs) {\n  const INT_SUFFIX = '(_?[ui](8|16|32|64|128))?';\n  const FLOAT_SUFFIX = '(_?f(32|64))?';\n  const CRYSTAL_IDENT_RE = '[a-zA-Z_]\\\\w*[!?=]?';\n  const CRYSTAL_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|[=!]~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~|]|//|//=|&[-+*]=?|&\\\\*\\\\*|\\\\[\\\\][=?]?';\n  const CRYSTAL_PATH_RE = '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|!)?';\n  const CRYSTAL_KEYWORDS = {\n    $pattern: CRYSTAL_IDENT_RE,\n    keyword:\n      'abstract alias annotation as as? asm begin break case class def do else elsif end ensure enum extend for fun if ' +\n      'include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? ' +\n      'return require select self sizeof struct super then type typeof union uninitialized unless until verbatim when while with yield ' +\n      '__DIR__ __END_LINE__ __FILE__ __LINE__',\n    literal: 'false nil true'\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: CRYSTAL_KEYWORDS\n  };\n  const EXPANSION = {\n    className: 'template-variable',\n    variants: [\n      {\n        begin: '\\\\{\\\\{',\n        end: '\\\\}\\\\}'\n      },\n      {\n        begin: '\\\\{%',\n        end: '%\\\\}'\n      }\n    ],\n    keywords: CRYSTAL_KEYWORDS\n  };\n\n  function recursiveParen(begin, end) {\n    const\n        contains = [\n          {\n            begin: begin,\n            end: end\n          }\n        ];\n    contains[0].contains = contains;\n    return contains;\n  }\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /`/,\n        end: /`/\n      },\n      {\n        begin: '%[Qwi]?\\\\(',\n        end: '\\\\)',\n        contains: recursiveParen('\\\\(', '\\\\)')\n      },\n      {\n        begin: '%[Qwi]?\\\\[',\n        end: '\\\\]',\n        contains: recursiveParen('\\\\[', '\\\\]')\n      },\n      {\n        begin: '%[Qwi]?\\\\{',\n        end: /\\}/,\n        contains: recursiveParen(/\\{/, /\\}/)\n      },\n      {\n        begin: '%[Qwi]?<',\n        end: '>',\n        contains: recursiveParen('<', '>')\n      },\n      {\n        begin: '%[Qwi]?\\\\|',\n        end: '\\\\|'\n      },\n      {\n        begin: /<<-\\w+$/,\n        end: /^\\s*\\w+$/\n      }\n    ],\n    relevance: 0\n  };\n  const Q_STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '%q\\\\(',\n        end: '\\\\)',\n        contains: recursiveParen('\\\\(', '\\\\)')\n      },\n      {\n        begin: '%q\\\\[',\n        end: '\\\\]',\n        contains: recursiveParen('\\\\[', '\\\\]')\n      },\n      {\n        begin: '%q\\\\{',\n        end: /\\}/,\n        contains: recursiveParen(/\\{/, /\\}/)\n      },\n      {\n        begin: '%q<',\n        end: '>',\n        contains: recursiveParen('<', '>')\n      },\n      {\n        begin: '%q\\\\|',\n        end: '\\\\|'\n      },\n      {\n        begin: /<<-'\\w+'$/,\n        end: /^\\s*\\w+$/\n      }\n    ],\n    relevance: 0\n  };\n  const REGEXP = {\n    begin: '(?!%\\\\})(' + hljs.RE_STARTERS_RE + '|\\\\n|\\\\b(case|if|select|unless|until|when|while)\\\\b)\\\\s*',\n    keywords: 'case if select unless until when while',\n    contains: [\n      {\n        className: 'regexp',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        variants: [\n          {\n            begin: '//[a-z]*',\n            relevance: 0\n          },\n          {\n            begin: '/(?!\\\\/)',\n            end: '/[a-z]*'\n          }\n        ]\n      }\n    ],\n    relevance: 0\n  };\n  const REGEXP2 = {\n    className: 'regexp',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: '%r\\\\(',\n        end: '\\\\)',\n        contains: recursiveParen('\\\\(', '\\\\)')\n      },\n      {\n        begin: '%r\\\\[',\n        end: '\\\\]',\n        contains: recursiveParen('\\\\[', '\\\\]')\n      },\n      {\n        begin: '%r\\\\{',\n        end: /\\}/,\n        contains: recursiveParen(/\\{/, /\\}/)\n      },\n      {\n        begin: '%r<',\n        end: '>',\n        contains: recursiveParen('<', '>')\n      },\n      {\n        begin: '%r\\\\|',\n        end: '\\\\|'\n      }\n    ],\n    relevance: 0\n  };\n  const ATTRIBUTE = {\n    className: 'meta',\n    begin: '@\\\\[',\n    end: '\\\\]',\n    contains: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        className: 'meta-string'\n      })\n    ]\n  };\n  const CRYSTAL_DEFAULT_CONTAINS = [\n    EXPANSION,\n    STRING,\n    Q_STRING,\n    REGEXP2,\n    REGEXP,\n    ATTRIBUTE,\n    hljs.HASH_COMMENT_MODE,\n    {\n      className: 'class',\n      beginKeywords: 'class module struct',\n      end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_PATH_RE\n        }),\n        { // relevance booster for inheritance\n          begin: '<'\n        }\n      ]\n    },\n    {\n      className: 'class',\n      beginKeywords: 'lib enum union',\n      end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_PATH_RE\n        })\n      ]\n    },\n    {\n      beginKeywords: 'annotation',\n      end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_PATH_RE\n        })\n      ],\n      relevance: 2\n    },\n    {\n      className: 'function',\n      beginKeywords: 'def',\n      end: /\\B\\b/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_METHOD_RE,\n          endsParent: true\n        })\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'fun macro',\n      end: /\\B\\b/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_METHOD_RE,\n          endsParent: true\n        })\n      ],\n      relevance: 2\n    },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':',\n      contains: [\n        STRING,\n        {\n          begin: CRYSTAL_METHOD_RE\n        }\n      ],\n      relevance: 0\n    },\n    {\n      className: 'number',\n      variants: [\n        {\n          begin: '\\\\b0b([01_]+)' + INT_SUFFIX\n        },\n        {\n          begin: '\\\\b0o([0-7_]+)' + INT_SUFFIX\n        },\n        {\n          begin: '\\\\b0x([A-Fa-f0-9_]+)' + INT_SUFFIX\n        },\n        {\n          begin: '\\\\b([1-9][0-9_]*[0-9]|[0-9])(\\\\.[0-9][0-9_]*)?([eE]_?[-+]?[0-9_]*)?' + FLOAT_SUFFIX + '(?!_)'\n        },\n        {\n          begin: '\\\\b([1-9][0-9_]*|0)' + INT_SUFFIX\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = CRYSTAL_DEFAULT_CONTAINS;\n  EXPANSION.contains = CRYSTAL_DEFAULT_CONTAINS.slice(1); // without EXPANSION\n\n  return {\n    name: 'Crystal',\n    aliases: [ 'cr' ],\n    keywords: CRYSTAL_KEYWORDS,\n    contains: CRYSTAL_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = crystal;\n"],"names":["module","exports","hljs","INT_SUFFIX","CRYSTAL_METHOD_RE","CRYSTAL_PATH_RE","CRYSTAL_KEYWORDS","$pattern","keyword","literal","SUBST","className","begin","end","keywords","EXPANSION","variants","recursiveParen","contains","STRING","BACKSLASH_ESCAPE","relevance","Q_STRING","REGEXP","RE_STARTERS_RE","REGEXP2","ATTRIBUTE","inherit","QUOTE_STRING_MODE","CRYSTAL_DEFAULT_CONTAINS","HASH_COMMENT_MODE","beginKeywords","illegal","TITLE_MODE","endsParent","UNDERSCORE_IDENT_RE","slice","name","aliases"],"sourceRoot":""}