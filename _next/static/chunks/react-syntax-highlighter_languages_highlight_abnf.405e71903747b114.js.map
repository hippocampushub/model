{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_highlight_abnf.405e71903747b114.js","mappings":"uaAsGAA,EAAAC,OAAA,CArEA,SAAAC,CAAA,EACA,IAAAC,EAAA,CACAC,gBAAA,yBACAC,gBAAA,kBACA,EAqBAC,EAAAJ,EAAAK,OAAA,KAAqC,KAsBrCC,EAAA,CACAC,UAAA,YACAC,MAAAC,SA9DA,GAAAC,CAAA,EACA,IAAAC,EAAAD,EAAAE,GAAA,IAXA,EACA,iBAUAC,EAAAA,EARAC,EAAAC,MAAA,CAHA,MAWAC,IAAA,KACA,OAAAL,CACA,EA2DAV,EAAAC,eAAA,YACA,EAEA,OACAe,KAAA,6BACAC,QAAAjB,EAAAE,eAAA,CACAgB,SAjDA,CACA,QACA,MACA,OACA,KACA,OACA,MACA,QACA,SACA,SACA,OACA,KACA,OACA,QACA,KACA,QACA,MACA,CAiCAC,SAAA,CACAd,EACAF,EA/BA,CACAG,UAAA,SACAC,MAAA,oCACA,EAEA,CACAD,UAAA,SACAC,MAAA,oCACA,EAEA,CACAD,UAAA,SACAC,MAAA,6CACA,EAEA,CACAD,UAAA,SACAC,MAAA,OACA,EAkBAR,EAAAqB,iBAAA,CACArB,EAAAsB,WAAA,CACA,CAEA","sources":["webpack://_N_E/./node_modules/highlight.js/lib/languages/abnf.js","webpack://_N_E/<anon>"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Augmented Backus-Naur Form\nAuthor: Alex McKibben <alex@nullscope.net>\nWebsite: https://tools.ietf.org/html/rfc5234\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction abnf(hljs) {\n  const regexes = {\n    ruleDeclaration: /^[a-zA-Z][a-zA-Z0-9-]*/,\n    unexpectedChars: /[!@#$^&',?+~`|:]/\n  };\n\n  const keywords = [\n    \"ALPHA\",\n    \"BIT\",\n    \"CHAR\",\n    \"CR\",\n    \"CRLF\",\n    \"CTL\",\n    \"DIGIT\",\n    \"DQUOTE\",\n    \"HEXDIG\",\n    \"HTAB\",\n    \"LF\",\n    \"LWSP\",\n    \"OCTET\",\n    \"SP\",\n    \"VCHAR\",\n    \"WSP\"\n  ];\n\n  const commentMode = hljs.COMMENT(/;/, /$/);\n\n  const terminalBinaryMode = {\n    className: \"symbol\",\n    begin: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+){0,1}/\n  };\n\n  const terminalDecimalMode = {\n    className: \"symbol\",\n    begin: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+){0,1}/\n  };\n\n  const terminalHexadecimalMode = {\n    className: \"symbol\",\n    begin: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+){0,1}/\n  };\n\n  const caseSensitivityIndicatorMode = {\n    className: \"symbol\",\n    begin: /%[si]/\n  };\n\n  const ruleDeclarationMode = {\n    className: \"attribute\",\n    begin: concat(regexes.ruleDeclaration, /(?=\\s*=)/)\n  };\n\n  return {\n    name: 'Augmented Backus-Naur Form',\n    illegal: regexes.unexpectedChars,\n    keywords: keywords,\n    contains: [\n      ruleDeclarationMode,\n      commentMode,\n      terminalBinaryMode,\n      terminalDecimalMode,\n      terminalHexadecimalMode,\n      caseSensitivityIndicatorMode,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = abnf;\n"],"names":["module","exports","hljs","regexes","ruleDeclaration","unexpectedChars","commentMode","COMMENT","ruleDeclarationMode","className","begin","concat","args","joined","map","x","re","source","join","name","illegal","keywords","contains","QUOTE_STRING_MODE","NUMBER_MODE"],"sourceRoot":""}