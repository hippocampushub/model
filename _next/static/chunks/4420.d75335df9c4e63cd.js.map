{"version":3,"file":"static/chunks/4420.d75335df9c4e63cd.js","mappings":"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","sources":["webpack://_N_E/./src/views/2_reconstruction-data/volume/volume-viewer/utils.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/volume-viewer/constants.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/volume-viewer/volume-viewer.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/volume-viewer/Legend.tsx","webpack://_N_E/./src/views/2_reconstruction-data/volume/volume-viewer/VolumeViewer.tsx","webpack://_N_E/<anon>"],"sourcesContent":["export class RendererCtrl {\n  public stopped = false;\n\n  private countinuousRenderCounter = 0;\n  private once = true;\n  private stopTime = null;\n\n  public get render() {\n    if (this.stopped) return false;\n\n    if (this.countinuousRenderCounter) return true;\n\n    if (this.stopTime) {\n      const now = Date.now();\n      if (this.stopTime > now) return true;\n\n      this.stopTime = null;\n      return false;\n    }\n\n    const { once } = this;\n    this.once = false;\n    return once;\n  }\n\n  public renderOnce() {\n    this.once = true;\n  }\n\n  public renderFor(time) {\n    const now = Date.now();\n    if (this.stopTime && this.stopTime > now + time) return;\n    this.stopTime = now + time;\n  }\n\n  public renderUntilStopped() {\n    this.countinuousRenderCounter += 1;\n    return () => { this.countinuousRenderCounter -= 1; };\n  }\n\n  public stop() {\n    this.stopped = true\n  }\n}\n","export const color = {\n  REGION: '#888888',\n  SLM:  '#ff0000',\n  SR:  '#87cefa',\n  SP:  '#0000ff',\n  SO:  '#00ff00',\n};\n","import throttle from 'lodash/throttle';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport {\n  AmbientLight,\n  Box3,\n  Color,\n  DoubleSide,\n  Group,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  PerspectiveCamera,\n  PointLight,\n  Scene,\n  Vector3,\n  WebGLRenderer\n} from 'three';\n\nimport { Layer, VolumeSection } from '@/types';\n\nimport { RendererCtrl } from './utils';\nimport { saveAs } from 'file-saver';\nimport { color } from './constants';\n\nconst AMBIENT_LIGHT_COLOR = 0x555555;\nconst CAMERA_LIGHT_COLOR = 0xcacaca;\nconst BACKGROUND_COLOR = 0xfefdfb;\n\nfunction parseCssColor(colorStr: string) {\n  return parseInt(colorStr.replace('#', ''), 16);\n}\n\nexport default class VolumeViewer {\n  private meshPath: string | null = null;\n  private volumeSection: VolumeSection | null = null;\n\n  private container: HTMLDivElement | null = null;\n  private resizeObserver: ResizeObserver | null = null;\n  private canvas: HTMLCanvasElement | null = null;\n  private renderer: WebGLRenderer | null = null;\n  private scene: Scene | null = null;\n  private camera: PerspectiveCamera | null = null;\n  private controls: TrackballControls | null = null;\n  private ctrl: RendererCtrl = new RendererCtrl();\n  private onUserInteract: EventListener = () => { };\n\n  private material: Record<string, Material> = {};\n  private regionMesh: Mesh | null = null;\n  private group: Group | null = null;\n  private layerMesh: { [meshName: string]: Mesh } = {};\n\n  private regionMeshVisible = true;\n\n  constructor(container: HTMLDivElement) {\n    this.container = container;\n  }\n\n  public async init(meshPath: string, volumeSection: VolumeSection) {\n    this.meshPath = meshPath;\n    this.volumeSection = volumeSection;\n\n    this.initCanvas();\n    this.initRenderer();\n    this.initScene();\n    this.initCamera();\n    this.initControls();\n    this.initEvents();\n    this.initObservers();\n\n    this.initMaterials();\n\n    await this.initMeshes();\n\n    this.alignCamera();\n\n    this.startRenderLoop();\n    this.ctrl.renderOnce();\n  }\n\n  public resize() {\n    const { clientWidth, clientHeight } = this.container!;\n    this.camera!.aspect = clientWidth / clientHeight;\n    this.camera!.updateProjectionMatrix();\n    this.renderer!.setSize(clientWidth, clientHeight);\n\n    this.ctrl.renderOnce();\n  }\n\n  public setVolumeSection(volumeSection: VolumeSection, visibility: Record<Layer, boolean>) {\n    this.volumeSection = volumeSection;\n\n    Object.entries(this.layerMesh).forEach(([meshKey, mesh]) => {\n      const [, meshVolumeSection, layer] = meshKey.match(/(\\w+)\\_(\\w+)/)!;\n      mesh.visible = meshVolumeSection === volumeSection && visibility[layer];\n    });\n\n    if (this.regionMesh) {\n      this.regionMesh.visible = this.regionMeshVisible && this.canRenderRegionMesh();\n    }\n\n    this.ctrl.renderOnce();\n  }\n\n  public setRegionMaskVisibility(visible: boolean) {\n    this.regionMeshVisible = visible;\n    if (this.regionMesh) {\n      this.regionMesh.visible = visible && this.canRenderRegionMesh();\n    }\n    this.ctrl.renderOnce();\n  }\n\n  public setLayerVisibility(visibility: Record<string, boolean>) {\n    Object.entries(visibility).forEach(([layer, visible]) => {\n      const meshKey = `${this.volumeSection}_${layer}`;\n\n      if (!this.layerMesh[meshKey]) {\n        throw new Error(`Mesh for ${meshKey} is not found`);\n      }\n\n      this.layerMesh[meshKey].visible = visible;\n    });\n\n    this.ctrl.renderOnce();\n  }\n\n  public downloadRender(filename: string) {\n    const { clientWidth, clientHeight } = this.renderer!.domElement.parentElement!;\n\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      alpha: true,\n      preserveDrawingBuffer: true,\n      physicallyCorrectColors: true,\n    });\n\n    renderer.setSize(clientWidth * 3, clientHeight * 3);\n\n    renderer.render(this.scene!, this.camera!);\n\n    renderer.domElement.toBlob(blob => saveAs(blob!, `${filename}.png`));\n    renderer.dispose();\n\n  }\n\n  public destroy() {\n    Object.values(this.material).forEach(material => material.dispose());\n    Object.values(this.layerMesh).forEach(mesh => mesh.geometry.dispose());\n\n    if (this.regionMesh) {\n      this.regionMesh.geometry.dispose();\n    }\n\n    if (this.renderer) {\n      this.renderer.domElement.removeEventListener('wheel', this.onUserInteract);\n      this.renderer.domElement.removeEventListener('mousemove', this.onUserInteract);\n      this.renderer.domElement.removeEventListener('touchmove', this.onUserInteract);\n      this.renderer.domElement.removeEventListener('pointermove', this.onUserInteract);\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.unobserve(this.container!);\n    }\n\n    if (this.controls) {\n      this.controls.dispose();\n    }\n    if (this.renderer) {\n      this.renderer.dispose();\n    }\n\n    if (this.container && this.canvas) {\n      this.container.removeChild(this.canvas);\n    }\n  }\n\n  private initCanvas() {\n    this.canvas = document.createElement('canvas');\n    this.container!.appendChild(this.canvas);\n  }\n\n  private initRenderer() {\n    this.renderer = new WebGLRenderer({\n      canvas: this.canvas!,\n      antialias: true,\n    });\n\n    const { clientWidth, clientHeight } = this.container!;\n    this.renderer.setSize(clientWidth, clientHeight);\n    this.renderer.setPixelRatio(window.devicePixelRatio || 1);\n  }\n\n  private initScene() {\n    this.scene = new Scene();\n    this.scene.background = new Color(BACKGROUND_COLOR);\n    this.scene.add(new AmbientLight(AMBIENT_LIGHT_COLOR));\n  }\n\n  private initCamera() {\n    const { clientWidth, clientHeight } = this.container!;\n    this.camera = new PerspectiveCamera(45, clientWidth / clientHeight, 1, 30000);\n    this.scene!.add(this.camera);\n    this.camera.add(new PointLight(CAMERA_LIGHT_COLOR, 0.9));\n  }\n\n  private initControls() {\n    this.controls = new TrackballControls(this.camera!, this.renderer!.domElement);\n    this.controls.enableDamping = true;\n    this.controls.zoomSpeed = 0.5;\n    this.controls.rotateSpeed = 0.8;\n    this.controls.maxDistance = 20000;\n  }\n\n  private initEvents() {\n    const params = { capture: false, passive: true };\n\n    this.onUserInteract = throttle(() => this.ctrl.renderFor(4000), 100).bind(this);\n\n    this.canvas!.addEventListener('wheel', this.onUserInteract, params);\n    this.canvas!.addEventListener('mousemove', this.onUserInteract, params);\n    this.canvas!.addEventListener('touchmove', this.onUserInteract, params);\n    this.canvas!.addEventListener('pointermove', this.onUserInteract, params);\n  }\n\n  private initObservers() {\n    // postponing resize as Firefox for some reason detects wrong container size when executed synchronously\n    this.resizeObserver = new ResizeObserver(() => setTimeout(() => this.resize(), 0));\n\n    this.resizeObserver.observe(this.container!);\n  }\n\n  private initMaterials() {\n    this.material = {\n      REGION: new MeshLambertMaterial({\n        color: parseCssColor(color.REGION),\n        wireframe: true,\n        transparent: true,\n        opacity: 0.1,\n      }),\n\n      SLM: new MeshLambertMaterial({ color: parseCssColor(color.SLM), side: DoubleSide }),\n      SR: new MeshLambertMaterial({ color: parseCssColor(color.SR), side: DoubleSide }),\n      SP: new MeshLambertMaterial({ color: parseCssColor(color.SP), side: DoubleSide }),\n      SO: new MeshLambertMaterial({ color: parseCssColor(color.SO), side: DoubleSide }),\n    }\n  }\n\n  private initMeshes() {\n    const loader = new OBJLoader();\n\n    return new Promise<void>((resolve) => {\n      loader.load(this.meshPath!, (obj) => {\n        obj.traverse(mesh => {\n          if (!mesh.isMesh) return;\n\n          const { name } = mesh;\n\n          if (name === 'region') {\n            const material = this.material.REGION;\n\n            mesh.material = material;\n            mesh.visible = this.canRenderRegionMesh();\n\n            this.regionMesh = mesh;\n          } else {\n            const [, volumeSection, layer] = name.match(/(\\w+)_(\\w+)/)!;\n\n            const material = this.material[layer];\n            mesh.material = material;\n            mesh.visible = volumeSection === this.volumeSection;\n\n            this.layerMesh[`${volumeSection}_${layer}`] = mesh;\n          }\n        });\n\n        this.scene!.add(obj);\n        this.group = obj;\n        resolve();\n      });\n    });\n  }\n\n  private alignCamera() {\n    const boundingBox = new Box3().setFromObject(this.group!);\n\n    const centerVec = new Vector3();\n    boundingBox.getCenter(centerVec);\n\n    const sizeVec = new Vector3();\n    boundingBox.getSize(sizeVec);\n\n    const size = sizeVec.x;\n\n    this.camera.position.z = centerVec.z;\n    this.camera.position.y = centerVec.y;\n\n    const distance = size / Math.tan(Math.PI * this.camera.fov / 360) * 1.15;\n\n    this.camera.position.x = centerVec.x - distance;\n    this.controls.target = centerVec;\n\n    this.controls.update();\n  }\n\n  private startRenderLoop() {\n    if (this.ctrl.stopped) return;\n\n    if (this.ctrl.render) {\n      this.controls.update();\n      this.renderer.render(this.scene, this.camera);\n    }\n\n    requestAnimationFrame(this.startRenderLoop.bind(this));\n  }\n\n  private canRenderRegionMesh() {\n    return this.volumeSection !== 'region';\n  }\n}\n","import React from 'react';\nimport { color } from './constants';\n\nimport styles from './volume-viewer.module.scss';\n\n\nconst ColoredBox: React.FC<{ cssColor: string }> = ({ cssColor }) => {\n  return (\n    <div\n      className={styles.coloredBox}\n      style={{ '--box-color': cssColor } as React.CSSProperties}\n    />\n  );\n};\n\n\nconst Legend: React.FC = () => {\n  return (\n    <div className={styles.legend}>\n      <div><ColoredBox cssColor={color.SLM} /> SLM</div>\n      <div><ColoredBox cssColor={color.SR} /> SR</div>\n      <div><ColoredBox cssColor={color.SP} /> SP</div>\n      <div><ColoredBox cssColor={color.SO} /> SO</div>\n    </div>\n  );\n};\n\n\nexport default Legend;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen';\nimport { FullscreenOutlined, FullscreenExitOutlined, SettingOutlined, CameraOutlined } from '@ant-design/icons';\nimport { Button, Checkbox, Drawer, Tooltip } from 'antd';\n\nimport { Layer, VolumeSection } from '@/types';\nimport { layers } from '@/constants';\n\nimport VolumeViewer from './volume-viewer';\nimport { color } from './constants';\nimport Legend from './Legend';\n\nimport styles from './volume-viewer.module.scss';\n\nexport type VolumeViewerProps = {\n  meshPath: string;\n  volumeSection: VolumeSection;\n  onReady?: () => void;\n};\n\nconst defaultLayerVisibilityState: Record<Layer, boolean> = {\n  SLM: true,\n  SR: true,\n  SP: true,\n  SO: true,\n};\n\n// using bracket access to make linter not complain about non-existent prop\nconst isFullscreenAvailable = document.fullscreenEnabled || document['webkitFullscreenEnabled'];\n\nconst VolumeViewerComponent: React.FC<VolumeViewerProps> = ({ meshPath, volumeSection, onReady }) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [volumeViewer, setVolumeViewer] = useState<VolumeViewer | null>(null);\n  const [settingDrawerVisible, setSettingDrawerVisible] = useState(false);\n  const fullscreenHandle = useFullScreenHandle();\n\n  const [layerVisibilityState, setLayerVisibilityState] = useState(defaultLayerVisibilityState);\n  const [regionMaskVisible, setRegionMaskVisible] = useState(true);\n\n  const updateLayerVisibility = (layerVisibilityState: Record<Layer, boolean>) => {\n    setLayerVisibilityState(layerVisibilityState);\n    volumeViewer?.setLayerVisibility(layerVisibilityState);\n  };\n\n  const updateRegionMaskVisibility = (visible: boolean) => {\n    setRegionMaskVisible(visible);\n    volumeViewer?.setRegionMaskVisibility(visible);\n  };\n\n  const toggleFullscreen = () => {\n    if (fullscreenHandle.active) {\n      fullscreenHandle.exit();\n    } else {\n      fullscreenHandle.enter();\n    }\n  };\n\n  const downloadRender = () => {\n    const imageName = `volume_render_CA1_${volumeSection}`;\n    volumeViewer?.downloadRender(imageName);\n  };\n\n  useEffect(() => {\n    if (!meshPath || !containerRef.current) return;\n\n    const containerNode = containerRef.current;\n    const viewer = new VolumeViewer(containerNode);\n    setVolumeViewer(viewer);\n\n    viewer.init(meshPath, volumeSection).then(() => {\n      if (onReady) {\n        onReady();\n      }\n    });\n\n    return () => {\n      viewer.destroy();\n    };\n  }, [meshPath, containerRef, volumeSection, onReady]);\n\n  useEffect(() => {\n    if (volumeViewer && volumeSection) {\n      volumeViewer.setVolumeSection(volumeSection, layerVisibilityState);\n    }\n  }, [volumeViewer, volumeSection, layerVisibilityState]);\n\n  return (\n    <div>\n      <FullScreen\n        className={fullscreenHandle.active ? undefined : styles.fixedAspectRatio}\n        handle={fullscreenHandle}\n      >\n        <div className={styles.container} ref={containerRef}>\n          <Tooltip title=\"Viewer settings\">\n            <Button\n              className={styles.settingBtn}\n              size=\"small\"\n              onClick={() => setSettingDrawerVisible(true)}\n              icon={<SettingOutlined />}\n            />\n          </Tooltip>\n\n          <div className={styles.topRightCtrlGroup}>\n            <Tooltip title=\"Download render as a PNG\">\n              <Button\n                size=\"small\"\n                onClick={downloadRender}\n                icon={<CameraOutlined />}\n              />\n            </Tooltip>\n            {isFullscreenAvailable && (\n              <Tooltip title=\"Fullscreen\">\n                <Button\n                  size=\"small\"\n                  className=\"ml-1\"\n                  onClick={toggleFullscreen}\n                  icon={fullscreenHandle.active ? <FullscreenExitOutlined /> : <FullscreenOutlined />}\n                />\n              </Tooltip>\n            )}\n          </div>\n\n          <Legend />\n\n          <Drawer\n            title=\"Viewer settings\"\n            placement=\"left\"\n            closable={true}\n            width={240}\n            onClose={() => setSettingDrawerVisible(false)}\n            open={settingDrawerVisible}\n            getContainer={false}\n            style={{ position: 'absolute' }}\n          >\n            <div>\n              <Checkbox\n                className={styles.coloredCheckbox}\n                style={{ '--checkbox-color': color.REGION } as React.CSSProperties}\n                defaultChecked={regionMaskVisible}\n                onChange={(e) => {\n                  const { checked: visible } = e.target;\n                  updateRegionMaskVisibility(visible);\n                }}\n              >\n                CA1 region mask\n              </Checkbox>\n            </div>\n\n            <h4 className=\"mt-2\">Layers</h4>\n\n            {layers.map(layer => (\n              <div className=\"mt-1\" key={layer}>\n                <Checkbox\n                  className={styles.coloredCheckbox}\n                  style={{ '--checkbox-color': color[layer] } as React.CSSProperties}\n                  defaultChecked={layerVisibilityState[layer]}\n                  onChange={(e) => {\n                    const { checked: visible } = e.target;\n                    updateLayerVisibility({ ...layerVisibilityState, [layer]: visible });\n                  }}\n                >\n                  {layer}\n                </Checkbox>\n              </div>\n            ))}\n          </Drawer>\n        </div>\n      </FullScreen>\n    </div>\n  );\n};\n\nexport default VolumeViewerComponent;"],"names":["RendererCtrl","render","stopped","countinuousRenderCounter","stopTime","now","Date","once","renderOnce","renderFor","time","renderUntilStopped","stop","color","REGION","SLM","SR","SP","SO","parseCssColor","colorStr","parseInt","replace","VolumeViewer","init","meshPath","volumeSection","initCanvas","initRenderer","initScene","initCamera","initControls","initEvents","initObservers","initMaterials","initMeshes","alignCamera","startRenderLoop","ctrl","resize","clientWidth","clientHeight","container","camera","aspect","updateProjectionMatrix","renderer","setSize","setVolumeSection","visibility","Object","entries","layerMesh","forEach","meshKey","mesh","param","meshVolumeSection","layer","match","visible","regionMesh","regionMeshVisible","canRenderRegionMesh","setRegionMaskVisibility","setLayerVisibility","concat","downloadRender","filename","domElement","parentElement","WebGLRenderer","antialias","alpha","preserveDrawingBuffer","physicallyCorrectColors","scene","toBlob","blob","saveAs","dispose","destroy","values","material","geometry","removeEventListener","onUserInteract","resizeObserver","unobserve","controls","canvas","removeChild","document","createElement","appendChild","setPixelRatio","window","devicePixelRatio","Scene","background","Color","add","AmbientLight","PerspectiveCamera","PointLight","TrackballControls","enableDamping","zoomSpeed","rotateSpeed","maxDistance","params","capture","passive","throttle","bind","addEventListener","ResizeObserver","setTimeout","observe","MeshLambertMaterial","wireframe","transparent","opacity","side","DoubleSide","loader","OBJLoader","Promise","load","obj","traverse","isMesh","name","group","resolve","boundingBox","Box3","setFromObject","centerVec","Vector3","getCenter","sizeVec","getSize","size","x","position","z","y","distance","Math","tan","PI","fov","target","update","requestAnimationFrame","constructor","ColoredBox","cssColor","jsx_runtime","jsx","div","className","styles","style","volume_viewer_Legend","jsxs","defaultLayerVisibilityState","isFullscreenAvailable","fullscreenEnabled","volume_viewer_VolumeViewer","onReady","containerRef","useRef","volumeViewer","setVolumeViewer","useState","settingDrawerVisible","setSettingDrawerVisible","fullscreenHandle","useFullScreenHandle","layerVisibilityState","setLayerVisibilityState","regionMaskVisible","setRegionMaskVisible","updateLayerVisibility","updateRegionMaskVisibility","useEffect","current","containerNode","viewer","then","FullScreen","active","undefined","handle","ref","Tooltip","title","Button","onClick","icon","SettingOutlined","imageName","CameraOutlined","exit","enter","FullscreenExitOutlined","FullscreenOutlined","Legend","Drawer","placement","closable","width","onClose","open","getContainer","Checkbox","defaultChecked","onChange","checked","e","h4","layers","map"],"sourceRoot":""}