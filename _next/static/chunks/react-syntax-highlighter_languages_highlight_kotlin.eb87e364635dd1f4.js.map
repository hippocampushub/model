{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_highlight_kotlin.eb87e364635dd1f4.js","mappings":"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","sources":["webpack://_N_E/./node_modules/highlight.js/lib/languages/kotlin.js","webpack://_N_E/<anon>"],"sourcesContent":["// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\n Language: Kotlin\n Description: Kotlin is an OSS statically typed programming language that targets the JVM, Android, JavaScript and Native.\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\n Website: https://kotlinlang.org\n Category: common\n */\n\nfunction kotlin(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'abstract as val var vararg get set class object open private protected public noinline ' +\n      'crossinline dynamic final enum if else do while for when throw try catch finally ' +\n      'import package is in fun override companion reified inline lateinit init ' +\n      'interface annotation data sealed internal infix operator out by constructor super ' +\n      'tailrec where const inner suspend typealias external expect actual',\n    built_in:\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal:\n      'true false null'\n  };\n  const KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: {\n      contains: [\n        {\n          className: 'symbol',\n          begin: /@\\w+/\n        }\n      ]\n    }\n  };\n  const LABEL = {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  };\n\n  // for string templates\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [ hljs.C_NUMBER_MODE ]\n  };\n  const VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"(?=[^\"])',\n        contains: [\n          VARIABLE,\n          SUBST\n        ]\n      },\n      // Can't use built-in modes easily, as we want to use STRING in the meta\n      // context as 'meta-string' and there's no syntax to remove explicitly set\n      // classNames in built-in modes.\n      {\n        begin: '\\'',\n        end: '\\'',\n        illegal: /\\n/,\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '\"',\n        end: '\"',\n        illegal: /\\n/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          VARIABLE,\n          SUBST\n        ]\n      }\n    ]\n  };\n  SUBST.contains.push(STRING);\n\n  const ANNOTATION_USE_SITE = {\n    className: 'meta',\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          hljs.inherit(STRING, {\n            className: 'meta-string'\n          })\n        ]\n      }\n    ]\n  };\n\n  // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n  const KOTLIN_NUMBER_MODE = NUMERIC;\n  const KOTLIN_NESTED_COMMENT = hljs.COMMENT(\n    '/\\\\*', '\\\\*/',\n    {\n      contains: [ hljs.C_BLOCK_COMMENT_MODE ]\n    }\n  );\n  const KOTLIN_PAREN_TYPE = {\n    variants: [\n      {\n        className: 'type',\n        begin: hljs.UNDERSCORE_IDENT_RE\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [] // defined later\n      }\n    ]\n  };\n  const KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [ KOTLIN_PAREN_TYPE ];\n  KOTLIN_PAREN_TYPE.variants[1].contains = [ KOTLIN_PAREN_TYPE2 ];\n\n  return {\n    name: 'Kotlin',\n    aliases: [ 'kt', 'kts' ],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      KOTLIN_NESTED_COMMENT,\n      KEYWORDS_WITH_LABEL,\n      LABEL,\n      ANNOTATION_USE_SITE,\n      ANNOTATION,\n      {\n        className: 'function',\n        beginKeywords: 'fun',\n        end: '[(]|$',\n        returnBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        relevance: 5,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            returnBegin: true,\n            relevance: 0,\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n          },\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            keywords: 'reified',\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              {\n                begin: /:/,\n                end: /[=,\\/]/,\n                endsWithParent: true,\n                contains: [\n                  KOTLIN_PAREN_TYPE,\n                  hljs.C_LINE_COMMENT_MODE,\n                  KOTLIN_NESTED_COMMENT\n                ],\n                relevance: 0\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              KOTLIN_NESTED_COMMENT,\n              ANNOTATION_USE_SITE,\n              ANNOTATION,\n              STRING,\n              hljs.C_NUMBER_MODE\n            ]\n          },\n          KOTLIN_NESTED_COMMENT\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface trait', // remove 'trait' when removed from KEYWORDS\n        end: /[:\\{(]|$/,\n        excludeEnd: true,\n        illegal: 'extends implements',\n        contains: [\n          {\n            beginKeywords: 'public protected internal private constructor'\n          },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'type',\n            begin: /[,:]\\s*/,\n            end: /[<\\(,]|$/,\n            excludeBegin: true,\n            returnEnd: true\n          },\n          ANNOTATION_USE_SITE,\n          ANNOTATION\n        ]\n      },\n      STRING,\n      {\n        className: 'meta',\n        begin: \"^#!/usr/bin/env\",\n        end: '$',\n        illegal: '\\n'\n      },\n      KOTLIN_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = kotlin;\n"],"names":["decimalDigits","frac","hexDigits","NUMERIC","className","variants","begin","relevance","module","exports","hljs","KEYWORDS","keyword","built_in","literal","LABEL","UNDERSCORE_IDENT_RE","SUBST","end","contains","C_NUMBER_MODE","VARIABLE","STRING","illegal","BACKSLASH_ESCAPE","push","ANNOTATION_USE_SITE","ANNOTATION","inherit","KOTLIN_NESTED_COMMENT","COMMENT","C_BLOCK_COMMENT_MODE","KOTLIN_PAREN_TYPE","KOTLIN_PAREN_TYPE2","name","aliases","keywords","C_LINE_COMMENT_MODE","starts","beginKeywords","returnBegin","excludeEnd","UNDERSCORE_TITLE_MODE","endsParent","endsWithParent","excludeBegin","returnEnd"],"sourceRoot":""}