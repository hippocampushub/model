{"version":3,"file":"static/chunks/36bcf0ca-8ee169ffec8b986a.js","mappings":"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","sources":["webpack://_N_E/./node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.7.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","d","animationOptions","Object","keys","_fallback","_indexable","_scriptable","name","colors","properties","numbers","animation","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","l","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","getPixelForDecimal","vPixel","skip","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","rotation","_getCircumference","circumference","_getRotationExtents","T","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","call","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","startsWith","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","borderJoinStyle","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","version","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","decodeFill","fillOption","parseFillOption","parseFloat","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","findSegmentEnd","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","linePoints","firstValue","lastValue","getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","createBoundaryLine","buildStackLine","boundary","pointsFromSegments","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","lineLoop","targetLoop","drawfill","lineOpts","above","doFill","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","labelCount","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}