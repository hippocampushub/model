{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_highlight_asciidoc.7d6c628c799673f9.js","mappings":"waAoBA,SAAAA,OAAA,GAAAC,CAAA,EACA,IAAAC,EAAAD,EAAAE,GAAA,IAXA,EACA,iBAUAC,EAAAA,EARAC,EAAAC,MAAA,CAHA,MAWAC,IAAA,KACA,OAAAL,CACA,CAuRAM,EAAAC,OAAA,CA3QA,SAAAC,CAAA,EA4BA,IAAAC,EAAA,CAEA,CACAC,UAAA,SACAC,MAAA,qBACA,EAEA,CACAD,UAAA,SACAC,MAAAb,OACA,OACA,oCACA,+BACA,QAEAc,UAAA,CACA,EAEA,CACAF,UAAA,SAEAC,MAAA,8BACA,EAEA,CACAD,UAAA,SAEAC,MAAA,8BACA,EACA,CACAE,EAAA,CAEA,CACAH,UAAA,WACAC,MAAA,mBACA,EAEA,CACAD,UAAA,WACAC,MAAAb,OACA,KACA,kCACA,6BACA,MAEAc,UAAA,CACA,EAEA,CACAF,UAAA,WAEAC,MAAA,4BACA,EAEA,CACAD,UAAA,WAEAC,MAAA,4BACA,EAEA,CACAD,UAAA,WAEAC,MAAA,iBACAG,IAAA,aAEAC,SAAA,EACAJ,MAAA,WACAC,UAAA,CACA,EAAO,CACPA,UAAA,CACA,EACA,CAWA,OACAI,KAAA,WACAC,QAAA,SACAF,SAAA,CAEAP,EAAAU,OAAA,CACA,YACA,YAIA,CACAN,UAAA,EACA,GAGAJ,EAAAU,OAAA,CACA,MACA,IACA,CACAN,UAAA,CACA,GAGA,CACAF,UAAA,QACAC,MAAA,YACA,EAEA,CACAA,MAAA,iBACAG,IAAA,kBACAF,UAAA,EACA,EAEA,CACAF,UAAA,UACAE,UAAA,GACAO,SAAA,CACA,CACAR,MAAA,6BACA,EACA,CACAA,MAAA,sCACA,EACA,EAGA,CACAD,UAAA,OACAC,MAAA,SACAG,IAAA,MACAM,WAAA,GACAR,UAAA,EACA,EAEA,CACAF,UAAA,OACAC,MAAA,cACAC,UAAA,CACA,EAEA,CACAF,UAAA,QACAC,MAAA,YACAG,IAAA,YACAF,UAAA,EACA,EAEA,CACAF,UAAA,OACAC,MAAA,mBACAG,IAAA,mBACAF,UAAA,EACA,EAEA,CACAD,MAAA,cACAG,IAAA,cACAC,SAAA,EACAJ,MAAA,IACAG,IAAA,IACAO,YAAA,MACAT,UAAA,CACA,EAAS,CACTA,UAAA,EACA,EA3FA,CACAF,UAAA,SACAC,MAAA,gCACA,EARA,CACAD,UAAA,SACAC,MAAA,6CACAC,UAAA,EACA,EAlGA,CACAD,MAAA,SACA,EAIA,CACAA,MAAA,uBACA,EACA,CACAA,MAAA,oBACA,EACA,CACAA,MAAA,oBACA,EAGA,CACAA,MAAA,qBACA,KAgLAF,KACAI,EAGA,CACAH,UAAA,SACAS,SAAA,CACA,CACAR,MAAA,SACA,EACA,CACAA,MAAA,OACA,EACA,EAGA,CACAD,UAAA,OACAC,MAAA,OACAG,IAAA,cACA,EAEA,CACAJ,UAAA,OACAC,MAAA,oBACAC,UAAA,CACA,EAEA,CACAF,UAAA,OACAC,MAAA,UACAG,IAAA,IACAF,UAAA,CACA,EA1OA,CACAD,MAAA,iBACAC,UAAA,EACA,EA0OA,CACAD,MAAA,8DACAW,YAAA,GACAP,SAAA,CACA,CACAJ,MAAA,kBACAC,UAAA,CACA,EACA,CACAF,UAAA,OACAC,MAAA,MACAG,IAAA,UACAF,UAAA,CACA,EACA,CACAF,UAAA,SACAC,MAAA,MACAG,IAAA,MACAS,aAAA,GACAH,WAAA,GACAR,UAAA,CACA,EACA,CACAA,UAAA,EACA,EACA,CAEA","sources":["webpack://_N_E/./node_modules/highlight.js/lib/languages/asciidoc.js","webpack://_N_E/<anon>"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: AsciiDoc\nRequires: xml.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://asciidoc.org\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\nCategory: markup\n*/\n\n/** @type LanguageFn */\nfunction asciidoc(hljs) {\n  const HORIZONTAL_RULE = {\n    begin: '^\\'{3,}[ \\\\t]*$',\n    relevance: 10\n  };\n  const ESCAPED_FORMATTING = [\n    // escaped constrained formatting marks (i.e., \\* \\_ or \\`)\n    {\n      begin: /\\\\[*_`]/\n    },\n    // escaped unconstrained formatting marks (i.e., \\\\** \\\\__ or \\\\``)\n    // must ignore until the next formatting marks\n    // this rule might not be 100% compliant with Asciidoctor 2.0 but we are entering undefined behavior territory...\n    {\n      begin: /\\\\\\\\\\*{2}[^\\n]*?\\*{2}/\n    },\n    {\n      begin: /\\\\\\\\_{2}[^\\n]*_{2}/\n    },\n    {\n      begin: /\\\\\\\\`{2}[^\\n]*`{2}/\n    },\n    // guard: constrained formatting mark may not be preceded by \":\", \";\" or\n    // \"}\". match these so the constrained rule doesn't see them\n    {\n      begin: /[:;}][*_`](?![*_`])/\n    }\n  ];\n  const STRONG = [\n    // inline unconstrained strong (single line)\n    {\n      className: 'strong',\n      begin: /\\*{2}([^\\n]+?)\\*{2}/\n    },\n    // inline unconstrained strong (multi-line)\n    {\n      className: 'strong',\n      begin: concat(\n        /\\*\\*/,\n        /((\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])+\\n)+/,\n        /(\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])*/,\n        /\\*\\*/\n      ),\n      relevance: 0\n    },\n    // inline constrained strong (single line)\n    {\n      className: 'strong',\n      // must not precede or follow a word character\n      begin: /\\B\\*(\\S|\\S[^\\n]*?\\S)\\*(?!\\w)/\n    },\n    // inline constrained strong (multi-line)\n    {\n      className: 'strong',\n      // must not precede or follow a word character\n      begin: /\\*[^\\s]([^\\n]+\\n)+([^\\n]+)\\*/\n    }\n  ];\n  const EMPHASIS = [\n    // inline unconstrained emphasis (single line)\n    {\n      className: 'emphasis',\n      begin: /_{2}([^\\n]+?)_{2}/\n    },\n    // inline unconstrained emphasis (multi-line)\n    {\n      className: 'emphasis',\n      begin: concat(\n        /__/,\n        /((_(?!_)|\\\\[^\\n]|[^_\\n\\\\])+\\n)+/,\n        /(_(?!_)|\\\\[^\\n]|[^_\\n\\\\])*/,\n        /__/\n      ),\n      relevance: 0\n    },\n    // inline constrained emphasis (single line)\n    {\n      className: 'emphasis',\n      // must not precede or follow a word character\n      begin: /\\b_(\\S|\\S[^\\n]*?\\S)_(?!\\w)/\n    },\n    // inline constrained emphasis (multi-line)\n    {\n      className: 'emphasis',\n      // must not precede or follow a word character\n      begin: /_[^\\s]([^\\n]+\\n)+([^\\n]+)_/\n    },\n    // inline constrained emphasis using single quote (legacy)\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by a single quote or space\n      begin: '\\\\B\\'(?![\\'\\\\s])',\n      end: '(\\\\n{2}|\\')',\n      // allow escaped single quote followed by word char\n      contains: [{\n        begin: '\\\\\\\\\\'\\\\w',\n        relevance: 0\n      }],\n      relevance: 0\n    }\n  ];\n  const ADMONITION = {\n    className: 'symbol',\n    begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n    relevance: 10\n  };\n  const BULLET_LIST = {\n    className: 'bullet',\n    begin: '^(\\\\*+|-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n  };\n\n  return {\n    name: 'AsciiDoc',\n    aliases: ['adoc'],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        // '^/{4,}$',\n        // '^/{4,}$',\n        {\n          relevance: 10\n        }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'section',\n        relevance: 10,\n        variants: [\n          {\n            begin: '^(={1,6})[ \\t].+?([ \\t]\\\\1)?$'\n          },\n          {\n            begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'\n          }\n        ]\n      },\n      // document attributes\n      {\n        className: 'meta',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'meta',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'quote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [{\n          begin: '<',\n          end: '>',\n          subLanguage: 'xml',\n          relevance: 0\n        }],\n        relevance: 10\n      },\n\n      BULLET_LIST,\n      ADMONITION,\n      ...ESCAPED_FORMATTING,\n      ...STRONG,\n      ...EMPHASIS,\n\n      // inline smart quotes\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: \"``.+?''\"\n          },\n          {\n            begin: \"`.+?'\"\n          }\n        ]\n      },\n      // inline unconstrained emphasis\n      {\n        className: 'code',\n        begin: /`{2}/,\n        end: /(\\n{2}|`{2})/\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      HORIZONTAL_RULE,\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+?\\\\[[^[]*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n}\n\nmodule.exports = asciidoc;\n"],"names":["concat","args","joined","map","x","re","source","join","module","exports","hljs","STRONG","className","begin","relevance","EMPHASIS","end","contains","name","aliases","COMMENT","variants","excludeEnd","subLanguage","returnBegin","excludeBegin"],"sourceRoot":""}