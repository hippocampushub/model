{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_highlight_dts.c4c0bfafe53c22ce.js","mappings":"waAwJAA,EAAAC,OAAA,CA/IA,SAAAC,CAAA,EACA,IAAAC,EAAA,CACAC,UAAA,SACAC,SAAA,CACAH,EAAAI,OAAA,CAAAJ,EAAAK,iBAAA,EACAC,MAAA,eACA,GACA,CACAA,MAAA,aACAC,IAAA,IACAC,SAAA,CAAAR,EAAAS,gBAAA,GAEA,CACAH,MAAA,UACAC,IAAA,IACAG,QAAA,GACA,EACA,EAGAC,EAAA,CACAT,UAAA,SACAC,SAAA,CACA,CACAG,MAAA,gDACA,EACA,CACAA,MAAAN,EAAAY,WAAA,EAEA,CACAC,UAAA,CACA,EAEAC,EAAA,CACAZ,UAAA,OACAI,MAAA,IACAC,IAAA,IACAQ,SAAA,CACA,6DACA,EACAP,SAAA,CACA,CACAF,MAAA,OACAO,UAAA,CACA,EACA,CACAG,cAAA,UACAT,IAAA,IACAQ,SAAA,CACA,wBACA,EACAP,SAAA,CACAR,EAAAI,OAAA,CAAAH,EAAA,CACAC,UAAA,aACA,GACA,CACAA,UAAA,cACAI,MAAA,IACAC,IAAA,IACAG,QAAA,KACA,EACA,EAEAT,EACAD,EAAAiB,mBAAA,CACAjB,EAAAkB,oBAAA,CACA,EAGAC,EAAA,CACAjB,UAAA,WACAI,MAAA,cACA,EAEAc,EAAA,CACAlB,UAAA,eACAI,MAAA,mBACA,EAEAe,EAAA,CACAnB,UAAA,SACAI,MAAA,8BACA,EAEAgB,EAAA,CACApB,UAAA,SACAI,MAAA,IACAC,IAAA,IACAC,SAAA,CACAG,EACAQ,EACA,EAGAI,EAAA,CACArB,UAAA,QACAI,MAAA,6BACAC,IAAA,QACAiB,YAAA,GACAC,WAAA,EACA,EAEAC,EAAA,CACAxB,UAAA,QACAI,MAAA,WACAC,IAAA,MACAM,UAAA,GACAL,SAAA,CACAW,EACAC,EACAC,EACAE,EACAD,EACAtB,EAAAiB,mBAAA,CACAjB,EAAAkB,oBAAA,CACAP,EACAV,EACA,EAGA,OACA0B,KAAA,cACAZ,SAAA,GACAP,SAAA,CACAkB,EACAP,EACAC,EACAC,EACAE,EACAD,EACAtB,EAAAiB,mBAAA,CACAjB,EAAAkB,oBAAA,CACAP,EACAV,EACAa,EACA,CACAR,MAAAN,EAAA4B,QAAA,MACAb,SAAA,EACA,EACA,CAEA","sources":["webpack://_N_E/./node_modules/highlight.js/lib/languages/dts.js","webpack://_N_E/<anon>"],"sourcesContent":["/*\nLanguage: Device Tree\nDescription: *.dts files used in the Linux kernel\nAuthor: Martin Braun <martin.braun@ettus.com>, Moritz Fischer <moritz.fischer@ettus.com>\nWebsite: https://elinux.org/Device_Tree_Reference\nCategory: config\n*/\n\n/** @type LanguageFn */\nfunction dts(hljs) {\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: '((u8?|U)|L)?\"'\n      }),\n      {\n        begin: '(u8?|U)?R\"',\n        end: '\"',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\\'\\\\\\\\?.',\n        end: '\\'',\n        illegal: '.'\n      }\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)'\n      },\n      {\n        begin: hljs.C_NUMBER_RE\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '#',\n    end: '$',\n    keywords: {\n      'meta-keyword': 'if else elif endif define undef ifdef ifndef'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      {\n        beginKeywords: 'include',\n        end: '$',\n        keywords: {\n          'meta-keyword': 'include'\n        },\n        contains: [\n          hljs.inherit(STRINGS, {\n            className: 'meta-string'\n          }),\n          {\n            className: 'meta-string',\n            begin: '<',\n            end: '>',\n            illegal: '\\\\n'\n          }\n        ]\n      },\n      STRINGS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const DTS_REFERENCE = {\n    className: 'variable',\n    begin: /&[a-z\\d_]*\\b/\n  };\n\n  const DTS_KEYWORD = {\n    className: 'meta-keyword',\n    begin: '/[a-z][a-z\\\\d-]*/'\n  };\n\n  const DTS_LABEL = {\n    className: 'symbol',\n    begin: '^\\\\s*[a-zA-Z_][a-zA-Z\\\\d_]*:'\n  };\n\n  const DTS_CELL_PROPERTY = {\n    className: 'params',\n    begin: '<',\n    end: '>',\n    contains: [\n      NUMBERS,\n      DTS_REFERENCE\n    ]\n  };\n\n  const DTS_NODE = {\n    className: 'class',\n    begin: /[a-zA-Z_][a-zA-Z\\d_@]*\\s\\{/,\n    end: /[{;=]/,\n    returnBegin: true,\n    excludeEnd: true\n  };\n\n  const DTS_ROOT_NODE = {\n    className: 'class',\n    begin: '/\\\\s*\\\\{',\n    end: /\\};/,\n    relevance: 10,\n    contains: [\n      DTS_REFERENCE,\n      DTS_KEYWORD,\n      DTS_LABEL,\n      DTS_NODE,\n      DTS_CELL_PROPERTY,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBERS,\n      STRINGS\n    ]\n  };\n\n  return {\n    name: 'Device Tree',\n    keywords: \"\",\n    contains: [\n      DTS_ROOT_NODE,\n      DTS_REFERENCE,\n      DTS_KEYWORD,\n      DTS_LABEL,\n      DTS_NODE,\n      DTS_CELL_PROPERTY,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBERS,\n      STRINGS,\n      PREPROCESSOR,\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: \"\"\n      }\n    ]\n  };\n}\n\nmodule.exports = dts;\n"],"names":["module","exports","hljs","STRINGS","className","variants","inherit","QUOTE_STRING_MODE","begin","end","contains","BACKSLASH_ESCAPE","illegal","NUMBERS","C_NUMBER_RE","relevance","PREPROCESSOR","keywords","beginKeywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","DTS_REFERENCE","DTS_KEYWORD","DTS_LABEL","DTS_CELL_PROPERTY","DTS_NODE","returnBegin","excludeEnd","DTS_ROOT_NODE","name","IDENT_RE"],"sourceRoot":""}