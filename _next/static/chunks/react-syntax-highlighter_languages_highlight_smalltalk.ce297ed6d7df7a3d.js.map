{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_highlight_smalltalk.ce297ed6d7df7a3d.js","mappings":"waA8DAA,EAAAC,OAAA,CAvDA,SAAAC,CAAA,EACA,IAAAC,EAAA,qBACAC,EAAA,CACAC,UAAA,SACAC,MAAA,SACA,EACAC,EAAA,CACAF,UAAA,SACAC,MAAA,IAAAJ,EAAAM,mBAAA,EAEA,OACAC,KAAA,YACAC,QAAA,OACAC,SAAA,wCACAC,SAAA,CACAV,EAAAW,OAAA,UACAX,EAAAY,gBAAA,CACA,CACAT,UAAA,OACAC,MAAA,wBACAS,UAAA,CACA,EACA,CACAT,MAAAH,EAAA,IACAY,UAAA,CACA,EACAb,EAAAc,aAAA,CACAT,EACAH,EACA,CAIAE,MAAA,UAAAH,EAAA,QAAAA,EAAA,YACAc,YAAA,GACAC,IAAA,KACAC,QAAA,KACAP,SAAA,EACAN,MAAA,aAAAH,CACA,EAAU,EAEV,CACAG,MAAA,OACAY,IAAA,MACAN,SAAA,CACAV,EAAAY,gBAAA,CACAV,EACAF,EAAAc,aAAA,CACAT,EACA,EAEA,CAEA","sources":["webpack://_N_E/./node_modules/highlight.js/lib/languages/smalltalk.js","webpack://_N_E/<anon>"],"sourcesContent":["/*\nLanguage: Smalltalk\nDescription: Smalltalk is an object-oriented, dynamically typed reflective programming language.\nAuthor: Vladimir Gubarkov <xonixx@gmail.com>\nWebsite: https://en.wikipedia.org/wiki/Smalltalk\n*/\n\nfunction smalltalk(hljs) {\n  const VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  const CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  const SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    name: 'Smalltalk',\n    aliases: [ 'st' ],\n    keywords: 'self super nil true false thisContext', // only 6\n    contains: [\n      hljs.COMMENT('\"', '\"'),\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n        relevance: 0\n      },\n      {\n        begin: VAR_IDENT_RE + ':',\n        relevance: 0\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOL,\n      CHAR,\n      {\n        // This looks more complicated than needed to avoid combinatorial\n        // explosion under V8. It effectively means `| var1 var2 ... |` with\n        // whitespace adjacent to `|` being optional.\n        begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n        returnBegin: true,\n        end: /\\|/,\n        illegal: /\\S/,\n        contains: [ {\n          begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE\n        } ]\n      },\n      {\n        begin: '#\\\\(',\n        end: '\\\\)',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          CHAR,\n          hljs.C_NUMBER_MODE,\n          SYMBOL\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = smalltalk;\n"],"names":["module","exports","hljs","VAR_IDENT_RE","CHAR","className","begin","SYMBOL","UNDERSCORE_IDENT_RE","name","aliases","keywords","contains","COMMENT","APOS_STRING_MODE","relevance","C_NUMBER_MODE","returnBegin","end","illegal"],"sourceRoot":""}