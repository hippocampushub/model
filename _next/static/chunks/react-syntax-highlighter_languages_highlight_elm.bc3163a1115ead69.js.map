{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_highlight_elm.bc3163a1115ead69.js","mappings":"waAgIAA,EAAAC,OAAA,CAxHA,SAAAC,CAAA,EACA,IAAAC,EAAA,CACAC,SAAA,CACAF,EAAAC,OAAA,WACAD,EAAAC,OAAA,CACA,MACA,MACA,CACAE,SAAA,WAGA,EAGAC,EAAA,CACAC,UAAA,OACAC,MAAA,kBACAC,UAAA,CACA,EAEAC,EAAA,CACAF,MAAA,MACAG,IAAA,MACAC,QAAA,IACAP,SAAA,CACA,CACAE,UAAA,OACAC,MAAA,wCACA,EACAL,EACA,EAGAU,EAAA,CACAL,MAAA,KACAG,IAAA,KACAN,SAAAK,EAAAL,QAAA,EAUA,OACAS,KAAA,MACAC,SACA,8HAEAV,SAAA,CAIA,CACAW,cAAA,qBACAL,IAAA,WACAI,SAAA,yDACAV,SAAA,CACAK,EACAP,EACA,CACAS,QAAA,UACA,EACA,CACAJ,MAAA,SACAG,IAAA,IACAI,SAAA,qBACAV,SAAA,CACAK,EACAP,EACA,CACAS,QAAA,UACA,EACA,CACAJ,MAAA,OACAG,IAAA,IACAI,SAAA,aACAV,SAAA,CACAC,EACAI,EACAG,EACAV,EACA,EAEA,CACAa,cAAA,sBACAL,IAAA,IACAN,SAAA,CACAH,EAAAe,aAAA,CACAd,EACA,EAEA,CACAK,MAAA,OACAG,IAAA,IACAI,SAAA,OACAV,SAAA,CAAAF,EAAA,EA3DA,CACAI,UAAA,SACAC,MAAA,UACAG,IAAA,IACAC,QAAA,GACA,EA4DAV,EAAAgB,iBAAA,CACAhB,EAAAe,aAAA,CACAX,EACAJ,EAAAiB,OAAA,CAAAjB,EAAAkB,UAAA,EACAZ,MAAA,gBACA,GACAL,EAEA,CACAK,MAAA,OACA,EACA,CACAI,QAAA,GACA,CACA","sources":["webpack://_N_E/./node_modules/highlight.js/lib/languages/elm.js","webpack://_N_E/<anon>"],"sourcesContent":["/*\nLanguage: Elm\nAuthor: Janis Voigtlaender <janis.voigtlaender@gmail.com>\nWebsite: https://elm-lang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction elm(hljs) {\n  const COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        /\\{-/,\n        /-\\}/,\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n      },\n      COMMENT\n    ]\n  };\n\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n\n  const CHARACTER = {\n    className: 'string',\n    begin: '\\'\\\\\\\\?.',\n    end: '\\'',\n    illegal: '.'\n  };\n\n  return {\n    name: 'Elm',\n    keywords:\n      'let in if then else case of where module import exposing ' +\n      'type alias as infix infixl infixr port effect command subscription',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'port effect module',\n        end: 'exposing',\n        keywords: 'port effect module where command subscription exposing',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'import',\n        end: '$',\n        keywords: 'import as exposing',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'type',\n        end: '$',\n        keywords: 'type alias',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          RECORD,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'infix infixl infixr',\n        end: '$',\n        contains: [\n          hljs.C_NUMBER_MODE,\n          COMMENT\n        ]\n      },\n      {\n        begin: 'port',\n        end: '$',\n        keywords: 'port',\n        contains: [COMMENT]\n      },\n\n      // Literals and names.\n\n      CHARACTER,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: '^[_a-z][\\\\w\\']*'\n      }),\n      COMMENT,\n\n      {\n        begin: '->|<-'\n      } // No markup, relevance booster\n    ],\n    illegal: /;/\n  };\n}\n\nmodule.exports = elm;\n"],"names":["module","exports","hljs","COMMENT","variants","contains","CONSTRUCTOR","className","begin","relevance","LIST","end","illegal","RECORD","name","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE","inherit","TITLE_MODE"],"sourceRoot":""}