{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_highlight_apache.f2472867c9544b70.js","mappings":"waAwFAA,EAAAC,OAAA,CA7EA,SAAAC,CAAA,EASA,IAAAC,EAAA,CACAC,UAAA,SACAC,MAAA,+CACA,EAKA,OACAC,KAAA,gBACAC,QAAA,eACAC,iBAAA,GACAC,SAAA,CACAP,EAAAQ,iBAAA,CACA,CACAN,UAAA,UACAC,MAAA,OACAM,IAAA,IACAF,SAAA,CACAN,EAfA,CACAC,UAAA,SACAC,MAAA,UACA,EAgBAH,EAAAU,OAAA,CAAAV,EAAAW,iBAAA,EAAiDC,UAAA,IACjD,EAEA,CACAV,UAAA,YACAC,MAAA,MACAS,UAAA,EAGAC,SAAA,CACAC,SACA,4JAGA,EACAC,OAAA,CACAN,IAAA,IACAG,UAAA,EACAC,SAAA,CAAsBG,QAAA,yBACtBT,SAAA,CACA,CACAL,UAAA,OACAC,MAAA,OACAM,IAAA,KACA,EACA,CACAP,UAAA,WACAC,MAAA,UACAM,IAAA,KACAF,SAAA,CACA,OA7DA,CACAL,UAAA,SACAC,MAAA,SACA,EA4DA,EAEAF,EA7DA,CACAC,UAAA,SACAC,MAAA,KACA,EA4DAH,EAAAW,iBAAA,CACA,CAEA,EACA,CACAM,QAAA,IACA,CACA","sources":["webpack://_N_E/./node_modules/highlight.js/lib/languages/apache.js","webpack://_N_E/<anon>"],"sourcesContent":["/*\nLanguage: Apache config\nAuthor: Ruslan Keba <rukeba@gmail.com>\nContributors: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://httpd.apache.org\nDescription: language definition for Apache configuration files (httpd.conf & .htaccess)\nCategory: common, config\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction apache(hljs) {\n  const NUMBER_REF = {\n    className: 'number',\n    begin: /[$%]\\d+/\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: /\\d+/\n  };\n  const IP_ADDRESS = {\n    className: \"number\",\n    begin: /\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?/\n  };\n  const PORT_NUMBER = {\n    className: \"number\",\n    begin: /:\\d{1,5}/\n  };\n  return {\n    name: 'Apache config',\n    aliases: [ 'apacheconf' ],\n    case_insensitive: true,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'section',\n        begin: /<\\/?/,\n        end: />/,\n        contains: [\n          IP_ADDRESS,\n          PORT_NUMBER,\n          // low relevance prevents us from claming XML/HTML where this rule would\n          // match strings inside of XML tags\n          hljs.inherit(hljs.QUOTE_STRING_MODE, { relevance: 0 })\n        ]\n      },\n      {\n        className: 'attribute',\n        begin: /\\w+/,\n        relevance: 0,\n        // keywords arenâ€™t needed for highlighting per se, they only boost relevance\n        // for a very generally defined mode (starts with a word, ends with line-end\n        keywords: {\n          nomarkup:\n            'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +\n            'sethandler errordocument loadmodule options header listen serverroot ' +\n            'servername'\n        },\n        starts: {\n          end: /$/,\n          relevance: 0,\n          keywords: { literal: 'on off all deny allow' },\n          contains: [\n            {\n              className: 'meta',\n              begin: /\\s\\[/,\n              end: /\\]$/\n            },\n            {\n              className: 'variable',\n              begin: /[\\$%]\\{/,\n              end: /\\}/,\n              contains: [\n                'self',\n                NUMBER_REF\n              ]\n            },\n            IP_ADDRESS,\n            NUMBER,\n            hljs.QUOTE_STRING_MODE\n          ]\n        }\n      }\n    ],\n    illegal: /\\S/\n  };\n}\n\nmodule.exports = apache;\n"],"names":["module","exports","hljs","IP_ADDRESS","className","begin","name","aliases","case_insensitive","contains","HASH_COMMENT_MODE","end","inherit","QUOTE_STRING_MODE","relevance","keywords","nomarkup","starts","literal","illegal"],"sourceRoot":""}