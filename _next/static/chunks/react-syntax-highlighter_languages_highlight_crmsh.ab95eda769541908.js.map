{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_highlight_crmsh.ab95eda769541908.js","mappings":"waAqGAA,EAAAC,OAAA,CA5FA,SAAAC,CAAA,EAEA,IAAAC,EAAA,qHAWA,OACAC,KAAA,QACAC,QAAA,CACA,MACA,OACA,CACAC,iBAAA,GACAC,SAAA,CACAC,QAAAC,6MACAC,QAXA,2EAYA,EACAC,SAAA,CACAT,EAAAU,iBAAA,CACA,CACAC,cAAA,OACAC,OAAA,CACAC,IAAA,mBACAD,OAAA,CACAE,UAAA,QACAD,IAAA,uBACA,CACA,CACA,EACA,CACAF,cApCA,yBAqCAC,OAAA,CACAE,UAAA,QACAD,IAAA,wBACAD,OAAA,CACAC,IAAA,0BACA,CACA,CACA,EACA,CACAE,MAAA,OAAAd,EAAAe,KAAA,MAAAC,IAAA,cACAZ,SAAAJ,EACAW,OAAA,CACAE,UAAA,QACAD,IAAA,mBACA,CACA,EACA,CACAF,cAlDA,oCAmDAC,OAAA,CACAE,UAAA,QACAD,IAAA,kBACA,CACA,EACAb,EAAAkB,iBAAA,CACA,CACAJ,UAAA,OACAC,MAAA,sCACAI,UAAA,CACA,EACA,CACAL,UAAA,SACAC,MAAA,+BACAI,UAAA,CACA,EACA,CACAL,UAAA,UACAC,MAAA,qBACAI,UAAA,CACA,EACA,CACAL,UAAA,OACAC,MAAA,wBACAI,UAAA,CACA,EACA,CACAL,UAAA,MACAC,MAAA,MACAF,IAAA,MACAM,UAAA,CACA,EACA,CAEA","sources":["webpack://_N_E/./node_modules/highlight.js/lib/languages/crmsh.js","webpack://_N_E/<anon>"],"sourcesContent":["/*\nLanguage: crmsh\nAuthor: Kristoffer Gronlund <kgronlund@suse.com>\nWebsite: http://crmsh.github.io\nDescription: Syntax Highlighting for the crmsh DSL\nCategory: config\n*/\n\n/** @type LanguageFn */\nfunction crmsh(hljs) {\n  const RESOURCES = 'primitive rsc_template';\n  const COMMANDS = 'group clone ms master location colocation order fencing_topology ' +\n      'rsc_ticket acl_target acl_group user role ' +\n      'tag xml';\n  const PROPERTY_SETS = 'property rsc_defaults op_defaults';\n  const KEYWORDS = 'params meta operations op rule attributes utilization';\n  const OPERATORS = 'read write deny defined not_defined in_range date spec in ' +\n      'ref reference attribute type xpath version and or lt gt tag ' +\n      'lte gte eq ne \\\\';\n  const TYPES = 'number string';\n  const LITERALS = 'Master Started Slave Stopped start promote demote stop monitor true false';\n\n  return {\n    name: 'crmsh',\n    aliases: [\n      'crm',\n      'pcmk'\n    ],\n    case_insensitive: true,\n    keywords: {\n      keyword: KEYWORDS + ' ' + OPERATORS + ' ' + TYPES,\n      literal: LITERALS\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        beginKeywords: 'node',\n        starts: {\n          end: '\\\\s*([\\\\w_-]+:)?',\n          starts: {\n            className: 'title',\n            end: '\\\\s*[\\\\$\\\\w_][\\\\w_-]*'\n          }\n        }\n      },\n      {\n        beginKeywords: RESOURCES,\n        starts: {\n          className: 'title',\n          end: '\\\\s*[\\\\$\\\\w_][\\\\w_-]*',\n          starts: {\n            end: '\\\\s*@?[\\\\w_][\\\\w_\\\\.:-]*'\n          }\n        }\n      },\n      {\n        begin: '\\\\b(' + COMMANDS.split(' ').join('|') + ')\\\\s+',\n        keywords: COMMANDS,\n        starts: {\n          className: 'title',\n          end: '[\\\\$\\\\w_][\\\\w_-]*'\n        }\n      },\n      {\n        beginKeywords: PROPERTY_SETS,\n        starts: {\n          className: 'title',\n          end: '\\\\s*([\\\\w_-]+:)?'\n        }\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'meta',\n        begin: '(ocf|systemd|service|lsb):[\\\\w_:-]+',\n        relevance: 0\n      },\n      {\n        className: 'number',\n        begin: '\\\\b\\\\d+(\\\\.\\\\d+)?(ms|s|h|m)?',\n        relevance: 0\n      },\n      {\n        className: 'literal',\n        begin: '[-]?(infinity|inf)',\n        relevance: 0\n      },\n      {\n        className: 'attr',\n        begin: /([A-Za-z$_#][\\w_-]+)=/,\n        relevance: 0\n      },\n      {\n        className: 'tag',\n        begin: '</?',\n        end: '/?>',\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = crmsh;\n"],"names":["module","exports","hljs","COMMANDS","name","aliases","case_insensitive","keywords","keyword","KEYWORDS","literal","contains","HASH_COMMENT_MODE","beginKeywords","starts","end","className","begin","split","join","QUOTE_STRING_MODE","relevance"],"sourceRoot":""}