{"version":3,"file":"static/chunks/pages/glossary-8c68e8e623781a8d.js","mappings":"4aACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,YACA,WACA,OAAeC,EAAQ,MACvB,EACA,6DCQAC,EAAAC,CAAA,CAJ0C,OAAC,CAAEC,SAAAA,CAAQ,CAAE,CAAAC,EACrD,MAAO,GAAAC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAW,GAAeC,MAAA,CAPpB,cAOoB,kBAASN,GACjD,4HCwHAO,eA1H2B,KAEzB,IAAMC,EAAkB,i4FAkFtBC,IAAI,GAAGC,KAAK,CAAC,MAEf,MACE,GAAAC,EAAAR,GAAA,EAACS,EAAAA,CAAQA,CAAAA,UACP,GAAAD,EAAAE,IAAA,EAACT,MAAAA,CAAIC,UAAU,0BACb,GAAAM,EAAAR,GAAA,EAACW,KAAAA,UAAG,aAGHN,EAAgBO,GAAG,CAAC,IACnB,GAAM,CAACC,EAAM,GAAGC,EAAiB,CAAGC,EAAMR,KAAK,CAAC,KAC1CS,EAAcF,EAAiBG,IAAI,CAAC,KAE1C,MACE,GAAAT,EAAAE,IAAA,EAACT,MAAAA,CAAIC,UAAU,gCACb,GAAAM,EAAAR,GAAA,EAACC,MAAAA,CAAIC,UAAU,2BACb,GAAAM,EAAAR,GAAA,EAACkB,SAAAA,CAAOhB,UAAU,aAAaiB,wBAAyB,CAAEC,OAAQP,CAAK,MAEzE,GAAAL,EAAAR,GAAA,EAACC,MAAAA,CAAIC,UAAU,4BACb,GAAAM,EAAAR,GAAA,EAACqB,OAAAA,CAAKnB,UAAU,aAAaiB,wBAAyB,CAAEC,OAAQJ,CAAY,QALtCH,EAS9C,OAcR,EC7He,SAASS,OACtB,MACE,GAAAd,EAAAR,GAAA,EAACuB,eAAYA,CAAAA,EAEjB","sources":["webpack://_N_E/?1ee6","webpack://_N_E/./src/layouts/FullPage/index.tsx","webpack://_N_E/./src/views/Glossary.tsx","webpack://_N_E/./src/pages/glossary.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/glossary\",\n      function () {\n        return require(\"private-next-pages/glossary.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/glossary\"])\n      });\n    }\n  ","import React, { ReactChild, ReactFragment } from 'react';\n\n// import './style.scss';\n\nconst classPrefix = 'full-page__';\n\ntype FullPageProps = {\n  children?: ReactChild | ReactFragment;\n};\n\nconst FullPage: React.FC<FullPageProps> = ({ children }) => {\n  return <div className={`${classPrefix}basis`}>{children}</div>;\n};\n\nexport default FullPage;\n","import React from 'react';\n\nimport Title from '../components/Title';\nimport FullPage from '../layouts/FullPage';\nimport { accentColors } from '../config';\nimport { Color } from '../types';\n\nimport { basePath } from '../config';\nimport DownloadButton from '@/components/DownloadButton';\n\nconst Glossary: React.FC = () => {\n  // Split the glossary content string into an array of entries\n  const glossaryEntries = `\nACh acetylcholine\nAMPA α-amino-3-hydroxy-5-methyl-4-isoxazolepropionic acid\nbAC bursting accommodating\nBP back-projecting m-type neuron\nBPAP back-propagating action potential\nCA cornu ammonis\nCA1 field CA1\nCA3 field CA3\nCCh carbachol\ncACpyr classical accommodating for pyramidal cells\ncAC classical accommodating for interneurons\nCB1R cannabinoid receptor type 1\nCCK+ cholecystokinin-positive\ncNAC classical non-accommodating\nCSD current source density\nCV coefficient of variation\nCWT continuous wavelet transform\nDG dentate gyrus\ne-feature electrophysiological feature\ne-type electrical type\nEPSC excitatory postsynaptic current\nEPSP excitatory postsynaptic potential\nGABA gamma-aminobutyric acid or γ-aminobutyric acid\nGABA_A R GABA_A receptor\nHCN hyperpolarization-activated cyclic nucleotide–gated channel\nI_depol depolarizing current\nI_h nonspecific hyperpolarization-activated cation current\nI-O input-output\nINT interneurons\nIPSP Inhibitory postsynaptic potential\nKYNA kynurenic acid\nLFP local field potential\nm-type morphological type\nme-type morpho-electrical type\nminis/mPSP miniature postsynaptic potentials\nMOOC massive online open course\nMS medial septum\nMS OFF medial septum inactivated stimulus condition\nMS ON medial septum activated stimulus condition\nmM millimolar = 10-3\nμM micromolar = 10-6\nN.B. nota bene\nNMDA N-methyl-d-aspartate\nN_RRP number (size) of the readily releasable pool (#vesicles)\nnS nanoSiemens\nOLM oriens-lacunosum moleculare m-type neuron\nPC pyramidal cell\nPP perforant path\nPPA perforant path-associated cell\nPSC postsynaptic current\nPSD power spectral density\nPSP postsynaptic potential\nPV+ parvalbumin-positive\nPVBC parvalbumin-positive basket m-type neuron\nREM rapid eye movement\nSC Schaffer collateral\nSCA Schaffer collateral associated neuron\nSD rat Sprague Dawley rat\nSLM stratum lacunosum moleculare\nSLM_PPA perforant path-associated m-type neuron with soma located in SLM\nSO stratum oriens\nSO_BP back-projecting m-type neuron with soma located in SO\nSO_BS bistratified m-type neuron with soma located in SO\nSO_OLM oriens-lacunosum moleculare m-type neuron with soma located in SO\nSO_Tri trilaminar m-type neuron with soma located in SO\nSP stratum pyramidale\nSP_AA axoaxonic m-type neuron with soma located in SP\nSP_BS bistratified m-type neuron with soma located in SP\nSP_CCKBC cholecystokinin-positive basket cell m-type neuron with soma in SP\nSP_Ivy ivy m-type neuron with soma located in SP\nSP_PC pyramidal m-type neuron with soma located in SP\nSP_PVBC parvalbumin-positive basket m-type neuron with soma located in SP\nSR stratum radiatum\nSR_SCA Schaffer collateral associated m-type neuron with soma located in SR\nSST somatostatin\nSTD standard deviation\nSTP short-term plasticity\nSTTC spike time tiling coefficient\nTri trilaminar m-type neuron\nU_SE release probability of neurotransmitters\nW rat Wistar rat\n  `.trim().split('\\n');\n\n  return (\n    <FullPage>\n      <div className=\"iq__container\">\n        <h1>Glossary</h1>\n\n        {/* Grid for Glossary Content */}\n        {glossaryEntries.map((entry) => {\n          const [term, ...descriptionParts] = entry.split(' ');\n          const description = descriptionParts.join(' ');\n\n          return (\n            <div className=\"flex flex-wrap my-4\" key={term}>\n              <div className=\"w-full md:w-1/5\">\n                <strong className=\"text-black\" dangerouslySetInnerHTML={{ __html: term }} />\n              </div>\n              <div className=\"w-full md:w-4/5 \">\n                <span className=\"text-black\" dangerouslySetInnerHTML={{ __html: description }} />\n              </div>\n            </div>\n          );\n        })}\n\n        {/* \n           <img\n          className=\"w-full mt-64\"\n          src={`${basePath}/data/etypes.png`}\n          alt=\"etype\"\n        />\n         */}\n\n\n      </div>\n    </FullPage>\n  );\n};\n\nexport default Glossary;","import React from 'react';\n\nimport GlossaryView from '../views/Glossary';\n\n\nexport default function Home() {\n  return (\n    <GlossaryView />\n  )\n};\n"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","children","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","concat","views_Glossary","glossaryEntries","trim","split","jsx_runtime","FullPage","jsxs","h1","map","term","descriptionParts","entry","description","join","strong","dangerouslySetInnerHTML","__html","span","Home","GlossaryView"],"sourceRoot":""}