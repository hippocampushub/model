{"version":3,"file":"static/chunks/pages/predictions/voltage-2c3b625e2cf1abdc.js","mappings":"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","sources":["webpack://_N_E/?6128","webpack://_N_E/./src/components/VolumeSectionSelector3D/index.tsx","webpack://_N_E/./src/views/5_predictions/Voltage.tsx","webpack://_N_E/./src/pages/predictions/voltage.tsx","webpack://_N_E/./src/components/VolumeSectionSelector3D/styles.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/predictions/voltage\",\n      function () {\n        return require(\"private-next-pages/predictions/voltage.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/predictions/voltage\"])\n      });\n    }\n  ","import React, { useEffect, useRef, useCallback, useState } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\n\nimport { VolumeSection } from '@/types';\nimport { volumeSections, theme } from '@/constants';\n\nimport { basePath, dataPath } from '@/config';\n\nimport styles from './styles.module.scss';\n\ntype VolumeSectionSelectProps = {\n  value?: VolumeSection | string;\n  onSelect?: (volumeSection: VolumeSection) => void;\n  theme?: number;\n};\n\nconst VolumeSectionSelector3D: React.FC<VolumeSectionSelectProps> = ({\n  value = 'region',\n  onSelect = () => { },\n  theme: themeProp = 2,\n}) => {\n  const mountRef = useRef<HTMLDivElement>(null);\n  const hoveredObjectRef = useRef<THREE.Object3D | null>(null);\n  const selectedVolumeSectionRef = useRef<VolumeSection>(value as VolumeSection);\n  const selectedObjectRef = useRef<THREE.Object3D | null>(null);\n\n  const camera = useRef<THREE.OrthographicCamera | null>(null);\n  const scene = useRef<THREE.Scene | null>(null);\n  const renderer = useRef<THREE.WebGLRenderer | null>(null);\n  const raycaster = useRef<THREE.Raycaster | null>(null);\n  const mouse = useRef(new THREE.Vector2());\n\n  const obj1Ref = useRef<THREE.Object3D | null>(null);\n  const obj2Ref = useRef<THREE.Object3D | null>(null);\n  const obj3Ref = useRef<THREE.Object3D | null>(null);\n\n  const objectsLoadedRef = useRef(false);\n  const [offset, setOffset] = useState(21);\n  const [textSize, setTextSize] = useState(1);\n\n  const handleClick = useCallback(\n    (event) => {\n      if (!objectsLoadedRef.current) return;\n\n      const rect = mountRef.current!.getBoundingClientRect();\n      mouse.current.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      raycaster.current!.setFromCamera(mouse.current, camera.current!);\n      const intersects = raycaster.current!.intersectObjects([obj1Ref.current!, obj2Ref.current!, obj3Ref.current!], true);\n\n      if (intersects.length > 0) {\n        let intersectedObject = intersects[0].object;\n        while (intersectedObject.parent && ![obj1Ref.current, obj2Ref.current, obj3Ref.current].includes(intersectedObject)) {\n          intersectedObject = intersectedObject.parent;\n        }\n\n        if ([obj1Ref.current, obj2Ref.current, obj3Ref.current].includes(intersectedObject)) {\n          const volumeSection = intersectedObject.userData.volumeSection as VolumeSection;\n          if (volumeSection) {\n            updateSelection(volumeSection, intersectedObject);\n            onSelect(volumeSection);\n          }\n        }\n      }\n    },\n    [onSelect, themeProp]\n  );\n\n  const updateSelection = (newVolumeSection: VolumeSection, newSelectedObject: THREE.Object3D) => {\n    if (selectedObjectRef.current) {\n      updateObjectColors(selectedObjectRef.current, theme[themeProp].default, theme[themeProp].hover);\n    }\n\n    updateObjectColors(newSelectedObject, theme[themeProp].selected, 0xffffff);\n\n    selectedVolumeSectionRef.current = newVolumeSection;\n    selectedObjectRef.current = newSelectedObject;\n  };\n\n  const updateObjectColors = (object: THREE.Object3D, mainColor: number, textColor: number) => {\n    object.traverse((child: any) => {\n      if (child instanceof THREE.Mesh) {\n        if (child.name === object.userData.volumeSection) {\n          child.material.color.set(mainColor);\n        }\n        if (child.geometry && child.geometry.type === 'TextGeometry') {\n          child.material.color.set(textColor);\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    scene.current = new THREE.Scene();\n    scene.current.background = new THREE.Color('#313354');\n\n    const aspect = mountRef.current.clientWidth / mountRef.current.clientHeight;\n    camera.current = new THREE.OrthographicCamera(-aspect * 200, aspect * 200, 200, -200, 0.1, 1000);\n    camera.current.position.z = 10;\n\n    renderer.current = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.current.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    renderer.current.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.current.domElement);\n\n    raycaster.current = new THREE.Raycaster();\n\n    const loader = new OBJLoader();\n    loader.load(\n      `${dataPath}/3d/volume-selector/volume-selector.obj`,\n      (obj) => {\n        [obj1Ref, obj2Ref, obj3Ref].forEach((ref, index) => {\n          const newObj = obj.clone();\n          ref.current = newObj;\n          newObj.position.set((index - 1) * offset, 0, 0);\n          newObj.userData.volumeSection = ['region', 'slice', 'cylinder'][index];\n          applyMaterial(newObj, index);\n          scene.current!.add(newObj);\n        });\n\n        const fontLoader = new FontLoader();\n        fontLoader.load(`${basePath}/assets/fonts/Titillium_Web_Light_.json`, (font) => {\n          ['Region', 'Slice', 'Cylinder'].forEach((text, index) => {\n            createText(text, [obj1Ref, obj2Ref, obj3Ref][index].current!, text.toLowerCase(), font);\n          });\n        });\n\n        objectsLoadedRef.current = true;\n\n        if (value) {\n          setInitialSelection(value as VolumeSection);\n        }\n\n        animate();\n      },\n      (xhr) => console.log((xhr.loaded / xhr.total) * 100 + '% loaded'),\n      (error) => console.error('An error happened', error)\n    );\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.current!.render(scene.current!, camera.current!);\n    };\n\n    const handleResize = () => {\n      if (mountRef.current && renderer.current && camera.current) {\n        const width = mountRef.current.clientWidth;\n        const height = mountRef.current.clientHeight;\n        renderer.current.setSize(width, height);\n\n        const aspect = width / height;\n        camera.current.left = -aspect * 200;\n        camera.current.right = aspect * 200;\n        camera.current.top = 200;\n        camera.current.bottom = -200;\n        camera.current.updateProjectionMatrix();\n\n        const newOffset = window.innerWidth < 1400 ? 16 : 21;\n        setOffset(newOffset);\n\n        camera.current.zoom = window.innerWidth < 1200 ? 11 : 16;\n        camera.current.updateProjectionMatrix();\n\n        const newTextSize = window.innerWidth < 1200 ? 1 : 0.8;\n        setTextSize(newTextSize);\n\n        updateTextSize();\n      }\n    };\n\n    const handleMouseMove = (event) => {\n      if (!objectsLoadedRef.current) return;\n\n      const rect = mountRef.current!.getBoundingClientRect();\n      mouse.current.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      raycaster.current!.setFromCamera(mouse.current, camera.current!);\n      const intersects = raycaster.current!.intersectObjects([obj1Ref.current!, obj2Ref.current!, obj3Ref.current!], true);\n\n      if (intersects.length > 0) {\n        let intersectedObject = intersects[0].object;\n        while (intersectedObject.parent && ![obj1Ref.current, obj2Ref.current, obj3Ref.current].includes(intersectedObject)) {\n          intersectedObject = intersectedObject.parent;\n        }\n\n        if (hoveredObjectRef.current !== intersectedObject && selectedObjectRef.current !== intersectedObject) {\n          if (hoveredObjectRef.current && hoveredObjectRef.current !== selectedObjectRef.current) {\n            updateObjectColors(hoveredObjectRef.current, theme[themeProp].default, theme[themeProp].hover);\n          }\n\n          updateObjectColors(intersectedObject, theme[themeProp].hover, theme[themeProp].hover);\n\n          hoveredObjectRef.current = intersectedObject;\n          mountRef.current!.style.cursor = 'pointer';\n        }\n      } else {\n        if (hoveredObjectRef.current && hoveredObjectRef.current !== selectedObjectRef.current) {\n          updateObjectColors(hoveredObjectRef.current, theme[themeProp].default, theme[themeProp].hover);\n          hoveredObjectRef.current = null;\n          mountRef.current!.style.cursor = 'default';\n        }\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    mountRef.current.addEventListener('mousemove', handleMouseMove);\n    mountRef.current.addEventListener('click', handleClick);\n\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (mountRef.current) {\n        mountRef.current.removeEventListener('mousemove', handleMouseMove);\n        mountRef.current.removeEventListener('click', handleClick);\n        mountRef.current.removeChild(renderer.current!.domElement);\n      }\n    };\n  }, [themeProp]);\n\n  useEffect(() => {\n    if (objectsLoadedRef.current) {\n      [obj1Ref, obj2Ref, obj3Ref].forEach((ref, index) => {\n        if (ref.current) {\n          ref.current.position.set((index - 1) * offset, 0, 0);\n        }\n      });\n    }\n  }, [offset]);\n\n  useEffect(() => {\n    if (objectsLoadedRef.current && value) {\n      setInitialSelection(value as VolumeSection);\n    }\n  }, [value, themeProp]);\n\n  const applyMaterial = (obj: THREE.Object3D, index: number) => {\n    obj.traverse((child) => {\n      if (child instanceof THREE.Mesh) {\n        let material;\n        if (child.name === obj.userData.volumeSection) {\n          material = new THREE.MeshBasicMaterial({\n            color: theme[themeProp].default,\n            transparent: false,\n            opacity: 1,\n            depthWrite: true,\n          });\n          child.renderOrder = 2;\n        } else if (child.name === 'skeleton') {\n          material = new THREE.MeshBasicMaterial({\n            color: theme[themeProp].selectedEdges,\n            transparent: true,\n            opacity: 0,\n            depthWrite: false,\n          });\n          const wireframeGeometry = new THREE.EdgesGeometry(child.geometry);\n          const wireframeMaterial = new THREE.LineBasicMaterial({\n            color: theme[themeProp].default,\n            transparent: true,\n            opacity: 1,\n            depthWrite: false,\n          });\n          const wireframe = new THREE.LineSegments(wireframeGeometry, wireframeMaterial);\n          wireframe.renderOrder = 1;\n          child.add(wireframe);\n        } else {\n          child.visible = false;\n        }\n        if (material) {\n          child.material = material;\n        }\n      }\n    });\n  };\n\n  const createText = (text: string, obj: THREE.Object3D, childName: string, font: THREE.Font) => {\n    const textGeometry = new TextGeometry(text, {\n      font: font,\n      size: textSize,\n      height: 0.2,\n      curveSegments: 32,\n      bevelEnabled: true,\n      bevelThickness: 0.02,\n      bevelSize: 0.02,\n    });\n\n    const textMaterialColor = selectedVolumeSectionRef.current === childName ? 0xffffff : theme[themeProp].hover;\n\n    const textMaterial = new THREE.MeshBasicMaterial({\n      color: textMaterialColor,\n      transparent: false,\n      opacity: 1,\n    });\n    const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n\n    obj.traverse((child) => {\n      if (child instanceof THREE.Mesh && child.name === childName) {\n        textMesh.position.set(0, 0, 0);\n        child.add(textMesh);\n      }\n    });\n  };\n\n  const updateTextSize = () => {\n    ['Region', 'Slice', 'Cylinder'].forEach((text, index) => {\n      const obj = [obj1Ref, obj2Ref, obj3Ref][index].current;\n      if (obj) {\n        obj.traverse((child) => {\n          if (child instanceof THREE.Mesh && child.geometry && child.geometry.type === 'TextGeometry') {\n            const oldTextMesh = child;\n            const parentMesh = oldTextMesh.parent;\n            if (parentMesh) {\n              parentMesh.remove(oldTextMesh);\n              const fontLoader = new FontLoader();\n              fontLoader.load(`${basePath}/assets/fonts/Titillium_Web_Light_.json`, (font) => {\n                createText(text, obj, text.toLowerCase(), font);\n              });\n            }\n          }\n        });\n      }\n    });\n  };\n\n  const setInitialSelection = (initialVolumeSection: VolumeSection) => {\n    const initialObjectRef = [obj1Ref, obj2Ref, obj3Ref].find(\n      (ref) => ref.current?.userData.volumeSection === initialVolumeSection\n    );\n\n    if (initialObjectRef?.current) {\n      updateSelection(initialVolumeSection, initialObjectRef.current);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.volumeSelector} ref={mountRef}></div>\n      <div className={styles.volumeList}></div>\n    </div>\n  );\n};\n\nexport default VolumeSectionSelector3D;\n","import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Filters from '@/layouts/Filters';\nimport StickyContainer from '@/components/StickyContainer';\nimport Title from '@/components/Title';\nimport InfoBox from '@/components/InfoBox';\nimport List from '@/components/List';\nimport ScatterPlotSelector from '@/components/ScatterPlotSelector';\nimport DataContainer from '@/components/DataContainer';\nimport Collapsible from '@/components/Collapsible';\nimport TimeSpikePlot from './components/TimeSpikePlot';\nimport MeanFiringRatePlot from './components/MeanFiringRatePlot';\nimport { QuickSelectorEntry, VolumeSection } from '@/types';\nimport models from \"./models.json\";\nimport { dataPath } from '@/config';\nimport VolumeSectionSelector3D from '@/components/VolumeSectionSelector3D';\nimport { volumeSections } from '@/constants';\nimport TraceGraph from './components/Trace';\nimport DownloadButton from '@/components/DownloadButton';\nimport { downloadAsJson } from '@/utils';\nimport DistributionPlot from '@/components/DistributionPlot';\n\nconst voltageSectionStructure = {\n    cylinder: {\n        K_Inj: [110, 115, 120, 122, 124, 126, 128, 130, 140],\n        CA_O: [1, 1.25, 1.5, 1.75, 2, 2.25, 2.5]\n    },\n    region: {\n        K_Inj: [115, 120, 122, 124, 126, 128, 130, 140],\n        CA_O: [1, 1.5, 2]\n    },\n    slice: {\n        K_Inj: [120, 130, 140],\n        CA_O: [1, 2]\n    }\n};\n\nconst VoltageView: React.FC = () => {\n    const router = useRouter();\n    const theme = 5;\n\n    const [quickSelection, setQuickSelection] = useState<Record<string, string | number>>({});\n    const [spikeTimeData, setSpikeTimeData] = useState<any>(null);\n    const [meanFiringRateData, setMeanFiringRateData] = useState<any>(null);\n    const [traceData, setTraceData] = useState<any>(null);\n    const [spikeTimePlotSvg, setSpikeTimePlotSvg] = useState<string | null>(null);\n\n    const getVolumeSection = (): VolumeSection => (quickSelection.volume_section as VolumeSection) || 'region';\n    const getMtypes = (): string[] => [...new Set(models.map(model => model.mtype))].sort();\n    const getEtypes = (mtype: string): string[] => [...new Set(models.filter(model => model.mtype === mtype).map(model => model.etype))].sort();\n\n    useEffect(() => {\n        if (!router.isReady) return;\n        const { volume_section, mtype, etype, ca_o, k_inj } = router.query;\n        const newQuickSelection: Record<string, string | number> = {};\n        if (typeof volume_section === 'string') newQuickSelection.volume_section = volume_section;\n        if (typeof mtype === 'string') newQuickSelection.mtype = mtype;\n        if (typeof ca_o === 'string') newQuickSelection.ca_o = parseFloat(ca_o);\n        if (typeof k_inj === 'string') newQuickSelection.k_inj = parseFloat(k_inj);\n        if (typeof mtype === 'string') {\n            const availableEtypes = getEtypes(mtype);\n            newQuickSelection.etype = typeof etype === 'string' && availableEtypes.includes(etype) ? etype : availableEtypes[0] || '';\n        }\n        setQuickSelection(newQuickSelection);\n        if (Object.keys(newQuickSelection).length === 0) {\n            const defaultMtype = getMtypes()[0];\n            const defaultSection = 'region';\n            const defaultSelection = {\n                volume_section: defaultSection,\n                mtype: defaultMtype,\n                etype: getEtypes(defaultMtype)[0] || '',\n                ca_o: voltageSectionStructure[defaultSection].CA_O[0],\n                k_inj: voltageSectionStructure[defaultSection].K_Inj[0]\n            };\n            setQuickSelection(defaultSelection);\n            router.replace({ query: defaultSelection }, undefined, { shallow: true });\n        }\n    }, [router.isReady, router.query]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const { volume_section, ca_o, k_inj, mtype, etype } = quickSelection;\n            if (ca_o === undefined || k_inj === undefined || !mtype || !etype || !volume_section) return;\n\n            const baseUrl = `${dataPath}/5_prediction/voltage/${volume_section}/${ca_o}-${k_inj}/${mtype}-${etype}`;\n\n            const dataTypes = [\n                { name: 'spike-time', setter: setSpikeTimeData },\n                { name: 'mean-firing-rate', setter: setMeanFiringRateData },\n                { name: 'trace', setter: setTraceData }\n            ];\n\n            for (const { name, setter } of dataTypes) {\n                try {\n                    const response = await fetch(`${baseUrl}/${name}.json`);\n                    if (!response.ok) {\n                        if (response.status === 404) {\n                            console.warn(`${name} data not found`);\n                            setter(null);\n                        } else {\n                            throw new Error(`HTTP error! status: ${response.status}`);\n                        }\n                    } else {\n                        const data = await response.json();\n                        setter(data);\n                    }\n                } catch (error) {\n                    console.error(`Error fetching ${name} data:`, error);\n                    setter(null);\n                }\n            }\n\n            // Fetch the spike-time-plot.svg\n            try {\n                const svgResponse = await fetch(`${baseUrl}/spike-time-plot.svg`);\n                if (!svgResponse.ok) {\n                    if (svgResponse.status === 404) {\n                        console.warn('Spike time plot SVG not found');\n                        setSpikeTimePlotSvg(null);\n                    } else {\n                        throw new Error(`HTTP error! status: ${svgResponse.status}`);\n                    }\n                } else {\n                    const svgText = await svgResponse.text();\n                    setSpikeTimePlotSvg(svgText);\n                }\n            } catch (error) {\n                console.error('Error fetching spike-time-plot.svg:', error);\n                setSpikeTimePlotSvg(null);\n            }\n        };\n\n        fetchData();\n    }, [quickSelection]);\n\n    const setParams = (params: Record<string, string | number>): void => {\n        const newQuery = { ...router.query, ...params };\n        router.push({ query: newQuery, pathname: router.pathname }, undefined, { shallow: true });\n    };\n\n    const handleVolumeSelect = (volume_section: VolumeSection) => {\n        const currentMtype = quickSelection.mtype as string;\n        const currentEtype = quickSelection.etype as string;\n\n        const availableMtypes = getMtypes();\n        const newMtype = availableMtypes.includes(currentMtype) ? currentMtype : availableMtypes[0];\n\n        const availableEtypes = getEtypes(newMtype);\n        const newEtype = availableEtypes.includes(currentEtype) ? currentEtype : availableEtypes[0];\n\n        const newSelection = {\n            ...quickSelection,\n            volume_section,\n            ca_o: voltageSectionStructure[volume_section].CA_O[0],\n            k_inj: voltageSectionStructure[volume_section].K_Inj[0],\n            mtype: newMtype,\n            etype: newEtype\n        };\n        setQuickSelection(newSelection);\n        setParams(newSelection);\n    };\n\n\n\n    const handleMtypeSelect = (mtype: string) => {\n        const availableEtypes = getEtypes(mtype);\n        const newEtype = availableEtypes[0] || '';\n        setQuickSelection(prev => ({ ...prev, mtype, etype: newEtype }));\n        setParams({ mtype, etype: newEtype });\n    };\n\n    const handleEtypeSelect = (etype: string) => {\n        setQuickSelection(prev => ({ ...prev, etype }));\n        setParams({ etype });\n    };\n\n    const handleScatterPlotSelect = (ca_o: number, k_inj: number) => {\n        setQuickSelection(prev => ({ ...prev, ca_o, k_inj }));\n        setParams({ ca_o, k_inj });\n    };\n\n    const mtypes = getMtypes();\n    const etypes = getEtypes(quickSelection.mtype as string);\n\n    const qsEntries: QuickSelectorEntry[] = [\n        {\n            title: 'Volume Section',\n            key: 'volume_section',\n            values: volumeSections,\n            setFn: handleVolumeSelect,\n        },\n        {\n            title: 'CA_0',\n            key: 'ca_o',\n            getValuesFn: () => voltageSectionStructure[getVolumeSection()].CA_O,\n            sliderRange: voltageSectionStructure[getVolumeSection()].CA_O\n        },\n        {\n            title: 'K_Inj',\n            key: 'k_inj',\n            getValuesFn: () => voltageSectionStructure[getVolumeSection()].K_Inj,\n            sliderRange: voltageSectionStructure[getVolumeSection()].K_Inj\n        },\n        {\n            title: 'M-type',\n            key: 'mtype',\n            values: mtypes,\n            setFn: handleMtypeSelect,\n        },\n        {\n            title: 'E-Type',\n            key: 'etype',\n            values: etypes,\n            setFn: handleEtypeSelect,\n        },\n    ];\n\n    return (\n        <>\n            <Filters theme={theme} hasData={!!quickSelection.volume_section && !!quickSelection.mtype && !!quickSelection.etype}>\n                <div className=\"flex flex-col lg:flex-row w-full lg:items-center mt-40 lg:mt-0\">\n                    <div className=\"w-full lg:w-1/2 md:w-full md:flex-none mb-8 md:mb-8 lg:pr-0\">\n                        <StickyContainer>\n                            <Title title=\"Voltage - Calcium Scan\" subtitle=\"Predictions\" theme={theme} />\n                            <div role=\"information\">\n                                <InfoBox>\n                                    <p>Changing the extracellular ionic concentrations is known to alter excitability of neurons. To model this effect, we varied over a realistic range changes in extracellular calcium and the tonic depolarization resulting from varying extracellular potassium concentration. Here, we report that for restricted parameter ranges only variable and irregular theta activity was generated in CA1.</p>\n                                </InfoBox>\n                            </div>\n                        </StickyContainer>\n                    </div>\n                    <div className=\"flex flex-col gap-8 mb-12 md:mb-0 mx-8 md:mx-0 lg:w-1/2 md:w-full flex-grow md:flex-none justify-center\" style={{ maxWidth: '800px' }}>\n                        <div className={`selector__column selector__column--lg mt-3 theme-${theme}`} style={{ maxWidth: \"auto\" }}>\n                            <div className={`selector__head theme-${theme}`}>1. Select a volume section</div>\n                            <div className=\"selector__body\">\n                                <VolumeSectionSelector3D value={getVolumeSection()} onSelect={handleVolumeSelect} theme={theme} />\n                            </div>\n                        </div>\n                        <div className=\"flex flex-col lg:flex-row gap-8 flex-grow p-0 m-0\">\n                            <div className={`selector__column theme-${theme} flex-1`} style={{ maxWidth: \"auto\" }}>\n                                <div className={`selector__head theme-${theme}`}>2. Select extracellular conditions</div>\n                                <div className=\"selector__body\">\n                                    <ScatterPlotSelector\n                                        path={`5_prediction/voltage/${quickSelection.volume_section}/`}\n                                        xRange={voltageSectionStructure[getVolumeSection()].CA_O}\n                                        yRange={voltageSectionStructure[getVolumeSection()].K_Inj}\n                                        xAxisLabel='Ca2+ (mM)'\n                                        yAxisLabel='k_inj'\n                                        theme={theme}\n                                        onSelect={handleScatterPlotSelect}\n                                        selectedX={quickSelection.ca_o as number}\n                                        selectedY={quickSelection.k_inj as number}\n                                    />\n                                </div>\n                            </div>\n                            <div className={`selector__column theme-${theme} flex-1`}>\n                                <div className={`selector__head theme-${theme}`}>3. Select cell types</div>\n                                <div className=\"selector__body\">\n                                    <List block list={mtypes} value={quickSelection.mtype as string} title={`M-type ${mtypes.length ? '(' + mtypes.length + ')' : ''}`} onSelect={handleMtypeSelect} theme={theme} />\n                                    <List block list={etypes} value={quickSelection.etype as string} title={`E-type ${etypes.length ? '(' + etypes.length + ')' : ''}`} onSelect={handleEtypeSelect} theme={theme} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Filters>\n            <DataContainer theme={theme} navItems={[{ id: 'spikeTimeSection', label: \"Spike Time\" }, { id: 'meanFiringRateSection', label: \"Mean Firing Rate\" }, { id: 'traceSection', label: \"Traces\" }]} quickSelectorEntries={qsEntries}>\n\n                <Collapsible id='spikeTimeSection' properties={[quickSelection.mtype + \"-\" + quickSelection.etype]} title=\"Spike Time\">\n                    <div className=\"graph\">\n                        {spikeTimePlotSvg ? (\n                            <div className=\"svg-container\" style={{ width: '100%', height: '550px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                <div dangerouslySetInnerHTML={{ __html: spikeTimePlotSvg }} className=\"svg-content\" />\n                            </div>\n                        ) : (\n                            <p>Spike time plot not available</p>\n                        )}\n                    </div>\n                    <DownloadButton\n                        theme={theme}\n                        onClick={() => spikeTimeData && downloadAsJson(spikeTimeData, `spike-time-${quickSelection.mtype}-${quickSelection.etype}_${quickSelection.ca_o}-${quickSelection.k_inj}`)}\n                    >\n                        Spike time{\"  \"}\n                        <span className=\"!ml-0 collapsible-property small\">{quickSelection.volume_section}</span>\n                        <span className=\"!ml-0 collapsible-property small\">{quickSelection.mtype}-{quickSelection.etype}</span>\n                        <span className=\"!ml-0 collapsible-property small\">{quickSelection.ca_o}-{quickSelection.k_inj}</span>\n                    </DownloadButton>\n                </Collapsible>\n\n                <Collapsible id='meanFiringRateSection' properties={[quickSelection.mtype + \"-\" + quickSelection.etype]} title=\"Mean Firing Rate\">\n                    <div className=\"graph\">\n                        {meanFiringRateData ? (\n                            <MeanFiringRatePlot plotData={meanFiringRateData} xAxis={\"Firing Rate (Hz)\"} yAxis={\"Frequency\"} xAxisTickStep={0.1} />\n                        ) : (\n                            <p>Mean firing rate data not available</p>\n                        )}\n                    </div>\n                    <DownloadButton\n                        theme={theme}\n                        onClick={() => meanFiringRateData && downloadAsJson(meanFiringRateData, `mean-firing-rate-${quickSelection.mtype}-${quickSelection.etype}_${quickSelection.ca_o}-${quickSelection.k_inj}`)}\n                    >\n                        Mean Firing Rate{\"  \"}\n                        <span className=\"!ml-0 collapsible-property small\">{quickSelection.volume_section}</span>\n                        <span className=\"!ml-0 collapsible-property small\">{quickSelection.mtype}-{quickSelection.etype}</span>\n                        <span className=\"!ml-0 collapsible-property small\">{quickSelection.ca_o}-{quickSelection.k_inj}</span>\n                    </DownloadButton>\n                </Collapsible>\n\n                <Collapsible id='traceSection' title=\"Traces\">\n                    <div className=\"graph\">\n                        {traceData ? (\n                            <TraceGraph plotData={traceData} />\n                        ) : (\n                            <p>Trace data not available</p>\n                        )}\n                    </div>\n                    <DownloadButton\n                        theme={theme}\n                        onClick={() => traceData && downloadAsJson(traceData, `trace-${quickSelection.mtype}-${quickSelection.etype}_${quickSelection.ca_o}-${quickSelection.k_inj}`)}\n                    >\n                        Trace{\"  \"}\n                        <span className=\"!ml-0 collapsible-property small\">{quickSelection.volume_section}</span>\n                        <span className=\"!ml-0 collapsible-property small\">{quickSelection.mtype}-{quickSelection.etype}</span>\n                        <span className=\"!ml-0 collapsible-property small\">{quickSelection.ca_o}-{quickSelection.k_inj}</span>\n                    </DownloadButton>\n                </Collapsible>\n            </DataContainer>\n        </>\n    );\n};\n\nexport default VoltageView;\n","import Head from 'next/head';\nimport VoltageView from '@/views/5_predictions/Voltage';\n\nexport default function VoltagePage() {\n    const metadata = {\n        title: 'Voltage - Calcium Scan - Predictions | The Hippocampus Hub',\n        description:\n            'Explore predictions of network excitability under varying extracellular calcium concentrations and ionic conditions. Visualize the spike time, mean firing rate, and traces for CA1 neurons in different voltage-calcium scenarios.',\n        keywords: [\n            'Voltage',\n            'Calcium Scan',\n            'Spike Time',\n            'Firing Rate',\n            'Hippocampus',\n            'Neuroscience',\n            'Blue Brain Project',\n            'The Hippocampus Hub',\n        ],\n        author: 'Blue Brain Project',\n        creator: 'EPFL Blue Brain Project',\n        publisher: 'The Hippocampus Hub',\n    };\n\n    return (\n        <>\n            <Head>\n                <title>{metadata.title}</title>\n                <meta name=\"description\" content={metadata.description} />\n                <meta name=\"keywords\" content={metadata.keywords.join(', ')} />\n                <meta name=\"author\" content={metadata.author} />\n                <meta name=\"creator\" content={metadata.creator} />\n                <meta name=\"publisher\" content={metadata.publisher} />\n            </Head>\n\n            <VoltageView />\n        </>\n    );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__NKkJz\",\"volumeSelector\":\"styles_volumeSelector__dN4Dl\",\"volumeList\":\"styles_volumeList__5Src0\",\"volumeSection\":\"styles_volumeSection__yJuJz\",\"active\":\"styles_active__RrlYY\"};"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","value","onSelect","theme","themeProp","param","mountRef","useRef","hoveredObjectRef","selectedVolumeSectionRef","selectedObjectRef","camera","scene","renderer","raycaster","mouse","THREE","obj1Ref","obj2Ref","obj3Ref","objectsLoadedRef","offset","setOffset","useState","textSize","setTextSize","handleClick","useCallback","current","rect","getBoundingClientRect","x","event","clientX","left","width","y","clientY","top","height","setFromCamera","intersects","intersectObjects","length","intersectedObject","object","parent","includes","volumeSection","userData","updateSelection","newVolumeSection","newSelectedObject","updateObjectColors","default","hover","selected","mainColor","textColor","traverse","child","name","material","color","set","geometry","type","useEffect","background","aspect","clientWidth","clientHeight","position","z","antialias","alpha","setSize","setPixelRatio","devicePixelRatio","appendChild","domElement","loader","OBJLoader","load","concat","dataPath","forEach","ref","index","newObj","obj","clone","applyMaterial","add","fontLoader","FontLoader","basePath","text","createText","toLowerCase","font","setInitialSelection","animate","console","log","xhr","loaded","total","error","requestAnimationFrame","render","handleResize","right","bottom","updateProjectionMatrix","newOffset","innerWidth","zoom","newTextSize","updateTextSize","handleMouseMove","style","cursor","addEventListener","removeEventListener","removeChild","transparent","opacity","depthWrite","renderOrder","selectedEdges","wireframeGeometry","wireframeMaterial","wireframe","visible","childName","textGeometry","TextGeometry","size","curveSegments","bevelEnabled","bevelThickness","bevelSize","textMaterialColor","textMaterial","textMesh","parentMesh","oldTextMesh","remove","initialObjectRef","find","initialVolumeSection","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","styles","jsx","voltageSectionStructure","cylinder","K_Inj","CA_O","region","slice","Voltage","router","useRouter","quickSelection","setQuickSelection","spikeTimeData","setSpikeTimeData","meanFiringRateData","setMeanFiringRateData","traceData","setTraceData","spikeTimePlotSvg","setSpikeTimePlotSvg","getVolumeSection","volume_section","getMtypes","Set","models","map","model","mtype","sort","getEtypes","filter","etype","isReady","ca_o","k_inj","query","newQuickSelection","parseFloat","availableEtypes","Object","keys","defaultMtype","defaultSection","defaultSelection","replace","undefined","shallow","fetchData","baseUrl","setter","response","fetch","ok","data","json","status","warn","svgResponse","svgText","setParams","newQuery","params","pathname","handleVolumeSelect","currentMtype","currentEtype","availableMtypes","newMtype","newEtype","newSelection","handleMtypeSelect","prev","handleEtypeSelect","mtypes","etypes","qsEntries","title","key","values","volumeSections","setFn","getValuesFn","sliderRange","jsx_runtime","Fragment","Filters","hasData","StickyContainer","Title","subtitle","role","InfoBox","p","maxWidth","VolumeSectionSelector3D","ScatterPlotSelector","path","xRange","yRange","xAxisLabel","yAxisLabel","selectedX","selectedY","List","block","list","DataContainer","navItems","id","label","quickSelectorEntries","Collapsible","properties","display","justifyContent","alignItems","dangerouslySetInnerHTML","__html","DownloadButton","onClick","downloadAsJson","span","MeanFiringRatePlot","plotData","xAxis","yAxis","xAxisTickStep","TraceGraph","VoltagePage","metadata","description","keywords","author","creator","publisher","Head","meta","content","join","VoltageView","module","exports"],"sourceRoot":""}