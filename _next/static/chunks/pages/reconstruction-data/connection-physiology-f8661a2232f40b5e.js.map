{"version":3,"file":"static/chunks/pages/reconstruction-data/connection-physiology-f8661a2232f40b5e.js","mappings":"4aACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,6CACA,WACA,OAAeC,EAAQ,MACvB,EACA,+CC4BAC,EAAAC,CAAA,CAXkD,OAAC,CACjDC,MAAAA,CAAK,CACLC,mBAAAA,EAAqB,CAAC,CACtBC,kBAAAA,EAAoB,EAAI,CACxBC,OAAAA,EAAS,EAAE,CACXC,OAAAA,EAAS,EAAE,CACZ,CAAAC,EACC,OAAOC,SAnBoBN,CAAK,MAAEC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAqB,EAAGC,EAAAA,CAAAA,CAAAA,UAAAA,MAAAA,CAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,SAAAA,CAAAA,EAAAA,CAA0BC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAS,GAAIC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAS,GACpGG,EAAMC,WAAWR,GAEvB,GAAI,CAACS,OAAOC,QAAQ,CAACH,GAAM,OAAOP,EAElC,IAAMW,EAAYT,EACdK,EAAIK,cAAc,CAAC,KAAM,CAAEC,yBAA0BZ,CAAmB,GACxEM,EAAIO,WAAW,CAACb,GAEpB,MAAO,GAAYU,MAAAA,CAATR,GAAqBC,MAAAA,CAAZO,GAAmBI,MAAA,CAAPX,EACjC,EASsBJ,EAAOC,EAAoBC,EAAmBC,EAAQC,EAC5E,8FCdA,IAAMY,qBAAuB,GAAY,CAACC,EAAaC,IACrDC,eAAeF,EAAaG,EAAOC,WAAW,EAE1CF,eAAiB,CAACF,EAAaI,IACnCA,EAAc,GAAAC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,qBAAaR,IAAqBA,CAqIjEnB,CAAAA,EAAAC,CAAA,CAxHA,SAA0EM,CAI7C,KAJ6C,CACxEqB,QAAAA,CAAO,CACPC,KAAAA,EAAO,EAAE,CACT,GAAGC,EACwB,CAJ6CvB,EAKlE,CAACwB,EAAcC,EAAgB,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAmB,EAAE,EAG7DC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMC,EAAkBP,EAAQQ,GAAG,CAAC,IAClC,IAAMC,EAAeR,EAAKS,MAAM,CAAC,CAACC,EAAKjB,KACrC,IAAMkB,EAAYC,EAA6BD,SAAS,CACxD,GAAIA,GAAalB,KAAsBoB,IAAtBpB,CAAM,CAACkB,EAAU,CAAgB,CAChD,IAAMG,EAAOC,OAAOtB,CAAM,CAACkB,EAAU,EAC/BK,EAAYC,SAxBAH,CAAY,MAAEI,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAe,aACjDC,EAASC,SAASC,aAAa,CAAC,UAChCC,EAAUH,EAAOI,UAAU,CAAC,aAClC,GACED,EAAQJ,IAAI,CAAGA,EACRI,EAAQE,WAAW,CAACV,GAAMW,KAAK,EAEjC,CACT,EAgB+CX,EARhC,cASL,OAAOY,KAAKhB,GAAG,CAACA,EAAKM,EACvB,CACA,OAAON,CACT,EAAG,GACH,OAAOgB,KAAKC,GAAG,CAACnB,EAAe,GAAI,IACrC,GAEAL,EAAgBG,EAClB,EAAG,CAACP,EAASC,EAAK,EA8DlB,IAAM4B,EAAe7B,EAClBQ,GAAG,CAAC,CAACK,EAAQiB,SAOFC,QAPa,CACvB,GAAGlB,CAAM,CACTmB,MAAOnB,EAAOmB,KAAK,CACnBpB,UAAWC,EAA6BD,SAAS,CACjDqB,WAAY,CAAC,KAAmB,CAChCC,OAAQ,CAAC5D,EAAYoB,EAAcoC,IACjCrC,eAAeoB,EAAOqB,MAAM,CAAGrB,EAAOqB,MAAM,CAAC5D,EAAOoB,EAAQoC,GAASxD,EAAOoB,EAAOC,WAAW,EAChGwC,SAAQ,OAAEJ,CAAAA,EAAAlB,EAAkCsB,QAAQ,GAA1CJ,KAAA,IAAAA,EAAA,OAAAA,EAA4CvB,GAAG,CAAC,GAAY,EACpE0B,OAAQ,CAAC5D,EAAYoB,IAAiBD,eAAenB,EAAOoB,EAAOC,WAAW,EAC9E,GAAGyC,CAAK,CACV,GACAV,MAAOb,oBAAAA,EAAOwB,GAAG,CAAyBlC,CAAY,CAAC2B,EAAM,CAAGhB,KAAAA,CAClE,IACCzB,MAAM,CA1EgB,CACvB2C,MAAO,KACPpB,UAAW,KACXsB,OAAQ,CAAC1C,EAAQE,EAAQoC,KACvB,IAAMQ,EAAkBtC,EACrBQ,GAAG,CAAC,IACH,IAAMI,EAAYC,EAA6BD,SAAS,CACxD,GAAIA,EACF,MAAO,CACLyB,IAAKxB,EAAOmB,KAAK,CACjB1D,MAAOoB,CAAM,CAACkB,EAAU,EAI5B,IAAMuB,EAAWtB,EAAkCsB,QAAQ,CAC3D,GAAIA,EAAU,CACZ,IAAMI,EAAgBJ,EAAS3B,GAAG,CAAC,GACjC,GAAAZ,EAAA4C,IAAA,EAAC1C,MAAAA,WACEsC,EAAMJ,KAAK,CAAC,KAAGtC,CAAM,CAAC0C,EAA4BxB,SAAS,CAAC,GADrDwB,EAAMC,GAAG,GAIrB,MAAO,CACLA,IAAKxB,EAAOmB,KAAK,CACjB1D,MAAOiE,CACT,CACF,CAEA,OAAO,IACT,GACCE,MAAM,CAAC,GAAUC,OAAAA,GAEdC,EAAwD,CAC5D,CACE/B,UAAW,MACXoB,MAAO,QACPE,OAAQ5C,qBAAqBI,EAC/B,EACA,CACEkB,UAAW,QACXoB,MAAO,QACPE,OAAQ5C,qBAAqBI,EAC/B,EACD,CAED,MACE,GAAAE,EAAAC,GAAA,EAAC+C,EAAAA,CAAKA,CAAAA,CACJ7C,UAAU,wDACV8C,aAAcf,EAAQ,EAAIgB,IAAAA,kBAAAA,CAA6BA,IAAAA,iBAAAA,CACvDC,OAAQ,CAACrD,EAAaoC,IAAU,GAAkBA,MAAAA,CAAfpC,EAAO2C,GAAG,CAAC,MAAUhD,MAAA,CAANyC,GAClDkB,WAAY,GACZhD,QAAS2C,EACTM,YAAY,OACZC,WAAYZ,EACZa,WAAY,IAGlB,EACAlB,WAAY,CAAC,KAAmB,GAmB5B,CAAElC,UAAAA,EAAY,EAAE,CAAE,CAAGG,EAE3B,MACE,GAAAN,EAAAC,GAAA,EAAC+C,EAAAA,CAAKA,CAAAA,CACJQ,SAAQ,GACRC,KAAK,QACLC,OAAQ,CAAEC,EAAG,EAAK,EAClBR,OAAQ,GAAiBrD,EAAO2C,GAAG,EAAI,GAAoBhD,MAAA,CAAjBK,EAAOkB,SAAS,CAAC,MAC3DuC,WAAY,GACZnD,QAAS6B,EACTqB,WAAYjD,EACZ4C,aAAc,CAACnD,EAAcoC,IAAmBA,EAAQ,EAAIgB,IAAAA,kBAAAA,CAA6BA,IAAAA,iBAAAA,CACxF,GAAG5C,CAAS,CACbH,UAAW,qEAA+EV,MAAA,CAAVU,GAChFkD,YAAY,QAGlB,yGCvIA7E,CAAAA,EAAAC,CAAA,CARwD,OAAC,CAAEmF,SAAAA,CAAQ,CAAErB,SAAAA,CAAQ,CAAE,CAAAxD,QAC7E,GAAAiB,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAW0D,IAAAA,WAAAA,UACd,GAAA7D,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAW2D,IAAWD,IAAAA,SAAAA,CAAkBD,EAAWC,GAAAA,CAAAA,sBAAAA,CAAgC,aACrFtB,KAEC,0TCsCR,SAASwB,cAAcC,CAAe,EACpC,GAAM,CAACC,EAAKC,EAAK,CAAGF,EAAQG,KAAK,CAAC,YAClC,GAAaD,EAEX,GAAAE,EAAAxB,IAAA,EAAAwB,EAAAC,QAAA,YACGJ,EAAI,IAEJC,KALqB,GAQ5B,CAEA,SAASI,YAAY5F,CAAa,EAChC,GAAM,CAAC6F,EAAMC,EAAI,CAAG9F,EAAMyF,KAAK,CAAC,QAAKvD,GAAG,CAAC6D,GAAKA,EAAEC,IAAI,IACpD,MACE,GAAAN,EAAAxB,IAAA,EAAAwB,EAAAC,QAAA,YACE,GAAAD,EAAAnE,GAAA,EAAC0E,EAAAA,CAAYA,CAAAA,CAACjG,MAAO6F,IAAQ,SAAG,GAAAH,EAAAnE,GAAA,EAAC0E,EAAAA,CAAYA,CAAAA,CAACjG,MAAO8F,MAG3D,CA1DwB,EACtB,GAAGI,EAAAA,EAAgB,CACnB,GAAGC,EAAAA,EAAgB,CACnB,GAAGC,EAAAA,EAAgB,CACnB,GAAGC,EAAAA,EAAkB,CACvB,EAuDA,IAAMC,EAAa,CACjB,CAAE5C,MAAO,SAAUpB,UAAW,OAAqC,EACnE,CACEoB,MAAO,OACPpB,UAAW,OACXsB,OAAQ,GAAkB2C,EAAKd,KAAK,CAAC,KAAKvD,GAAG,CAACsE,GAASA,EAAMR,IAAI,IAAI9D,GAAG,CAACsE,GACvE,GAAAd,EAAAnE,GAAA,EAACkF,OAAAA,UAAoB,SAAVD,GAEf,EACA,CACE9C,MAAO,KACPpB,UAAW,KACXsB,OAAQ,GAAgB8C,EAAGjB,KAAK,CAAC,KAAKvD,GAAG,CAACsE,GAASA,EAAMR,IAAI,IAAI9D,GAAG,CAACsE,GACnE,GAAAd,EAAAnE,GAAA,EAACkF,OAAAA,UAAkBD,GAARA,GAEf,EACA,CACE9C,MAAO,YACPpB,UAAW,WACXsB,OAAQ,GAAuB,EAAE+C,SAAAA,CAAS,EAC5C,EACA,CAAEjD,MAAQ,GAAAgC,EAAAnE,GAAA,EAAAmE,EAAAC,QAAA,WAAE,sBAAoBrD,UAAW,IAAkCsB,OAAQgC,WAAY,EACjG,CAAElC,MAAQ,GAAAgC,EAAAnE,GAAA,EAAAmE,EAAAC,QAAA,WAAE,0BAAwBrD,UAAW,IAAkCsB,OAAQgC,WAAY,EACrG,CAAElC,MAAQ,GAAAgC,EAAAnE,GAAA,EAAAmE,EAAAC,QAAA,WAAE,0BAAwBrD,UAAW,IAAkCsB,OAAQgC,WAAY,EACrG,CAAElC,MAAO,OAAQpB,UAAW,MAAoC,EAChE,CAAEoB,MAAO,eAAgBpB,UAAW,aAA2C,EAC/E,CACEoB,MAAO,6BACPpB,UAAW,sBACXsB,OAAQyB,aACV,EACD,CAEKuB,EAAc,CAClB,CAAElD,MAAO,SAAUpB,UAAW,OAAsC,EACpE,CACEoB,MAAO,OACPpB,UAAW,OACXsB,OAAQ,GAAkB2C,EAAKd,KAAK,CAAC,KAAKvD,GAAG,CAACsE,GAASA,EAAMR,IAAI,IAAI9D,GAAG,CAACsE,GACvE,GAAAd,EAAAxB,IAAA,EAACuC,OAAAA,WAAkBD,EAAM,GAAAd,EAAAnE,GAAA,EAACsF,KAAAA,CAAAA,KAAfL,GAEf,EACA,CACE9C,MAAO,KACPpB,UAAW,KACXsB,OAAQ,GAAgB8C,EAAGjB,KAAK,CAAC,KAAKvD,GAAG,CAACsE,GAASA,EAAMR,IAAI,IAAI9D,GAAG,CAACsE,GACnE,GAAAd,EAAAnE,GAAA,EAACkF,OAAAA,UAAkBD,GAARA,GAEf,EACA,CACE9C,MAAO,YACPpB,UAAW,WACXsB,OAAQ,GAAuB,EAAE+C,SAAAA,CAAS,EAC5C,EACA,CAAEjD,MAAQ,GAAAgC,EAAAnE,GAAA,EAAAmE,EAAAC,QAAA,WAAE,6BAA2BrD,UAAW,OAAsCsB,OAAQgC,WAAY,EAC5G,CAAElC,MAAO,kCAAgCpB,UAAW,aAA4CsB,OAAQgC,WAAY,EACpH,CAAElC,MAAO,kBAAmBpB,UAAW,eAA8C,EACrF,CAAEoB,MAAO,kBAAmBpB,UAAW,YAA2C,EAClF,CACEoB,MAAO,8BACPpB,UAAW,uBACXsB,OAAQyB,aACV,EACD,CA0ED,IAAAyB,8CApEwE,OAAC,CAAEC,MAAAA,CAAK,CAAE,CAAA1G,EAC1E,CAAC2G,EAASC,EAAW,CAAGlF,CAAAA,EAAAA,EAAAA,QAAAA,EAAuC,MAC/D,CAACmF,EAAUC,EAAY,CAAGpF,CAAAA,EAAAA,EAAAA,QAAAA,EAAwC,YAYxE,CAVAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACRoF,MAAM,GAAYrG,MAAA,CAATsG,EAAAA,EAAQA,CAAC,6EACfC,IAAI,CAAC,GAAcC,EAASC,IAAI,IAChCF,IAAI,CAAC,GAAUL,EAAWtF,IAE7ByF,MAAM,GAAYrG,MAAA,CAATsG,EAAAA,EAAQA,CAAC,8EACfC,IAAI,CAAC,GAAcC,EAASC,IAAI,IAChCF,IAAI,CAAC,GAAUH,EAAYxF,GAChC,EAAG,EAAE,EAED,GAAauF,GAKf,GAAAxB,EAAAxB,IAAA,EAACuD,EAAAA,CAAaA,CAAAA,CACZV,MAAOA,EACPW,SAAU,CACR,CAAEC,GAAI,qBAAsBC,MAAO,iCAAkC,EACrE,CAAED,GAAI,sBAAuBC,MAAO,kCAAmC,EACxE,WAED,GAAAlC,EAAAxB,IAAA,EAAC2D,EAAAA,CAAWA,CAAAA,CAACF,GAAG,qBAAqBjE,MAAM,4CACzC,GAAAgC,EAAAxB,IAAA,EAAC4D,IAAAA,CAAErG,UAAU,2BAAiB,mOACoM,GAAAiE,EAAAnE,GAAA,EAACwG,IAAIA,CAACC,KAAK,8CAAqC,4CAA8C,OAEhU,GAAAtC,EAAAnE,GAAA,EAAC0G,EAAAA,CAAeA,CAAAA,CACdvG,QAAS4E,EACT3E,KAAMqF,EACNvC,OAAQ,OAAC,CAAE8B,KAAAA,CAAI,CAAEG,GAAAA,CAAE,CAAE,CAAArG,QAAK,GAAWqG,MAAAA,CAARH,EAAK,KAAMxF,MAAA,CAAH2F,EAAG,IAE1C,GAAAhB,EAAAnE,GAAA,EAACC,MAAAA,CAAIC,UAAU,gBACb,GAAAiE,EAAAnE,GAAA,EAAC2G,EAAAA,CAAcA,CAAAA,CACbnB,MAAOA,EACPoB,QAAS,IAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAepB,EAAU,sDACzC,yCAML,GAAAtB,EAAAxB,IAAA,EAAC2D,EAAAA,CAAWA,CAAAA,CAACF,GAAG,sBAAsBjE,MAAM,6CAC1C,GAAAgC,EAAAxB,IAAA,EAAC4D,IAAAA,CAAErG,UAAU,2BAAiB,6cAC8a,GAAAiE,EAAAnE,GAAA,EAACwG,IAAIA,CAACC,KAAK,8CAAqC,0BAA4B,OAExhB,GAAAtC,EAAAnE,GAAA,EAAC0G,EAAAA,CAAeA,CAAAA,CACdxG,UAAU,OACVC,QAASkF,EACTjF,KAAMuF,EACNzC,OAAQ,OAAC,CAAE8B,KAAAA,CAAI,CAAEG,GAAAA,CAAE,CAAE,CAAArG,QAAK,GAAWqG,MAAAA,CAARH,EAAK,KAAMxF,MAAA,CAAH2F,EAAG,IAE1C,GAAAhB,EAAAnE,GAAA,EAACC,MAAAA,CAAIC,UAAU,gBACb,GAAAiE,EAAAnE,GAAA,EAAC2G,EAAAA,CAAcA,CAAAA,CACbnB,MAAOA,EACPoB,QAAS,IAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAelB,EAAW,uDAC1C,6CA5CA,GAAAxB,EAAAnE,GAAA,EAACC,MAAAA,UAAI,cAmDhB,EC5JA6G,qBAvC+B,IAK3B,GAAA3C,EAAAxB,IAAA,EAAAwB,EAAAC,QAAA,YACE,GAAAD,EAAAnE,GAAA,EAAC+G,EAAAA,CAAOA,CAAAA,CAACvB,MAJC,WAKR,GAAArB,EAAAnE,GAAA,EAACC,MAAAA,CAAIC,UAAU,0EAEb,GAAAiE,EAAAnE,GAAA,EAACC,MAAAA,CAAIC,UAAU,gCACb,GAAAiE,EAAAxB,IAAA,EAACqE,EAAAA,CAAeA,CAAAA,WACd,GAAA7C,EAAAnE,GAAA,EAACiH,EAAAA,CAAKA,CAAAA,CACJC,aAAcC,EAAAA,EAASA,CACvBhF,MAAM,wBACNiF,SAAS,sBACT5B,MAbA,IAeF,GAAArB,EAAAnE,GAAA,EAACC,MAAAA,CAAIoH,KAAK,uBACR,GAAAlD,EAAAnE,GAAA,EAACsH,EAAAA,CAAOA,CAAAA,UACN,GAAAnD,EAAAxB,IAAA,EAAC4D,IAAAA,WAAE,4BACwB,GAAApC,EAAAnE,GAAA,EAACwG,IAAIA,CAACC,KAAM,8CAA+CvG,UAAW,wBAAuB,SAAW,yBAAsB,GAAAiE,EAAAnE,GAAA,EAACwG,IAAIA,CAACC,KAAK,4CAA4CvG,UAAW,wBAAuB,uBAAyB,yKAWvR,GAAAiE,EAAAnE,GAAA,EAACuH,8CAAuBA,CAAC/B,MA7Bf,OCZD,SAASgC,2BACtB,IAAMC,EAAW,CACftF,MAAO,oEACPuF,YACE,iMACFC,SAAU,CACR,wBACA,cACA,uBACA,eACA,gBACA,sBACA,eACA,qBACD,CACDC,OAAQ,qBACRC,QAAS,0BACTC,UAAW,qBACb,EAEA,MACE,GAAA3D,EAAAxB,IAAA,EAAAwB,EAAAC,QAAA,YACE,GAAAD,EAAAxB,IAAA,EAACoF,IAAIA,WACH,GAAA5D,EAAAnE,GAAA,EAACmC,QAAAA,UAAOsF,EAAStF,KAAK,GACtB,GAAAgC,EAAAnE,GAAA,EAACgI,OAAAA,CAAKC,KAAK,cAAcC,QAAST,EAASC,WAAW,GACtD,GAAAvD,EAAAnE,GAAA,EAACgI,OAAAA,CAAKC,KAAK,WAAWC,QAAST,EAASE,QAAQ,CAACQ,IAAI,CAAC,QACtD,GAAAhE,EAAAnE,GAAA,EAACgI,OAAAA,CAAKC,KAAK,SAASC,QAAST,EAASG,MAAM,GAC5C,GAAAzD,EAAAnE,GAAA,EAACgI,OAAAA,CAAKC,KAAK,UAAUC,QAAST,EAASI,OAAO,GAC9C,GAAA1D,EAAAnE,GAAA,EAACgI,OAAAA,CAAKC,KAAK,YAAYC,QAAST,EAASK,SAAS,MAGpD,GAAA3D,EAAAnE,GAAA,EAACoI,qBAAwBA,CAAAA,KAG/B,yLChCO,IAAMvD,EAAoC,CAC/CwD,IAAK,+BACLC,GAAI,mBACJC,GAAI,oBACJC,GAAI,gBACN,EAEa5D,EAAoC,CAC/C6D,IAAK,oCACLC,IAAK,sCACLC,GAAI,mBACJC,GAAI,oBACJC,KAAM,kBACNC,MAAO,mBACPC,GAAI,iBACJC,GAAI,uBACJC,IAAK,mCACLC,IAAK,kBACLC,IAAK,UACP,EAEaxE,EAAoC,CAC/CyE,GAAI,0BACJC,GAAI,wBACJC,GAAI,0BACJC,GAAI,wBACJC,GAAI,0BACN,EAEaC,EAAoC,CAC/CC,OAAQ,0DACRC,IAAK,2BACLC,IAAK,sBACLC,KAAM,+BACNC,KAAM,0BACNC,KAAM,4BACNC,MAAO,wBACPC,MAAO,mBACPC,MAAO,qBACPC,IAAK,uBACLC,IAAK,iBACP,EAEatF,EAAsC,CACjDuF,KAAM,6DACNC,EAAG,mHACHC,EAAG,qDACHC,EAAG,sDACL,sFCjDO,IAAMrD,EAAmB,QACJsD,CAAAA,EAAAA,EAAY,CAACtD,EAAU,oBCJnDuD,EAAAC,OAAA,EAAkB,gVCAlBD,EAAAC,OAAA,EAAkB","sources":["webpack://_N_E/?96df","webpack://_N_E/./src/components/NumberFormat/index.tsx","webpack://_N_E/./src/components/ResponsiveTable/index.tsx","webpack://_N_E/./src/components/StickyContainer/index.tsx","webpack://_N_E/./src/views/2_reconstruction-data/connection-physiology/SynDynamicsParamsTables.tsx","webpack://_N_E/./src/views/2_reconstruction-data/ConnectionPhysiology.tsx","webpack://_N_E/./src/pages/reconstruction-data/connection-physiology.tsx","webpack://_N_E/./src/terms.tsx","webpack://_N_E/./src/views/2_reconstruction-data/config.ts","webpack://_N_E/./src/components/ResponsiveTable/styles.module.scss","webpack://_N_E/./src/components/StickyContainer/styles.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/reconstruction-data/connection-physiology\",\n      function () {\n        return require(\"private-next-pages/reconstruction-data/connection-physiology.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/reconstruction-data/connection-physiology\"])\n      });\n    }\n  ","import React from 'react';\n\n\ntype NumberFormatProps = {\n  value?: any;\n  significantFigures?: number;\n  thousandSeparator?: boolean;\n  prefix?: string;\n  suffix?: string;\n};\n\nexport function formatNumber(value, significantFigures = 5, thousandSeparator = true, prefix = '', suffix = '') {\n  const num = parseFloat(value);\n\n  if (!Number.isFinite(num)) return value;\n\n  const formatted = thousandSeparator\n    ? num.toLocaleString('en', { maximumSignificantDigits: significantFigures })\n    : num.toPrecision(significantFigures);\n\n  return `${prefix}${formatted}${suffix}`;\n}\n\nconst NumberFormat: React.FC<NumberFormatProps> = ({\n  value,\n  significantFigures = 5,\n  thousandSeparator = true,\n  prefix = '',\n  suffix = '',\n}) => {\n  return formatNumber(value, significantFigures, thousandSeparator, prefix, suffix);\n}\n\n\nexport default NumberFormat;\n","import React, { useEffect, useState } from 'react';\nimport { Table } from 'antd';\nimport { ColumnType as AntColumnType, ColumnGroupType as AntColumnGroupType, TableProps } from 'antd/lib/table';\nimport { Breakpoint } from 'antd/lib/_util/responsiveObserve';\n\nimport classes from './styles.module.scss';\n\ninterface ColumnType<Type extends object & { isHighlight?: boolean }> extends Omit<AntColumnType<Type>, 'dataIndex'> {\n  dataIndex?: keyof Type;\n}\ninterface GroupColumnType<Type extends object & { isHighlight?: boolean }> extends AntColumnGroupType<Type> { }\n\ninterface ResponsiveTableProps<Type extends object & { isHighlight?: boolean }> extends Omit<TableProps<Type>, 'columns'> {\n  data?: Type[];\n  columns: (ColumnType<Type> | GroupColumnType<Type>)[] | any;\n}\n\nconst renderHighlightValue = (record) => (nestedValue, _value) =>\n  highlightValue(nestedValue, record.isHighlight);\n\nconst highlightValue = (nestedValue, isHighlight) =>\n  isHighlight ? <div className=\"text-bold\">{nestedValue}</div> : nestedValue;\n\n// Utility function to calculate the width of text\nfunction calculateTextWidth(text: string, font: string = '16px Arial'): number {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  if (context) {\n    context.font = font;\n    return context.measureText(text).width;\n  }\n  return 0;\n}\n\nfunction ResponsiveTable<Type extends object & { isHighlight?: boolean }>({\n  columns,\n  data = [], // Provide a default value of an empty array\n  ...restProps\n}: ResponsiveTableProps<Type>) {\n  const [columnWidths, setColumnWidths] = useState<number[]>([]);\n  const font = '14px Arial'; // Set the font to match your table\n\n  useEffect(() => {\n    const newColumnWidths = columns.map((column) => {\n      const maxTextWidth = data.reduce((max, record) => {\n        const dataIndex = (column as ColumnType<Type>).dataIndex;\n        if (dataIndex && record[dataIndex] !== undefined) {\n          const text = String(record[dataIndex]);\n          const textWidth = calculateTextWidth(text, font);\n          return Math.max(max, textWidth);\n        }\n        return max;\n      }, 0);\n      return Math.min(maxTextWidth + 20, 200); // Add some padding and a max limit\n    });\n\n    setColumnWidths(newColumnWidths);\n  }, [columns, data]);\n\n  const expandableColumn = {\n    title: null,\n    dataIndex: null,\n    render: (_value, record, index) => {\n      const nestedTableData = columns\n        .map((column) => {\n          const dataIndex = (column as ColumnType<Type>).dataIndex;\n          if (dataIndex) {\n            return {\n              key: column.title,\n              value: record[dataIndex],\n            };\n          }\n\n          const children = (column as GroupColumnType<Type>).children;\n          if (children) {\n            const childrenValue = children.map((child) => (\n              <div key={child.key}>\n                {child.title}: {record[(child as ColumnType<Type>).dataIndex]}\n              </div>\n            ));\n            return {\n              key: column.title,\n              value: childrenValue,\n            };\n          }\n\n          return null;\n        })\n        .filter((item) => item !== null); // Filter out null values\n\n      const nestedColumns: ColumnType<{ key: any; value: any }>[] = [\n        {\n          dataIndex: 'key',\n          title: 'Field',\n          render: renderHighlightValue(record),\n        },\n        {\n          dataIndex: 'value',\n          title: 'Value',\n          render: renderHighlightValue(record),\n        },\n      ];\n\n      return (\n        <Table\n          className=\"responsiveTable no-left-margin nested-table xs-column\"\n          rowClassName={index % 2 ? classes.responsiveTablEven : classes.responsiveTablOdd}\n          rowKey={(record: any, index) => `${record.key}__${index}`}\n          showHeader={false}\n          columns={nestedColumns}\n          tableLayout=\"auto\" // Use auto layout for nested table as well\n          dataSource={nestedTableData as object[]} // Ensure dataSource does not contain null values\n          pagination={false}\n        />\n      );\n    },\n    responsive: ['xs' as Breakpoint],\n  };\n\n  const tableColumns = columns\n    .map((column, index) => ({\n      ...column,\n      title: column.title,\n      dataIndex: (column as ColumnType<Type>).dataIndex,\n      responsive: ['sm' as Breakpoint],\n      render: (value: any, record: Type, index: number) =>\n        highlightValue(column.render ? column.render(value, record, index) : value, record.isHighlight),\n      children: (column as GroupColumnType<Type>).children?.map((child) => ({\n        render: (value: any, record: Type) => highlightValue(value, record.isHighlight),\n        ...child,\n      })),\n      width: column.key === 'yourSpecificKey' ? columnWidths[index] : undefined, // Set width dynamically for a specific column\n    }))\n    .concat(expandableColumn as any);\n\n  const { className = '' } = restProps;\n\n  return (\n    <Table<Type>\n      bordered\n      size=\"small\"\n      scroll={{ x: true }}\n      rowKey={(record: any) => record.key || `${record.dataIndex}__`}\n      pagination={false}\n      columns={tableColumns}\n      dataSource={data}\n      rowClassName={(record: Type, index: number) => (index % 2 ? classes.responsiveTablEven : classes.responsiveTablOdd)}\n      {...restProps}\n      className={`responsiveTable no-left-margin nested-table xs-column text-nowrap ${className}`}\n      tableLayout=\"auto\" // Ensure layout is auto for dynamic column sizing\n    />\n  );\n}\n\nexport default ResponsiveTable;","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\ninterface StickyContainerProps {\n  centered?: boolean;\n  children: React.ReactNode;\n}\n\nconst StickyContainer: React.FC<StickyContainerProps> = ({ centered, children }) => (\n  <div className={styles.flexWrapper}>\n    <div className={classNames(styles.container, centered ? styles['container--centered'] : '')}>\n      {children}\n    </div>\n  </div >\n);\n\nexport default StickyContainer;","import React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\n\nimport { downloadAsJson } from '@/utils';\nimport ResponsiveTable from '@/components/ResponsiveTable';\nimport NumberFormat from '@/components/NumberFormat';\nimport { termFactory } from '@/components/Term';\nimport { stypeDescription, mtypeDescription, layerDescription, pathwayDescription, formattedTerm } from '@/terms';\nimport DataContainer from '@/components/DataContainer';\nimport Collapsible from '@/components/Collapsible';\nimport DownloadButton from '@/components/DownloadButton';\nimport { dataPath } from '@/config';\n\nconst termDescription = {\n  ...stypeDescription,\n  ...mtypeDescription,\n  ...layerDescription,\n  ...pathwayDescription,\n};\n\ntype PreSynDynamicsParam = {\n  ruleN: number;\n  from: string;\n  to: string;\n  ruleType: string;\n  u: string;\n  d: string;\n  f: string;\n  nrrp: number;\n  hillScaling: number;\n  CVValidationPathway: string;\n};\n\ntype PostSynDynamicsParam = {\n  ruleN: number;\n  from: string;\n  to: string;\n  ruleType: string;\n  gsyn: string;\n  tdecayFast: string;\n  NMDAAMPARatio: string | number;\n  tdecayNMDA: string | number;\n  PSPValidationPathway: string;\n};\n\nfunction getMtypeDescription(fullMtype: string) {\n  const [layer, mtype] = fullMtype.split('_');\n  return layerDescription[layer] && mtypeDescription[mtype]\n    ? `${mtypeDescription[mtype]} from ${layerDescription[layer]} layer`\n    : null;\n}\n\nfunction formatPathway(pathway: string) {\n  const [pre, post] = pathway.split('-');\n  if (!pre || !post) return '-';\n  return (\n    <>\n      {pre}\n      -\n      {post}\n    </>\n  );\n}\n\nfunction formatValue(value: string) {\n  const [mean, std] = value.split('±').map(v => v.trim());\n  return (\n    <>\n      <NumberFormat value={mean} /> ± <NumberFormat value={std} />\n    </>\n  );\n}\n\nconst preColumns = [\n  { title: 'Rule #', dataIndex: 'ruleN' as keyof PreSynDynamicsParam },\n  {\n    title: 'From',\n    dataIndex: 'from' as keyof PreSynDynamicsParam,\n    render: (from: string) => from.split(',').map(mtype => mtype.trim()).map(mtype => (\n      <span key={mtype}>{ }mtype</span>\n    ))\n  },\n  {\n    title: 'To',\n    dataIndex: 'to' as keyof PreSynDynamicsParam,\n    render: (to: string) => to.split(',').map(mtype => mtype.trim()).map(mtype => (\n      <span key={mtype}>{mtype}</span>\n    ))\n  },\n  {\n    title: 'Rule type',\n    dataIndex: 'ruleType' as keyof PreSynDynamicsParam,\n    render: (ruleType: string) => ({ ruleType })\n  },\n  { title: (<>U (mean ± std)</>), dataIndex: 'u' as keyof PreSynDynamicsParam, render: formatValue },\n  { title: (<>D (mean ± std), ms</>), dataIndex: 'd' as keyof PreSynDynamicsParam, render: formatValue },\n  { title: (<>F (mean ± std), ms</>), dataIndex: 'f' as keyof PreSynDynamicsParam, render: formatValue },\n  { title: 'NRRP', dataIndex: 'nrrp' as keyof PreSynDynamicsParam },\n  { title: 'Hill scaling', dataIndex: 'hillScaling' as keyof PreSynDynamicsParam },\n  {\n    title: 'CV Validation pathway used',\n    dataIndex: 'CVValidationPathway' as keyof PreSynDynamicsParam,\n    render: formatPathway,\n  },\n];\n\nconst postColumns = [\n  { title: 'Rule #', dataIndex: 'ruleN' as keyof PostSynDynamicsParam },\n  {\n    title: 'From',\n    dataIndex: 'from' as keyof PostSynDynamicsParam,\n    render: (from: string) => from.split(',').map(mtype => mtype.trim()).map(mtype => (\n      <span key={mtype}>{mtype}<br /></span>\n    ))\n  },\n  {\n    title: 'To',\n    dataIndex: 'to' as keyof PostSynDynamicsParam,\n    render: (to: string) => to.split(',').map(mtype => mtype.trim()).map(mtype => (\n      <span key={mtype}>{mtype}</span>\n    ))\n  },\n  {\n    title: 'Rule type',\n    dataIndex: 'ruleType' as keyof PostSynDynamicsParam,\n    render: (ruleType: string) => ({ ruleType })\n  },\n  { title: (<>gsyn (mean ± std), nS</>), dataIndex: 'gsyn' as keyof PostSynDynamicsParam, render: formatValue },\n  { title: 'tdecay fast (mean ± std), ms', dataIndex: 'tdecayFast' as keyof PostSynDynamicsParam, render: formatValue },\n  { title: 'NMDA/AMPA ratio', dataIndex: 'NMDAAMPARatio' as keyof PostSynDynamicsParam },\n  { title: 'τdecay NMDA, ms', dataIndex: 'tdecayNMDA' as keyof PostSynDynamicsParam },\n  {\n    title: 'PSP validation pathway used',\n    dataIndex: 'PSPValidationPathway' as keyof PostSynDynamicsParam,\n    render: formatPathway,\n  },\n];\n\ntype SynDynamicsParamsTablesProps = {\n  theme?: number;\n}\n\nconst SynDynamicsParamsTables: React.FC<SynDynamicsParamsTablesProps> = ({ theme }) => {\n  const [preData, setPreData] = useState<PreSynDynamicsParam[] | null>(null);\n  const [postData, setPostData] = useState<PostSynDynamicsParam[] | null>(null);\n\n  useEffect(() => {\n    fetch(`${dataPath}/2_reconstruction-data/connection-physiology/presyn-dynamics-params.json`)\n      .then((response) => response.json())\n      .then((data) => setPreData(data));\n\n    fetch(`${dataPath}/2_reconstruction-data/connection-physiology/postsyn-dynamics-params.json`)\n      .then((response) => response.json())\n      .then((data) => setPostData(data));\n  }, []);\n\n  if (!preData || !postData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <DataContainer\n      theme={theme}\n      navItems={[\n        { id: 'presynapsesSection', label: 'Presynaptic dynamics parameters' },\n        { id: 'postsynapsesSection', label: 'Postsynaptic dynamics parameters' },\n      ]}\n    >\n      <Collapsible id=\"presynapsesSection\" title=\"Presynaptic dynamics parameters\">\n        <p className='text-base mb-4'>\n          Presynaptic parameters include the probability of release (U), the time constants for depression (D) and facilitation (F), and the number of release sites (NRRP). The coefficient of variation (CV) of the EPSP amplitudes are <Link href=\"/validations/connection-physiology\">validated against pathway-specific data</Link>.\n        </p>\n        <ResponsiveTable<PreSynDynamicsParam>\n          columns={preColumns}\n          data={preData}\n          rowKey={({ from, to }) => `${from}_${to}`}\n        />\n        <div className=\"mt-4\">\n          <DownloadButton\n            theme={theme}\n            onClick={() => downloadAsJson(preData, `Presynaptic-Dynamics-Parameters-Data.json`)}\n          >\n            Presynaptic dynamics parameters\n          </DownloadButton>\n        </div>\n      </Collapsible>\n\n      <Collapsible id=\"postsynapsesSection\" title=\"Postsynaptic dynamics parameters\">\n        <p className='text-base mb-4'>\n          Postsynaptic parameters include the maximum synaptic conductance (gsyn), rise and decay time constant of the fast ionotropic receptors (AMPA, GABAA), rise and decay time constant of the slow ionotropic receptors (NMDA), and NMDA/AMPA ratio. Note that we set rise time constant to 0.2 and 2.95 ms respectively for fast and slow receptors. We do not consider the slow ionotropic receptor GABAA. The somatic postsynaptic potentials (PSPs) are validated against <Link href=\"/validations/connection-physiology\">pathway-specific data</Link>.\n        </p>\n        <ResponsiveTable<PostSynDynamicsParam>\n          className=\"mt-3\"\n          columns={postColumns}\n          data={postData}\n          rowKey={({ from, to }) => `${from}_${to}`}\n        />\n        <div className=\"mt-4\">\n          <DownloadButton\n            theme={theme}\n            onClick={() => downloadAsJson(postData, `Postsynaptic-Dynamics-Parameters-Data.json`)}\n          >\n            Postsynaptic dynamics parameters\n          </DownloadButton>\n        </div>\n      </Collapsible>\n    </DataContainer>\n  );\n};\n\nexport default SynDynamicsParamsTables;","import React from 'react';\nimport { Row, Col } from 'antd';\nimport Image from 'next/image';\nimport Link from 'next/link';\n\nimport { colorName } from './config';\nimport Filters from '@/layouts/Filters';\nimport StickyContainer from '@/components/StickyContainer';\nimport Title from '@/components/Title';\nimport InfoBox from '@/components/InfoBox';\n\nimport SynDynamicsParamsTables from './connection-physiology/SynDynamicsParamsTables';\n\nconst SynapsesView: React.FC = () => {\n\n  const theme = 2;\n\n  return (\n    <>\n      <Filters theme={theme}>\n        <div className=\"flex flex-col md:flex-row w-full md:items-center mt-40 md:mt-0\">\n          {/* Title and Info */}\n          <div className=\"w-full mb-12 md:mb-0\">\n            <StickyContainer>\n              <Title\n                primaryColor={colorName}\n                title=\"Connection Physiology\"\n                subtitle=\"Reconstruction Data\"\n                theme={theme}\n              />\n              <div role=\"information\">\n                <InfoBox>\n                  <p>\n                    Starting from literature <Link href={\"../experimental-data/connection-physiology/\"} className={\"link theme-\" + theme}>data</Link> and pair recordings (<Link href=\"https://pubmed.ncbi.nlm.nih.gov/27038232/\" className={\"link theme-\" + theme}>Kohus et al., 2016</Link>), we define a set of parameters and 22 rules to describe all possible pathways. We divide the parameters in two groups: presynaptic and postsynaptic.\n\n                  </p>\n                </InfoBox>\n              </div>\n            </StickyContainer>\n          </div>\n        </div>\n      </Filters>\n\n\n      <SynDynamicsParamsTables theme={theme} />\n\n\n    </>\n  );\n};\n\n\nexport default SynapsesView;\n","import Head from 'next/head';\nimport ConnectionPhysiologyView from '@/views/2_reconstruction-data/ConnectionPhysiology';\n\nexport default function ConnectionPhysiologyPage() {\n  const metadata = {\n    title: 'Connection Physiology - Reconstruction Data | The Hippocampus Hub',\n    description:\n      'Examine the physiological properties of synaptic connections in the hippocampus, including pre- and post-synaptic parameters such as synaptic conductance, decay times, and receptor dynamics.',\n    keywords: [\n      'Connection Physiology',\n      'Hippocampus',\n      'Synaptic Conductance',\n      'Pre-Synaptic',\n      'Post-Synaptic',\n      'Reconstruction Data',\n      'Neuroscience',\n      'Blue Brain Project',\n    ],\n    author: 'Blue Brain Project',\n    creator: 'EPFL Blue Brain Project',\n    publisher: 'The Hippocampus Hub',\n  };\n\n  return (\n    <>\n      <Head>\n        <title>{metadata.title}</title>\n        <meta name=\"description\" content={metadata.description} />\n        <meta name=\"keywords\" content={metadata.keywords.join(', ')} />\n        <meta name=\"author\" content={metadata.author} />\n        <meta name=\"creator\" content={metadata.creator} />\n        <meta name=\"publisher\" content={metadata.publisher} />\n      </Head>\n\n      <ConnectionPhysiologyView />\n    </>\n  );\n}","import React from 'react';\n\nexport type TermDescription = Record<string, string>;\n\n\nexport const layerDescription: TermDescription = {\n  SLM: 'Stratum Lacunosum-Moleculare',\n  SR: 'Stratum Radiatum',\n  SP: 'Stratum Pyramidal',\n  SO: 'Stratum Oriens',\n};\n\nexport const mtypeDescription: TermDescription = {\n  PPA: 'Perforant Pathway Associated Cell',\n  SCA: 'Schaffer Collateral Associated Cell',\n  AA: 'Axon Axonic Cell',\n  BS: 'Bistratified Cell',\n  PVBC: 'PV+ Basket Cell',\n  CCKBC: 'CCK+ Basket Cell',\n  PC: 'Pyramidal Cell',\n  BP: 'Back-Projecting Cell',\n  OLM: 'Oriens Lacunosum-Moleculare Cell',\n  Tri: 'Trilaminar Cell',\n  Ivy: 'Ivy Cell',\n};\n\nexport const stypeDescription: TermDescription = {\n  E1: 'Excitatory facilitating',\n  E2: 'Excitatory depressing',\n  I1: 'Inhibitory facilitating',\n  I2: 'Inhibitory depressing',\n  I3: 'Inhibitory pseudo linear',\n};\n\nexport const etypeDescription: TermDescription = {\n  cADpyr: 'continuous Accommodating (Adapting) for pyramidal cells',\n  cAC: 'continuous Accommodating',\n  bAC: 'burst Accommodating',\n  cNAC: 'continuous Non-accommodating',\n  bNAC: 'burst Non-accommodating',\n  dNAC: 'delayed Non-accommodating',\n  cSTUT: 'continuous Stuttering',\n  bSTUT: 'burst Stuttering',\n  dSTUT: 'delayed Stuttering',\n  cIR: 'continuous Irregular',\n  bIR: 'burst Irregular',\n};\n\nexport const pathwayDescription: TermDescription = {\n  gsyn: 'The peak conductance (in nS) for a single synaptic contact',\n  U: 'Utilization of synaptic efficacy - analogous to the transmitter release probability at a single synaptic contact',\n  D: 'Time constant (in ms) for recovery from depression',\n  F: 'Time constant (in ms) for recovery from facilitation',\n};\n\nexport const formattedTerm: Record<string, React.ReactNode> = {\n  gsyn: (<span>g<sub>syn</sub></span>),\n};\n","import { accentColors } from '@/config';\nimport { Color } from '@/types';\n\nexport const sectionTitle = 'Reconstruction Data';\nexport const colorName: Color = 'grey-2';\nexport const primaryColor = accentColors[colorName];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"responsiveTable\":\"styles_responsiveTable__njQH4\",\"ant-table-cell\":\"styles_ant-table-cell__Fj0OS\",\"ant-table-cell-auto\":\"styles_ant-table-cell-auto__Yw8kj\",\"responsiveTablOdd\":\"styles_responsiveTablOdd__ix6_m\",\"responsiveTablEven\":\"styles_responsiveTablEven__sIcPO\",\"highlightBackground\":\"styles_highlightBackground__eWdTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__31D34\",\"container--center\":\"styles_container--center__Yuntq\",\"flexWrapper\":\"styles_flexWrapper___gDLe\"};"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","value","significantFigures","thousandSeparator","prefix","suffix","param","formatNumber","num","parseFloat","Number","isFinite","formatted","toLocaleString","maximumSignificantDigits","toPrecision","concat","renderHighlightValue","nestedValue","_value","highlightValue","record","isHighlight","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","columns","data","restProps","columnWidths","setColumnWidths","useState","useEffect","newColumnWidths","map","maxTextWidth","reduce","max","dataIndex","column","undefined","text","String","textWidth","calculateTextWidth","font","canvas","document","createElement","context","getContext","measureText","width","Math","min","tableColumns","index","_column_children","title","responsive","render","children","child","key","nestedTableData","childrenValue","jsxs","filter","item","nestedColumns","Table","rowClassName","classes","rowKey","showHeader","tableLayout","dataSource","pagination","bordered","size","scroll","x","centered","styles","classNames","formatPathway","pathway","pre","post","split","jsx_runtime","Fragment","formatValue","mean","std","v","trim","NumberFormat","stypeDescription","mtypeDescription","layerDescription","pathwayDescription","preColumns","from","mtype","span","to","ruleType","postColumns","br","connection_physiology_SynDynamicsParamsTables","theme","preData","setPreData","postData","setPostData","fetch","dataPath","then","response","json","DataContainer","navItems","id","label","Collapsible","p","Link","href","ResponsiveTable","DownloadButton","onClick","downloadAsJson","ConnectionPhysiology","Filters","StickyContainer","Title","primaryColor","colorName","subtitle","role","InfoBox","SynDynamicsParamsTables","ConnectionPhysiologyPage","metadata","description","keywords","author","creator","publisher","Head","meta","name","content","join","ConnectionPhysiologyView","SLM","SR","SP","SO","PPA","SCA","AA","BS","PVBC","CCKBC","PC","BP","OLM","Tri","Ivy","E1","E2","I1","I2","I3","etypeDescription","cADpyr","cAC","bAC","cNAC","bNAC","dNAC","cSTUT","bSTUT","dSTUT","cIR","bIR","gsyn","U","D","F","accentColors","module","exports"],"sourceRoot":""}