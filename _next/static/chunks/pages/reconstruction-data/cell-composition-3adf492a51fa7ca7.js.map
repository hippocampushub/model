{"version":3,"file":"static/chunks/pages/reconstruction-data/cell-composition-3adf492a51fa7ca7.js","mappings":"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","sources":["webpack://_N_E/?925b","webpack://_N_E/./src/components/NumberFormat/index.tsx","webpack://_N_E/./src/components/StickyContainer/index.tsx","webpack://_N_E/./src/components/Term/index.tsx","webpack://_N_E/./src/components/VolumeSectionSelector3D/index.tsx","webpack://_N_E/./src/constants.ts","webpack://_N_E/./src/hoc/with-preselection.tsx","webpack://_N_E/./src/views/2_reconstruction-data/cell-composition/CellCompositionTable.tsx","webpack://_N_E/./src/views/2_reconstruction-data/cell-composition/MECompositionTable.tsx","webpack://_N_E/./src/views/2_reconstruction-data/CellComposition.tsx","webpack://_N_E/./src/pages/reconstruction-data/cell-composition.tsx","webpack://_N_E/./src/terms.tsx","webpack://_N_E/./src/components/StickyContainer/styles.module.scss","webpack://_N_E/./src/components/Term/styles.module.scss","webpack://_N_E/./src/components/VolumeSectionSelector3D/styles.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/reconstruction-data/cell-composition\",\n      function () {\n        return require(\"private-next-pages/reconstruction-data/cell-composition.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/reconstruction-data/cell-composition\"])\n      });\n    }\n  ","import React from 'react';\n\n\ntype NumberFormatProps = {\n  value?: any;\n  significantFigures?: number;\n  thousandSeparator?: boolean;\n  prefix?: string;\n  suffix?: string;\n};\n\nexport function formatNumber(value, significantFigures = 5, thousandSeparator = true, prefix = '', suffix = '') {\n  const num = parseFloat(value);\n\n  if (!Number.isFinite(num)) return value;\n\n  const formatted = thousandSeparator\n    ? num.toLocaleString('en', { maximumSignificantDigits: significantFigures })\n    : num.toPrecision(significantFigures);\n\n  return `${prefix}${formatted}${suffix}`;\n}\n\nconst NumberFormat: React.FC<NumberFormatProps> = ({\n  value,\n  significantFigures = 5,\n  thousandSeparator = true,\n  prefix = '',\n  suffix = '',\n}) => {\n  return formatNumber(value, significantFigures, thousandSeparator, prefix, suffix);\n}\n\n\nexport default NumberFormat;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\ninterface StickyContainerProps {\n  centered?: boolean;\n  children: React.ReactNode;\n}\n\nconst StickyContainer: React.FC<StickyContainerProps> = ({ centered, children }) => (\n  <div className={styles.flexWrapper}>\n    <div className={classNames(styles.container, centered ? styles['container--centered'] : '')}>\n      {children}\n    </div>\n  </div >\n);\n\nexport default StickyContainer;","import React from 'react';\nimport { Tooltip } from 'antd';\n\nimport { TermDescription } from '@/terms';\n\nimport style from './styles.module.scss';\n\ntype TermProps = {\n  term: string;\n  description?: any;\n  className?: string;\n};\n\ntype TermFormatter = (term: string) => string;\n\nexport const termFactory = (termDescription: TermDescription = {}, termFormatter?: TermFormatter) => {\n  const Term: React.FC<TermProps> = ({ className, term, description }) => {\n    const currentDescription = description || termDescription[term];\n    const formattedTerm = termFormatter\n      ? termFormatter(term)\n      : term;\n\n    if (!currentDescription) {\n      return (<span className={className}>{formattedTerm}</span>);\n    }\n\n    return (\n      <Tooltip title={currentDescription} destroyTooltipOnHide={true}>\n        <span className={`${style.container} ${className ?? ''}`}>{formattedTerm}</span>\n      </Tooltip>\n    );\n  };\n\n  return Term;\n};\n","import React, { useEffect, useRef, useCallback, useState } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\n\nimport { VolumeSection } from '@/types';\nimport { volumeSections, theme } from '@/constants';\n\nimport { basePath, dataPath } from '@/config';\n\nimport styles from './styles.module.scss';\n\ntype VolumeSectionSelectProps = {\n  value?: VolumeSection | string;\n  onSelect?: (volumeSection: VolumeSection) => void;\n  theme?: number;\n};\n\nconst VolumeSectionSelector3D: React.FC<VolumeSectionSelectProps> = ({\n  value = 'region',\n  onSelect = () => { },\n  theme: themeProp = 2,\n}) => {\n  const mountRef = useRef<HTMLDivElement>(null);\n  const hoveredObjectRef = useRef<THREE.Object3D | null>(null);\n  const selectedVolumeSectionRef = useRef<VolumeSection>(value as VolumeSection);\n  const selectedObjectRef = useRef<THREE.Object3D | null>(null);\n\n  const camera = useRef<THREE.OrthographicCamera | null>(null);\n  const scene = useRef<THREE.Scene | null>(null);\n  const renderer = useRef<THREE.WebGLRenderer | null>(null);\n  const raycaster = useRef<THREE.Raycaster | null>(null);\n  const mouse = useRef(new THREE.Vector2());\n\n  const obj1Ref = useRef<THREE.Object3D | null>(null);\n  const obj2Ref = useRef<THREE.Object3D | null>(null);\n  const obj3Ref = useRef<THREE.Object3D | null>(null);\n\n  const objectsLoadedRef = useRef(false);\n  const [offset, setOffset] = useState(21);\n  const [textSize, setTextSize] = useState(1);\n\n  const handleClick = useCallback(\n    (event) => {\n      if (!objectsLoadedRef.current) return;\n\n      const rect = mountRef.current!.getBoundingClientRect();\n      mouse.current.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      raycaster.current!.setFromCamera(mouse.current, camera.current!);\n      const intersects = raycaster.current!.intersectObjects([obj1Ref.current!, obj2Ref.current!, obj3Ref.current!], true);\n\n      if (intersects.length > 0) {\n        let intersectedObject = intersects[0].object;\n        while (intersectedObject.parent && ![obj1Ref.current, obj2Ref.current, obj3Ref.current].includes(intersectedObject)) {\n          intersectedObject = intersectedObject.parent;\n        }\n\n        if ([obj1Ref.current, obj2Ref.current, obj3Ref.current].includes(intersectedObject)) {\n          const volumeSection = intersectedObject.userData.volumeSection as VolumeSection;\n          if (volumeSection) {\n            updateSelection(volumeSection, intersectedObject);\n            onSelect(volumeSection);\n          }\n        }\n      }\n    },\n    [onSelect, themeProp]\n  );\n\n  const updateSelection = (newVolumeSection: VolumeSection, newSelectedObject: THREE.Object3D) => {\n    if (selectedObjectRef.current) {\n      updateObjectColors(selectedObjectRef.current, theme[themeProp].default, theme[themeProp].hover);\n    }\n\n    updateObjectColors(newSelectedObject, theme[themeProp].selected, 0xffffff);\n\n    selectedVolumeSectionRef.current = newVolumeSection;\n    selectedObjectRef.current = newSelectedObject;\n  };\n\n  const updateObjectColors = (object: THREE.Object3D, mainColor: number, textColor: number) => {\n    object.traverse((child: any) => {\n      if (child instanceof THREE.Mesh) {\n        if (child.name === object.userData.volumeSection) {\n          child.material.color.set(mainColor);\n        }\n        if (child.geometry && child.geometry.type === 'TextGeometry') {\n          child.material.color.set(textColor);\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    scene.current = new THREE.Scene();\n    scene.current.background = new THREE.Color('#313354');\n\n    const aspect = mountRef.current.clientWidth / mountRef.current.clientHeight;\n    camera.current = new THREE.OrthographicCamera(-aspect * 200, aspect * 200, 200, -200, 0.1, 1000);\n    camera.current.position.z = 10;\n\n    renderer.current = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.current.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    renderer.current.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.current.domElement);\n\n    raycaster.current = new THREE.Raycaster();\n\n    const loader = new OBJLoader();\n    loader.load(\n      `${dataPath}/3d/volume-selector/volume-selector.obj`,\n      (obj) => {\n        [obj1Ref, obj2Ref, obj3Ref].forEach((ref, index) => {\n          const newObj = obj.clone();\n          ref.current = newObj;\n          newObj.position.set((index - 1) * offset, 0, 0);\n          newObj.userData.volumeSection = ['region', 'slice', 'cylinder'][index];\n          applyMaterial(newObj, index);\n          scene.current!.add(newObj);\n        });\n\n        const fontLoader = new FontLoader();\n        fontLoader.load(`${basePath}/assets/fonts/Titillium_Web_Light_.json`, (font) => {\n          ['Region', 'Slice', 'Cylinder'].forEach((text, index) => {\n            createText(text, [obj1Ref, obj2Ref, obj3Ref][index].current!, text.toLowerCase(), font);\n          });\n        });\n\n        objectsLoadedRef.current = true;\n\n        if (value) {\n          setInitialSelection(value as VolumeSection);\n        }\n\n        animate();\n      },\n      (xhr) => console.log((xhr.loaded / xhr.total) * 100 + '% loaded'),\n      (error) => console.error('An error happened', error)\n    );\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.current!.render(scene.current!, camera.current!);\n    };\n\n    const handleResize = () => {\n      if (mountRef.current && renderer.current && camera.current) {\n        const width = mountRef.current.clientWidth;\n        const height = mountRef.current.clientHeight;\n        renderer.current.setSize(width, height);\n\n        const aspect = width / height;\n        camera.current.left = -aspect * 200;\n        camera.current.right = aspect * 200;\n        camera.current.top = 200;\n        camera.current.bottom = -200;\n        camera.current.updateProjectionMatrix();\n\n        const newOffset = window.innerWidth < 1400 ? 16 : 21;\n        setOffset(newOffset);\n\n        camera.current.zoom = window.innerWidth < 1200 ? 11 : 16;\n        camera.current.updateProjectionMatrix();\n\n        const newTextSize = window.innerWidth < 1200 ? 1 : 0.8;\n        setTextSize(newTextSize);\n\n        updateTextSize();\n      }\n    };\n\n    const handleMouseMove = (event) => {\n      if (!objectsLoadedRef.current) return;\n\n      const rect = mountRef.current!.getBoundingClientRect();\n      mouse.current.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      raycaster.current!.setFromCamera(mouse.current, camera.current!);\n      const intersects = raycaster.current!.intersectObjects([obj1Ref.current!, obj2Ref.current!, obj3Ref.current!], true);\n\n      if (intersects.length > 0) {\n        let intersectedObject = intersects[0].object;\n        while (intersectedObject.parent && ![obj1Ref.current, obj2Ref.current, obj3Ref.current].includes(intersectedObject)) {\n          intersectedObject = intersectedObject.parent;\n        }\n\n        if (hoveredObjectRef.current !== intersectedObject && selectedObjectRef.current !== intersectedObject) {\n          if (hoveredObjectRef.current && hoveredObjectRef.current !== selectedObjectRef.current) {\n            updateObjectColors(hoveredObjectRef.current, theme[themeProp].default, theme[themeProp].hover);\n          }\n\n          updateObjectColors(intersectedObject, theme[themeProp].hover, theme[themeProp].hover);\n\n          hoveredObjectRef.current = intersectedObject;\n          mountRef.current!.style.cursor = 'pointer';\n        }\n      } else {\n        if (hoveredObjectRef.current && hoveredObjectRef.current !== selectedObjectRef.current) {\n          updateObjectColors(hoveredObjectRef.current, theme[themeProp].default, theme[themeProp].hover);\n          hoveredObjectRef.current = null;\n          mountRef.current!.style.cursor = 'default';\n        }\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    mountRef.current.addEventListener('mousemove', handleMouseMove);\n    mountRef.current.addEventListener('click', handleClick);\n\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (mountRef.current) {\n        mountRef.current.removeEventListener('mousemove', handleMouseMove);\n        mountRef.current.removeEventListener('click', handleClick);\n        mountRef.current.removeChild(renderer.current!.domElement);\n      }\n    };\n  }, [themeProp]);\n\n  useEffect(() => {\n    if (objectsLoadedRef.current) {\n      [obj1Ref, obj2Ref, obj3Ref].forEach((ref, index) => {\n        if (ref.current) {\n          ref.current.position.set((index - 1) * offset, 0, 0);\n        }\n      });\n    }\n  }, [offset]);\n\n  useEffect(() => {\n    if (objectsLoadedRef.current && value) {\n      setInitialSelection(value as VolumeSection);\n    }\n  }, [value, themeProp]);\n\n  const applyMaterial = (obj: THREE.Object3D, index: number) => {\n    obj.traverse((child) => {\n      if (child instanceof THREE.Mesh) {\n        let material;\n        if (child.name === obj.userData.volumeSection) {\n          material = new THREE.MeshBasicMaterial({\n            color: theme[themeProp].default,\n            transparent: false,\n            opacity: 1,\n            depthWrite: true,\n          });\n          child.renderOrder = 2;\n        } else if (child.name === 'skeleton') {\n          material = new THREE.MeshBasicMaterial({\n            color: theme[themeProp].selectedEdges,\n            transparent: true,\n            opacity: 0,\n            depthWrite: false,\n          });\n          const wireframeGeometry = new THREE.EdgesGeometry(child.geometry);\n          const wireframeMaterial = new THREE.LineBasicMaterial({\n            color: theme[themeProp].default,\n            transparent: true,\n            opacity: 1,\n            depthWrite: false,\n          });\n          const wireframe = new THREE.LineSegments(wireframeGeometry, wireframeMaterial);\n          wireframe.renderOrder = 1;\n          child.add(wireframe);\n        } else {\n          child.visible = false;\n        }\n        if (material) {\n          child.material = material;\n        }\n      }\n    });\n  };\n\n  const createText = (text: string, obj: THREE.Object3D, childName: string, font: THREE.Font) => {\n    const textGeometry = new TextGeometry(text, {\n      font: font,\n      size: textSize,\n      height: 0.2,\n      curveSegments: 32,\n      bevelEnabled: true,\n      bevelThickness: 0.02,\n      bevelSize: 0.02,\n    });\n\n    const textMaterialColor = selectedVolumeSectionRef.current === childName ? 0xffffff : theme[themeProp].hover;\n\n    const textMaterial = new THREE.MeshBasicMaterial({\n      color: textMaterialColor,\n      transparent: false,\n      opacity: 1,\n    });\n    const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n\n    obj.traverse((child) => {\n      if (child instanceof THREE.Mesh && child.name === childName) {\n        textMesh.position.set(0, 0, 0);\n        child.add(textMesh);\n      }\n    });\n  };\n\n  const updateTextSize = () => {\n    ['Region', 'Slice', 'Cylinder'].forEach((text, index) => {\n      const obj = [obj1Ref, obj2Ref, obj3Ref][index].current;\n      if (obj) {\n        obj.traverse((child) => {\n          if (child instanceof THREE.Mesh && child.geometry && child.geometry.type === 'TextGeometry') {\n            const oldTextMesh = child;\n            const parentMesh = oldTextMesh.parent;\n            if (parentMesh) {\n              parentMesh.remove(oldTextMesh);\n              const fontLoader = new FontLoader();\n              fontLoader.load(`${basePath}/assets/fonts/Titillium_Web_Light_.json`, (font) => {\n                createText(text, obj, text.toLowerCase(), font);\n              });\n            }\n          }\n        });\n      }\n    });\n  };\n\n  const setInitialSelection = (initialVolumeSection: VolumeSection) => {\n    const initialObjectRef = [obj1Ref, obj2Ref, obj3Ref].find(\n      (ref) => ref.current?.userData.volumeSection === initialVolumeSection\n    );\n\n    if (initialObjectRef?.current) {\n      updateSelection(initialVolumeSection, initialObjectRef.current);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.volumeSelector} ref={mountRef}></div>\n      <div className={styles.volumeList}></div>\n    </div>\n  );\n};\n\nexport default VolumeSectionSelector3D;\n","import { Layer, NeuriteType, VolumeSection, AchConcentration, CellGroup, Theme, GraphTheme, ThemeColors } from './types';\nimport NeuronModelLibrary from './views/2_reconstruction-data/NeuronModelLibrary';\nimport AcetylcholineView from './views/4_validations/Acetylcholine';\n\nexport const layers: Layer[] = [\n  'SLM',\n  'SR',\n  'SP',\n  'SO',\n];\n\nexport const theme: Theme = {\n  1: { default: 0x44405B, hover: 0x7D656F, selected: 0xB68983, selectedEdges: 0xEFAE97 },\n  2: { default: 0x44405B, hover: 0x7B5B6A, selected: 0xB37579, selectedEdges: 0xEA9088 },\n  3: { default: 0x44405B, hover: 0x715970, selected: 0x9F7184, selectedEdges: 0xCC8A99 },\n  4: { default: 0x44405B, hover: 0x625D77, selected: 0x807B92, selectedEdges: 0x9E98AE },\n  5: { default: 0x393D5E, hover: 0x595D79, selected: 0x6E7B97, selectedEdges: 0x8398B5 },\n};\n\nexport const graphTheme: GraphTheme = {\n  red: \"#C46785\",\n  blue: \"#3b4165\",\n  green: \"#7FD982\",\n  purple: \"#7F5482\",\n  yellow: \"#f9f871\",\n};\n\nexport const themeColors: ThemeColors = {\n  experimental_data: \"#EFAE97\",\n  reconstruction_data: \"#EA9088\",\n  digital_reconstruction: \"#CC8A99\",\n  validations: \"#9E98AE\",\n  predictions: \"#8398B5\",\n};\n\n\n\nexport const neuriteTypes: NeuriteType[] = [\n  'all',\n  'axon',\n  'apical',\n  'basal',\n  'dendrite',\n  'soma',\n\n];\n\nexport const volumeSections: VolumeSection[] = [\n  'region',\n  'slice',\n  'cylinder',\n];\n\n\nexport const achConcentrations: AchConcentration[] = [\n  '0um',\n  '10um',\n  '100um'\n];\n\nexport const cellGroup: CellGroup[] = [\n  'All',\n  'Excitatory',\n  'Inhibitory',\n  'SLM_PPA',\n  'SO_BP',\n  'SO_BS',\n  'SO_OLM',\n  'SO_Tri',\n  'SP_AA',\n  'SP_BS',\n  'SP_CCKBC',\n  'SP_Ivy',\n  'SP_PC',\n  'SP_PVBC',\n  'SR_SCA'\n]\n\nexport const defaultSelection = {\n  experimentalData: {\n    layerAnatomy: {\n      layer: 'SLM',\n    },\n    neuronMorphology: {\n      layer: 'SLM',\n      mtype: 'SLM_PPA',\n      instance: '011127HP1',\n    },\n    neuronElectrophysiology: {\n      etype: 'bAC',\n      etype_instance: '95810035',\n    },\n  },\n  reconstructionData: {\n    volume: {\n      volume_section: 'region',\n    },\n    cellComposition: {\n      volume_section: 'region',\n    },\n    neurons: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      instance: 'CA1_int_bAC_011127HP1_20190329115610',\n    },\n  },\n  digitalReconstruction: {\n    region: {\n      volume_section: 'region',\n    },\n    morphologyLibrary: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      morphology: '011127HP1',\n    },\n    schafferCollateral: {\n      volume_section: 'region',\n      prelayer: 'SC',\n      postlayer: 'All'\n    },\n    connectionAnatomy: {\n      volume_section: 'region',\n      prelayer: 'All',\n      postlayer: 'All'\n    },\n    connectionPhysiology: {\n      volume_section: 'region',\n      prelayer: 'all',\n      postlayer: 'all'\n    },\n    acetylcholineEffectsOnCell: {\n      morphology: \"450290\",\n      etype: \"cNAC\",\n      mtype: \"SO_BP\"\n    },\n    acetylcholineEffectsOnSynapses: {\n      ach_concentration: '0um',\n      prelayer: 'Excitatory',\n      postlayer: 'Excitatory'\n    },\n\n    neurons: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      instance: '011127HP1',\n    },\n    NeuronModelLibrary: {\n      mtype: 'SO_BP',\n      etype: 'cNAC',\n      morphology: '980120A_-_Scale_x1.000_y0.900_z1.000'\n    },\n    synapticPathways: {\n      volume_section: 'slice',\n      prelayer: 'All',\n      postlayer: 'All',\n    },\n    acetylcholine: {\n      ach_concentration: '0um',\n      prelayer: 'Excitatory',\n      postlayer: 'Excitatory',\n    },\n  },\n\n};\n\nexport const neuriteColor: Record<NeuriteType, string> = {\n  all: '#1fcf1f',\n  axon: '#1111ff',\n  apical: '#f442ad',\n  basal: '#ff1111',\n  dendrite: '#ff1111',\n  soma: '#000',\n};\n","import React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\ntype PreselectionProps = {\n  key: string,\n  defaultQuery: any,\n};\n\nconst withPreselection = (WrappedComponent, options: PreselectionProps) => {\n\n  const WithPreselectionComponent: React.FC = () => {\n    const router = useRouter();\n\n    useEffect(() => {\n      if (!router.isReady) return;\n\n      if (!router.query[options.key]) {\n        const query = options.defaultQuery;\n        router.replace({ query }, undefined, { shallow: true });\n      }\n    }, [router.query]);\n\n    return (<WrappedComponent />);\n  };\n\n  return WithPreselectionComponent;\n}\n\nexport default withPreselection;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { Table } from 'antd';\n\nimport { VolumeSection } from '@/types';\nimport { downloadAsJson } from '@/utils';\nimport NumberFormat from '@/components/NumberFormat';\nimport { layerDescription, mtypeDescription } from '@/terms';\nimport { termFactory } from '@/components/Term';\n\nimport DownloadButton from '@/components/DownloadButton';\n\nimport { dataPath } from '@/config';\n\ntype CellCompositionTableProps = {\n  volumeSection: VolumeSection;\n  theme?: number;\n};\n\ntype CellComposition = {\n  mtype: string;\n  density: number;\n  count: number;\n};\n\nconst termDescription = {\n  ...mtypeDescription,\n  ...layerDescription,\n};\n\nconst Term = termFactory(termDescription);\n\nfunction getMtypeDescription(fullMtype: string) {\n  const [layer, mtype] = fullMtype.split('_');\n\n  return layerDescription[layer] && mtypeDescription[mtype]\n    ? `${mtypeDescription[mtype]} from ${layerDescription[layer]} layer`\n    : null;\n}\n\nconst columns = [\n  {\n    title: 'M-type',\n    dataIndex: 'mtype' as keyof CellComposition,\n    render: mtype => (<Term term={mtype} description={getMtypeDescription(mtype)} />)\n  },\n  {\n    title: 'Density, neurons/mm³',\n    dataIndex: 'density' as keyof CellComposition,\n    render: density => <NumberFormat value={density} />\n  },\n  {\n    title: 'Number of cells',\n    dataIndex: 'count' as keyof CellComposition,\n    render: count => <NumberFormat value={count} />\n  },\n];\n\nconst CellCompositionTable: React.FC<CellCompositionTableProps> = ({ volumeSection, theme }) => {\n  const [data, setData] = useState<Record<VolumeSection, CellComposition[]> | null>(null);\n\n  useEffect(() => {\n    fetch(dataPath + '/2_reconstruction-data/cell-composition/cell-composition.json')\n      .then((response) => response.json())\n      .then((fetchedData) => setData(fetchedData));\n  }, []);\n\n  const totalCount = useMemo(() => {\n    if (!data || !volumeSection) return 0;\n    return data[volumeSection].reduce((sum, curr) => sum + curr.count, 0);\n  }, [data, volumeSection]);\n\n  if (!data || !volumeSection) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Table<CellComposition>\n        className=\"mb-2\"\n        size=\"small\"\n        pagination={false}\n        bordered\n        columns={columns}\n        dataSource={data[volumeSection]}\n        rowKey={({ mtype }) => mtype}\n        summary={() => (\n          <Table.Summary.Row>\n            <Table.Summary.Cell index={0}><strong>Total</strong></Table.Summary.Cell>\n            <Table.Summary.Cell index={1} />\n            <Table.Summary.Cell index={2}><strong><NumberFormat value={totalCount} /></strong></Table.Summary.Cell>\n          </Table.Summary.Row>\n        )}\n      />\n\n      <div className=\"mt-4\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(\n            data[volumeSection],\n            `Cell-Composition-Data-${volumeSection}.json`\n          )}\n        >\n          <span className='collapsible-property small'>{volumeSection}</span> Cell Composition\n        </DownloadButton>\n      </div>\n    </>\n  );\n};\n\nexport default CellCompositionTable;","import React, { useState, useEffect } from 'react';\nimport { Table } from 'antd';\n\nimport { downloadAsJson } from '@/utils';\nimport NumberFormat from '@/components/NumberFormat';\nimport { layerDescription, mtypeDescription, etypeDescription } from '@/terms';\nimport { termFactory } from '@/components/Term';\n\nimport DownloadButton from '@/components/DownloadButton';\nimport { dataPath } from '@/config';\n\ntype MEComposition = {\n  mtype: string;\n  cNAC: number;\n  cAC: number;\n  bAC: number;\n};\n\nconst termDescription = {\n  ...mtypeDescription,\n  ...layerDescription,\n  ...etypeDescription,\n};\n\nconst Term = termFactory(termDescription);\n\nfunction getMtypeDescription(fullMtype: string) {\n  const [layer, mtype] = fullMtype.split('_');\n\n  return layerDescription[layer] && mtypeDescription[mtype]\n    ? `${mtypeDescription[mtype]} from ${layerDescription[layer]} layer`\n    : null;\n}\n\nconst formatValue = (value: number | null) => value !== null ? <NumberFormat value={value} suffix=\"%\" /> : '-';\n\nconst columns = [\n  {\n    title: 'M-type',\n    dataIndex: 'mtype' as keyof MEComposition,\n    render: mtype => (<Term term={mtype} description={getMtypeDescription(mtype)} />)\n  },\n  {\n    title: <Term term=\"cNAC\" />,\n    dataIndex: 'cNAC' as keyof MEComposition,\n    render: value => formatValue(value),\n  },\n  {\n    title: <Term term=\"cAC\" />,\n    dataIndex: 'cAC' as keyof MEComposition,\n    render: value => formatValue(value),\n  },\n  {\n    title: <Term term=\"bAC\" />,\n    dataIndex: 'bAC' as keyof MEComposition,\n    render: value => formatValue(value),\n  },\n];\n\ntype MECompositionTableProps = {\n  theme?: number;\n};\n\nconst MECompositionTable: React.FC<MECompositionTableProps> = ({ theme }) => {\n  const [data, setData] = useState<MEComposition[] | null>(null);\n\n  useEffect(() => {\n    fetch(dataPath + '/2_reconstruction-data/cell-composition/me-composition.json')\n      .then((response) => response.json())\n      .then((fetchedData) => setData(fetchedData));\n  }, [data]);\n\n  if (!data) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Table<MEComposition>\n        className=\"mb-2\"\n        size=\"small\"\n        bordered\n        tableLayout=\"fixed\"\n        pagination={false}\n        columns={columns}\n        dataSource={data}\n        rowKey={({ mtype }) => mtype}\n      />\n\n      <div className=\"mt-4\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(\n            data,\n            `ME-Composition-Table-Data.json`\n          )}\n        >\n          ME Composition Table Data\n        </DownloadButton>\n      </div>\n    </>\n  );\n};\n\nexport default MECompositionTable;","import React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nimport { VolumeSection, QuickSelectorEntry } from '@/types';\nimport { defaultSelection, volumeSections } from '@/constants';\nimport Filters from '@/layouts/Filters';\nimport StickyContainer from '@/components/StickyContainer';\nimport Title from '@/components/Title';\nimport InfoBox from '@/components/InfoBox';\nimport DataContainer from '@/components/DataContainer';\nimport Collapsible from '@/components/Collapsible';\nimport VolumeSectionSelector3D from '@/components/VolumeSectionSelector3D';\nimport withPreselection from '@/hoc/with-preselection';\n\nimport CellCompositionTable from './cell-composition/CellCompositionTable';\nimport MECompositionTable from './cell-composition/MECompositionTable';\nimport { colorName } from './config';\n\nconst CellCompositionView: React.FC = () => {\n  const router = useRouter();\n  const theme = 2;\n  const { volume_section: volumeSection } = router.query as { volume_section: VolumeSection };\n\n  const setVolumeSectionQuery = (volumeSection: VolumeSection) => {\n    const query = { volume_section: volumeSection };\n    router.push({ query }, undefined, { shallow: true });\n  };\n\n  const qsEntries: QuickSelectorEntry[] = [{\n    title: 'Volume section',\n    key: 'volume_section',\n    values: volumeSections,\n    setFn: setVolumeSectionQuery,\n  }];\n\n  return (\n    <>\n      <Filters theme={theme} hasData={true}>\n        <div className=\"flex flex-col lg:flex-row w-full lg:items-center mt-40 lg:mt-0\">\n          <div className=\"w-full lg:w-1/2 md:w-full md:flex-none mb-8 md:mb-8 lg:pr-0\">\n            <StickyContainer>\n              <Title\n                title=\"Cell composition\"\n                subtitle=\"Reconstruction Data\"\n                theme={theme}\n              />\n              <div role=\"information\">\n                <InfoBox>\n                  <p>\n                    We combined information on available <Link className={`link theme-${theme}`} href=\"/experimental-data/neuronal-morphology/\">morphological reconstructions</Link>, <Link className={`link theme-${theme}`} href=\"/experimental-data/neuronal-electrophysiology/\">electrophysiological recordings</Link>, <Link className={`link theme-${theme}`} href=\"/experimental-data/cell-density\">cell density</Link>, <Link className={`link theme-${theme}`} href=\"/reconstruction-data/volume/\">volume</Link>, and the estimation from <Link className={`link theme-${theme}`} href=\"https://pubmed.ncbi.nlm.nih.gov/23674373/\">Bezaire and Soltesz (2013)</Link> to predict the number of neuron types.\n                  </p>\n                </InfoBox>\n              </div>\n            </StickyContainer>\n          </div>\n\n          <div className=\"flex flex-col-reverse md:flex-row-reverse gap-8 mb-12 md:mb-0 mx-8 md:mx-0 lg:w-1/2 md:w-full flex-grow md:flex-none justify-center\">\n            <div className={`selector__column selector__column--lg theme-${theme} w-full`}>\n              <div className={`selector__head theme-${theme}`}>Choose a layer</div>\n              <div className=\"selector__body\">\n                <VolumeSectionSelector3D\n                  value={volumeSection}\n                  onSelect={setVolumeSectionQuery}\n                  theme={theme}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Filters>\n\n      <DataContainer\n        theme={theme}\n        navItems={[\n          { id: 'cellCompositionSection', label: 'Cell composition' },\n          { id: 'MECompositionSection', label: 'ME-composition' },\n        ]}\n        quickSelectorEntries={qsEntries}\n      >\n        <Collapsible\n          id=\"cellCompositionSection\"\n          title=\"Cell composition\"\n          properties={[volumeSection]}\n        >\n          <p className=\"mb-3\">\n            Here we provide the density and number of cells for each morphological type (m-type).\n          </p>\n          <CellCompositionTable theme={theme} volumeSection={volumeSection} />\n        </Collapsible>\n\n        <Collapsible\n          className=\"mt-4\"\n          id=\"MECompositionSection\"\n          title=\"ME-composition\"\n        >\n          <p className=\"mb-3\">\n            Each morphological type (m-type) can show one or more electrical types (e-types) giving rise to different morpho-electrical types (me-types).\n          </p>\n          <MECompositionTable theme={theme} />\n        </Collapsible>\n      </DataContainer>\n    </>\n  );\n};\n\nexport default withPreselection(\n  CellCompositionView,\n  {\n    key: 'volume_section',\n    defaultQuery: defaultSelection.reconstructionData.volume,\n  },\n);","import Head from 'next/head';\nimport CellCompositionView from '@/views/2_reconstruction-data/CellComposition';\n\nexport default function CellCompositionPage() {\n  const metadata = {\n    title: 'Cell Composition - Reconstruction Data | The Hippocampus Hub',\n    description:\n      'Explore the density and number of cells for each morphological type in the CA1 region of the hippocampus. Analyze the composition of morpho-electrical types (me-types) based on electrophysiological recordings and reconstructions.',\n    keywords: [\n      'Cell Composition',\n      'Hippocampus',\n      'CA1 Neurons',\n      'Morpho-Electrical Types',\n      'Cell Density',\n      'Reconstruction Data',\n      'Neuroscience',\n      'Blue Brain Project',\n    ],\n    author: 'Blue Brain Project',\n    creator: 'EPFL Blue Brain Project',\n    publisher: 'The Hippocampus Hub',\n  };\n\n  return (\n    <>\n      <Head>\n        <title>{metadata.title}</title>\n        <meta name=\"description\" content={metadata.description} />\n        <meta name=\"keywords\" content={metadata.keywords.join(', ')} />\n        <meta name=\"author\" content={metadata.author} />\n        <meta name=\"creator\" content={metadata.creator} />\n        <meta name=\"publisher\" content={metadata.publisher} />\n      </Head>\n\n      <CellCompositionView />\n    </>\n  );\n}","import React from 'react';\n\nexport type TermDescription = Record<string, string>;\n\n\nexport const layerDescription: TermDescription = {\n  SLM: 'Stratum Lacunosum-Moleculare',\n  SR: 'Stratum Radiatum',\n  SP: 'Stratum Pyramidal',\n  SO: 'Stratum Oriens',\n};\n\nexport const mtypeDescription: TermDescription = {\n  PPA: 'Perforant Pathway Associated Cell',\n  SCA: 'Schaffer Collateral Associated Cell',\n  AA: 'Axon Axonic Cell',\n  BS: 'Bistratified Cell',\n  PVBC: 'PV+ Basket Cell',\n  CCKBC: 'CCK+ Basket Cell',\n  PC: 'Pyramidal Cell',\n  BP: 'Back-Projecting Cell',\n  OLM: 'Oriens Lacunosum-Moleculare Cell',\n  Tri: 'Trilaminar Cell',\n  Ivy: 'Ivy Cell',\n};\n\nexport const stypeDescription: TermDescription = {\n  E1: 'Excitatory facilitating',\n  E2: 'Excitatory depressing',\n  I1: 'Inhibitory facilitating',\n  I2: 'Inhibitory depressing',\n  I3: 'Inhibitory pseudo linear',\n};\n\nexport const etypeDescription: TermDescription = {\n  cADpyr: 'continuous Accommodating (Adapting) for pyramidal cells',\n  cAC: 'continuous Accommodating',\n  bAC: 'burst Accommodating',\n  cNAC: 'continuous Non-accommodating',\n  bNAC: 'burst Non-accommodating',\n  dNAC: 'delayed Non-accommodating',\n  cSTUT: 'continuous Stuttering',\n  bSTUT: 'burst Stuttering',\n  dSTUT: 'delayed Stuttering',\n  cIR: 'continuous Irregular',\n  bIR: 'burst Irregular',\n};\n\nexport const pathwayDescription: TermDescription = {\n  gsyn: 'The peak conductance (in nS) for a single synaptic contact',\n  U: 'Utilization of synaptic efficacy - analogous to the transmitter release probability at a single synaptic contact',\n  D: 'Time constant (in ms) for recovery from depression',\n  F: 'Time constant (in ms) for recovery from facilitation',\n};\n\nexport const formattedTerm: Record<string, React.ReactNode> = {\n  gsyn: (<span>g<sub>syn</sub></span>),\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__31D34\",\"container--center\":\"styles_container--center__Yuntq\",\"flexWrapper\":\"styles_flexWrapper___gDLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__pHcWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__NKkJz\",\"volumeSelector\":\"styles_volumeSelector__dN4Dl\",\"volumeList\":\"styles_volumeList__5Src0\",\"volumeSection\":\"styles_volumeSection__yJuJz\",\"active\":\"styles_active__RrlYY\"};"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","value","significantFigures","thousandSeparator","prefix","suffix","param","formatNumber","num","parseFloat","Number","isFinite","formatted","toLocaleString","maximumSignificantDigits","toPrecision","concat","centered","children","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","styles","classNames","termFactory","termDescription","termFormatter","term","description","currentDescription","formattedTerm","Tooltip","title","destroyTooltipOnHide","span","style","onSelect","theme","themeProp","mountRef","useRef","hoveredObjectRef","selectedVolumeSectionRef","selectedObjectRef","camera","scene","renderer","raycaster","mouse","THREE","obj1Ref","obj2Ref","obj3Ref","objectsLoadedRef","offset","setOffset","useState","textSize","setTextSize","handleClick","useCallback","current","rect","getBoundingClientRect","x","event","clientX","left","width","y","clientY","top","height","setFromCamera","intersects","intersectObjects","length","intersectedObject","object","parent","includes","volumeSection","userData","updateSelection","newVolumeSection","newSelectedObject","updateObjectColors","default","hover","selected","mainColor","textColor","traverse","child","name","material","color","set","geometry","type","useEffect","background","aspect","clientWidth","clientHeight","position","z","antialias","alpha","setSize","setPixelRatio","devicePixelRatio","appendChild","domElement","loader","OBJLoader","load","dataPath","forEach","ref","index","newObj","obj","clone","applyMaterial","add","fontLoader","FontLoader","basePath","text","createText","toLowerCase","font","setInitialSelection","animate","console","log","xhr","loaded","total","error","requestAnimationFrame","render","handleResize","right","bottom","updateProjectionMatrix","newOffset","innerWidth","zoom","newTextSize","updateTextSize","handleMouseMove","cursor","addEventListener","removeEventListener","removeChild","transparent","opacity","depthWrite","renderOrder","selectedEdges","wireframeGeometry","wireframeMaterial","wireframe","visible","childName","textGeometry","TextGeometry","size","curveSegments","bevelEnabled","bevelThickness","bevelSize","textMaterialColor","textMaterial","textMesh","parentMesh","oldTextMesh","remove","initialObjectRef","find","initialVolumeSection","jsxs","layers","graphTheme","red","blue","green","purple","yellow","themeColors","experimental_data","reconstruction_data","digital_reconstruction","validations","predictions","neuriteTypes","volumeSections","achConcentrations","cellGroup","defaultSelection","experimentalData","layerAnatomy","layer","neuronMorphology","mtype","instance","neuronElectrophysiology","etype","etype_instance","reconstructionData","volume","volume_section","cellComposition","neurons","digitalReconstruction","region","morphologyLibrary","morphology","schafferCollateral","prelayer","postlayer","connectionAnatomy","connectionPhysiology","acetylcholineEffectsOnCell","acetylcholineEffectsOnSynapses","ach_concentration","NeuronModelLibrary","synapticPathways","acetylcholine","neuriteColor","all","axon","apical","basal","dendrite","soma","WrappedComponent","options","router","useRouter","isReady","query","key","defaultQuery","replace","undefined","shallow","mtypeDescription","layerDescription","Term","columns","dataIndex","jsx_runtime","getMtypeDescription","fullMtype","split","density","NumberFormat","count","cell_composition_CellCompositionTable","data","setData","fetch","then","response","json","fetchedData","totalCount","useMemo","reduce","sum","curr","Fragment","Table","pagination","bordered","dataSource","rowKey","summary","Summary","Row","Cell","strong","DownloadButton","onClick","downloadAsJson","etypeDescription","formatValue","cell_composition_MECompositionTable","tableLayout","CellComposition","withPreselection","setVolumeSectionQuery","qsEntries","values","setFn","Filters","hasData","StickyContainer","Title","subtitle","role","InfoBox","p","Link","href","VolumeSectionSelector3D","DataContainer","navItems","id","label","quickSelectorEntries","Collapsible","properties","CellCompositionTable","MECompositionTable","CellCompositionPage","metadata","keywords","author","creator","publisher","Head","meta","content","join","CellCompositionView","SLM","SR","SP","SO","PPA","SCA","AA","BS","PVBC","CCKBC","PC","BP","OLM","Tri","Ivy","stypeDescription","E1","E2","I1","I2","I3","cADpyr","cAC","bAC","cNAC","bNAC","dNAC","cSTUT","bSTUT","dSTUT","cIR","bIR","pathwayDescription","gsyn","U","D","F","module","exports"],"sourceRoot":""}