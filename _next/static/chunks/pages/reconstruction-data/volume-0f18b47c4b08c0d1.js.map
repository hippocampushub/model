{"version":3,"file":"static/chunks/pages/reconstruction-data/volume-0f18b47c4b08c0d1.js","mappings":"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","sources":["webpack://_N_E/?b663","webpack://_N_E/./src/views/2_reconstruction-data/volume/volume-viewer/index.tsx","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/state/atomic-state.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/state/state.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/state/index.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/utils.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Scene/painter/mesh/mesh.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Scene/painter/mesh/index.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Scene/painter/painter.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Scene/painter/index.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Scene/Scene.tsx","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Scene/index.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Selector/Selector.tsx","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Selector/index.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Viewer/Viewer.tsx","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/type-guards.ts","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/CoordinatesViewer.tsx","webpack://_N_E/./src/views/2_reconstruction-data/Volume.tsx","webpack://_N_E/./src/pages/reconstruction-data/volume.tsx","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Scene/Scene.module.css","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Selector/Selector.module.scss","webpack://_N_E/./src/views/2_reconstruction-data/volume/coordinates-viewer/Viewer/viewer.module.scss","webpack://_N_E/./src/views/2_reconstruction-data/volume/volume-viewer/volume-viewer.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/reconstruction-data/volume\",\n      function () {\n        return require(\"private-next-pages/reconstruction-data/volume.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/reconstruction-data/volume\"])\n      });\n    }\n  ","import React from 'react';\nimport dynamic from 'next/dynamic';\n\nimport { VolumeViewerProps } from './VolumeViewer';\nimport styles from './volume-viewer.module.scss';\n\n\nconst VolumeViewerLazy = dynamic(() => import('./VolumeViewer'), { ssr: false });\n\nconst VolumeViewer: React.FC<VolumeViewerProps> = (props) => {\n  return (\n    <div className={styles.fixedAspectRation}>\n      <VolumeViewerLazy {...props} />\n    </div>\n  );\n};\n\nexport default VolumeViewer;\n","import React, { useState, useEffect } from \"react\";\n\nexport interface AtomicStateStorageOptions<T> {\n    id: string;\n    guard: (data: unknown) => data is T;\n}\n\nexport interface AtomicStateOptions<T> {\n    storage?: AtomicStateStorageOptions<T>;\n    transform?: (value: T) => T;\n}\n\nexport default class AtomicState<T> {\n    private static counter = 0;\n    private currentValue: T;\n    private readonly listeners = new Set<(value: T) => void>();\n    private readonly id: string;\n    private readonly sessionId = `AtomicState:${(AtomicState.counter++).toString(\n        16\n    )}\\r`;\n\n    constructor(\n        initialValue: T,\n        private readonly options: AtomicStateOptions<T> = {}\n    ) {\n        this.currentValue = options.transform\n            ? options.transform(initialValue)\n            : initialValue;\n        this.id = `AtomicState\\n${options.storage?.id ?? \"\"}`;\n        if (options.storage) this.loadFromStorage();\n        else {\n            this.restoreSession();\n        }\n    }\n\n    get value() {\n        return this.currentValue;\n    }\n    set value(value: T) {\n        const { transform, storage } = this.options;\n        if (transform) value = transform(value);\n        if (value === this.currentValue) return;\n\n        this.currentValue = value;\n        if (typeof window !== \"undefined\") {\n            if (storage) window.localStorage.setItem(this.id, JSON.stringify(value));\n            else this.saveSession(value);\n        }\n        this.listeners.forEach(listener => listener(value));\n    }\n\n    addListener(listener: (value: T) => void) {\n        this.listeners.add(listener);\n    }\n\n    removeListener(listener: (value: T) => void) {\n        this.listeners.delete(listener);\n    }\n\n    private loadFromStorage() {\n        const { storage } = this.options;\n        if (!storage) return;\n\n        if (typeof window !== \"undefined\") {\n            try {\n                const text = window.localStorage.getItem(this.id);\n                if (!text) return;\n\n                const data: unknown = JSON.parse(text);\n                if (!storage.guard(data)) throw Error(`Invalid type!`);\n\n                this.currentValue = data;\n            } catch (ex) {\n                console.error(`Unable to retrieve AtomicState \"${storage.id}\":`, ex);\n            }\n        }\n    }\n\n    private saveSession(value: T) {\n        if (typeof window !== \"undefined\") {\n            const text = JSON.stringify(value);\n            const hash = computeHash(text);\n            window.sessionStorage.setItem(this.sessionId, `${hash}${text}`);\n        }\n    }\n\n    private restoreSession() {\n        if (typeof window !== \"undefined\") {\n            const content = window.sessionStorage.getItem(this.sessionId);\n            if (!content) return;\n\n            const hash = content.substring(0, 16);\n            const text = content.substring(16);\n            if (computeHash(text) !== hash) {\n                console.error(\"Atomic state has been corrupted!\", this.sessionId);\n                return;\n            }\n\n            try {\n                const data = JSON.parse(text) as T;\n                this.value = data;\n            } catch (ex) {\n                console.error(\"Atomic state is an invalid JSON!\", this.sessionId);\n            }\n        }\n    }\n}\n\nconst DIGITS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\nfunction computeHash(content: string): string {\n    const digits = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    for (let i = 0; i < content.length; i++) {\n        const c = content.charCodeAt(i);\n        digits[i % digits.length] += c;\n    }\n    return digits.map((v) => DIGITS[v % DIGITS.length]).join(\"\");\n}\n\n// Custom hooks for function components\n\nexport function useAtomicStateValue<T>(atomicState: AtomicState<T>): T {\n    const [value, setValue] = useState(atomicState.value);\n    useEffect(() => {\n        const listener = (newValue: T) => setValue(newValue);\n        atomicState.addListener(listener);\n        return () => {\n            atomicState.removeListener(listener);\n        };\n    }, [atomicState]);\n    return value;\n}\n\nexport function useAtomicState<T>(atomicState: AtomicState<T>): [T, (value: T) => void] {\n    const [value, setValue] = useState(atomicState.value);\n    useEffect(() => {\n        const listener = (newValue: T) => setValue(newValue);\n        atomicState.addListener(listener);\n        return () => {\n            atomicState.removeListener(listener);\n        };\n    }, [atomicState]);\n    return [value, (newValue: T) => (atomicState.value = newValue)];\n}","// state.ts\nimport AtomicState from \"./atomic-state\";\n\nfunction isString(data: unknown): data is string {\n    return typeof data === \"string\";\n}\n\nconst State = {\n    axe: new AtomicState<string>(\"L\", {\n        storage: { id: \"axe\", guard: isString },\n    }),\n};\n\nexport default State;","export { default } from \"./state\"\n","let canvas: HTMLCanvasElement | null = null\n\nexport function getGradientCanvas(): HTMLCanvasElement {\n  if (!canvas) {\n    canvas = document.createElement(\"canvas\")\n    canvas.width = 2048\n    canvas.height = 1\n    const ctx = canvas.getContext(\"2d\")\n    if (!ctx) throw Error(\"Unable to get 2D context on canvas!\")\n\n    const grad = ctx.createLinearGradient(0, 0, canvas.width, 0)\n    grad.addColorStop(0, \"#7b7\")\n    grad.addColorStop(0.1, \"#4e4\")\n    grad.addColorStop(0.5, \"#dd2\")\n    grad.addColorStop(0.9, \"#e44\")\n    grad.addColorStop(1, \"#b77\")\n    ctx.fillStyle = grad\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\n  }\n  return canvas\n}\n","import FragmentShaderCode from './shader.frag';\nimport VertexShaderCode from './shader.vert';\nimport FragmentOutlineCode from './shader-outline.frag';\nimport VertexOutlineCode from './shader-outline.vert';\nimport {\n    FrontSide as ThreeFrontSide,\n    BackSide as ThreeBackSide,\n    BufferGeometry as ThreeBufferGeometry,\n    CanvasTexture as ThreeCanvasTexture,\n    InterleavedBuffer as ThreeInterleavedBuffer,\n    InterleavedBufferAttribute as ThreeInterleavedBufferAttribute,\n    Group as ThreeGroup,\n    Mesh as ThreeMesh,\n    ShaderMaterial as ThreeShaderMaterial,\n    Uniform as ThreeUniform,\n    Vector3 as ThreeVector3,\n} from 'three';\nimport { getGradientCanvas } from '../../../utils';\n\nexport function createMeshFromData(\n    data: Float32Array,\n    elem: number[]\n): [ThreeGroup, (uniSelector: ThreeVector3) => void] {\n    const texture = new ThreeCanvasTexture(getGradientCanvas());\n    const geometry = new ThreeBufferGeometry();\n    /**\n     * 9 Float32 elements per vertex:\n     *  - 3 for position\n     *  - 3 for normal\n     *  - 3 for coords\n     */\n    const interleavedBuffer = new ThreeInterleavedBuffer(data, 9);\n    geometry.setIndex(elem);\n    geometry.setAttribute(\n        'position',\n        new ThreeInterleavedBufferAttribute(interleavedBuffer, 3, 0, false)\n    );\n    geometry.setAttribute(\n        'normal',\n        new ThreeInterleavedBufferAttribute(interleavedBuffer, 3, 3, false)\n    );\n    geometry.setAttribute(\n        'coords',\n        new ThreeInterleavedBufferAttribute(interleavedBuffer, 3, 6, false)\n    );\n    // geometry.computeVertexNormals()\n    const uniforms = {\n        texCoords: {\n            type: 't',\n            value: texture,\n        },\n        uniSelector: { value: new ThreeVector3(0, 1, 0) },\n    };\n    const material = new ThreeShaderMaterial({\n        uniforms,\n        fragmentShader: FragmentShaderCode,\n        vertexShader: VertexShaderCode,\n        side: ThreeBackSide,\n        depthTest: true,\n    });\n    texture.generateMipmaps = true;\n    texture.needsUpdate = true;\n    const group = new ThreeGroup();\n    const mesh = new ThreeMesh(geometry, material);\n    group.add(\n        mesh,\n        new ThreeMesh(\n            geometry,\n            new ThreeShaderMaterial({\n                fragmentShader: FragmentOutlineCode,\n                vertexShader: VertexOutlineCode,\n                side: ThreeFrontSide,\n                depthTest: true,\n            })\n        )\n    );\n    return [\n        group,\n        (uniSelector: ThreeVector3) => {\n            material.uniforms.uniSelector.value = uniSelector;\n        },\n    ];\n}","export { createMeshFromData } from \"./mesh\"\n","import State from \"../../state\"\nimport { Bounds, MeshInfo } from \"../../types\"\nimport { createMeshFromData } from \"./mesh\"\nimport {\n    PerspectiveCamera as ThreePerspectiveCamera,\n    Scene as ThreeScene,\n    Vector3 as ThreeVector3,\n    WebGLRenderer as ThreeWebGLRenderer,\n} from \"three\"\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\n\nconst Axes = {\n    L: new ThreeVector3(1, 0, 0),\n    T: new ThreeVector3(0, 1, 0),\n    R: new ThreeVector3(0, 0, 1),\n}\n\nexport default class Painter {\n    public readonly scene: ThreeScene;\n    public readonly camera: ThreePerspectiveCamera;\n    public readonly renderer: ThreeWebGLRenderer;\n    private readonly controls: OrbitControls;\n    private lastWidth = 0;\n    private lastHeight = 0;\n\n    constructor(\n        private readonly canvas: HTMLCanvasElement,\n        meshInfo: MeshInfo,\n        vert: Float32Array,\n        elem: number[]\n    ) {\n        const scene = new ThreeScene();\n        const camera = new ThreePerspectiveCamera(50, 1, 1, 1e5);\n        const renderer = new ThreeWebGLRenderer({\n            alpha: false,\n            preserveDrawingBuffer: false,\n            premultipliedAlpha: false,\n            depth: true,\n            canvas,\n        });\n        renderer.setClearColor(0x333333, 1);\n        this.scene = scene;\n        this.camera = camera;\n        this.renderer = renderer;\n\n        renderer.setClearColor(0xEFF1F8, 1);\n\n        const { x, y, z, sizeX, sizeY, sizeZ } = getSizeAndLocation(meshInfo);\n        const controls = new OrbitControls(camera, canvas);\n        this.controls = controls;\n        controls.target.set(x, y, z);\n        controls.addEventListener(\"change\", this.paint);\n\n        const [mesh, setUniSelector] = createMeshFromData(vert, elem);\n        mesh.position.set(x, y, z);\n        mesh.rotation.x = Math.PI; // Rotate the mesh by 180 degrees around the X-axis\n        mesh.rotation.y = -Math.PI / 2; // Rotate the mesh by 180 degrees around the X-axis\n        scene.add(mesh);\n\n        camera.position.set(x, y, z - Math.max(sizeX, sizeY, sizeZ) * 1.5);\n        camera.lookAt(new ThreeVector3(x, y, z));\n        window.requestAnimationFrame(this.paint);\n\n        State.axe.addListener((axe) => {\n            setUniSelector(Axes[axe] ?? Axes.L);\n            window.requestAnimationFrame(this.paint);\n        });\n    }\n\n    public readonly paint = (_time: number) => {\n        const { canvas, controls, camera, renderer, scene } = this;\n        if (\n            canvas.clientWidth !== this.lastWidth ||\n            canvas.clientHeight !== this.lastHeight\n        ) {\n            const w = canvas.clientWidth;\n            const h = canvas.clientHeight;\n            this.lastWidth = w;\n            this.lastHeight = h;\n            canvas.width = w;\n            canvas.height = h;\n            camera.aspect = w / h;\n            camera.updateProjectionMatrix();\n            camera.updateMatrix();\n            renderer.setSize(w, h, false);\n            controls.update();\n        }\n        renderer.render(scene, camera);\n    }\n}\n\nfunction getSizeAndLocation(bounds: Bounds): {\n    x: number;\n    y: number;\n    z: number;\n    sizeX: number;\n    sizeY: number;\n    sizeZ: number;\n} {\n    const [minX, minY, minZ] = bounds.min;\n    const [maxX, maxY, maxZ] = bounds.max;\n    return {\n        x: (minX + maxX) / 2,\n        y: (minY + maxY) / 2,\n        z: (minZ + maxZ) / 2,\n        sizeX: maxX - minX,\n        sizeY: maxY - minY,\n        sizeZ: maxZ - minZ,\n    };\n}","export { default } from \"./painter\"\n","import React, { useRef, useEffect } from \"react\";\nimport Styles from \"./Scene.module.css\";\nimport Painter from \"./painter\";\nimport { MeshInfo } from \"../types\";\n\nexport interface SceneProps {\n    className?: string;\n    meshInfo: MeshInfo;\n    vert: Float32Array;\n    elem: number[];\n    onPainterInit?: (painter: Painter) => void;  // Add this prop to pass Painter instance\n}\n\nexport default function Scene({ className = \"\", meshInfo, vert, elem, onPainterInit }: SceneProps) {\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\n    const painterRef = useRef<Painter | null>(null);\n\n    useEffect(() => {\n        if (canvasRef.current) {\n            const painter = new Painter(canvasRef.current, meshInfo, vert, elem);\n            painterRef.current = painter;\n            if (onPainterInit) {\n                onPainterInit(painter);  // Pass the painter instance\n            }\n        }\n    }, [meshInfo, vert, elem, onPainterInit]);\n\n    return (\n        <canvas\n            className={`${className} ${Styles.Scene}`}\n            ref={canvasRef}\n        ></canvas>\n    );\n}","export { default } from \"./Scene\"\n","// Selector.tsx\nimport React from \"react\";\nimport State from \"../state\";\nimport { useAtomicState } from \"../state/atomic-state\"; // Adjust the import path accordingly\nimport Styles from \"./Selector.module.scss\";\n\nexport interface SelectorProps {\n    className?: string;\n}\n\nconst Labels = {\n    L: \"Longitudinal\",\n    T: \"Transverse\",\n    R: \"Radial\",\n};\n\nexport default function Selector({ className }: SelectorProps) {\n    const [value, setValue] = useAtomicState(State.axe);\n\n    return (\n        <div className={`${Styles.Selector} ${className ?? \"\"}`}>\n            <button\n                className={value === \"L\" ? Styles.selected : Styles.unselected}\n                onClick={() => setValue(\"L\")}\n            >\n                {Labels.L}\n            </button>\n            <button\n                className={value === \"T\" ? Styles.selected : Styles.unselected}\n                onClick={() => setValue(\"T\")}\n            >\n                {Labels.T}\n            </button>\n            <button\n                className={value === \"R\" ? Styles.selected : Styles.unselected}\n                onClick={() => setValue(\"R\")}\n            >\n                {Labels.R}\n            </button>\n        </div>\n    );\n}","export { default } from \"./Selector\"\n","// Viewer.tsx\nimport React, { useState } from 'react';\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen';\nimport { FullscreenOutlined, FullscreenExitOutlined, CameraOutlined } from '@ant-design/icons';\nimport { Button, Tooltip } from 'antd';\nimport { saveAs } from 'file-saver';\nimport { WebGLRenderer } from 'three';\nimport Scene from '../Scene';\nimport { MeshInfo } from '../types';\nimport { getGradientCanvas } from '../utils';\nimport Selector from '../Selector';\nimport Styles from './viewer.module.scss';\nimport Painter from '../Scene/painter';\n\nexport interface VectorsViewerProps {\n    className?: string;\n    meshInfo?: MeshInfo;\n    vert?: Float32Array;\n    elem?: number[];\n}\n\nconst defaultMeshInfo: MeshInfo = {\n    min: [0, 0, 0],\n    max: [1, 1, 1]\n};\n\nconst defaultVert = new Float32Array([0, 0, 0, 1, 1, 1]);\nconst defaultElem = [0, 1, 2];\n\nconst Viewer: React.FC<VectorsViewerProps> = ({\n    className,\n    meshInfo = defaultMeshInfo,\n    vert = defaultVert,\n    elem = defaultElem,\n}) => {\n    const fullscreenHandle = useFullScreenHandle();\n    const [painter, setPainter] = useState<Painter | null>(null);\n\n    const toggleFullscreen = () => {\n        if (fullscreenHandle.active) {\n            fullscreenHandle.exit();\n        } else {\n            fullscreenHandle.enter();\n        }\n    };\n\n    const downloadRender = (filename: string) => {\n        if (!painter) return;\n\n        const { clientWidth, clientHeight } = painter.renderer.domElement.parentElement as HTMLElement;\n\n        const renderer = new WebGLRenderer({\n            antialias: true,\n            alpha: true,\n            preserveDrawingBuffer: true,\n            physicallyCorrectColors: true,\n        });\n\n        renderer.setSize(clientWidth * 3, clientHeight * 3);\n        renderer.render(painter.scene, painter.camera);\n\n        renderer.domElement.toBlob(blob => {\n            if (blob) {\n                saveAs(blob, `${filename}.png`);\n            }\n        });\n        renderer.dispose();\n    };\n\n    return (\n        <FullScreen\n            className={fullscreenHandle.active ? undefined : Styles.fixedAspectRatio}\n            handle={fullscreenHandle}\n        >\n            <div className={Styles.topRightCtrlGroup}>\n                <Tooltip title=\"Download render as a PNG\">\n                    <Button\n                        size=\"small\"\n                        onClick={() => downloadRender(`volume_render_CA1`)}\n                        icon={<CameraOutlined />}\n                    />\n                </Tooltip>\n\n                <Tooltip title=\"Fullscreen\">\n                    <Button\n                        size=\"small\"\n                        className=\"ml-1\"\n                        onClick={toggleFullscreen}\n                        icon={fullscreenHandle.active ? <FullscreenExitOutlined /> : <FullscreenOutlined />}\n                    />\n                </Tooltip>\n            </div>\n\n            <div className={getClassName(className)}>\n                <Scene\n                    className={Styles.canvas}\n                    meshInfo={meshInfo}\n                    vert={vert}\n                    elem={elem}\n                    onPainterInit={setPainter}\n                />\n                <div className={Styles.colorrampContainer}>\n                    <div style={{ color: 'black' }}>0.0</div>\n                    <Gradient />\n                    <div style={{ color: 'black' }}>1.0</div>\n                </div>\n                <Selector className={Styles.selector} />\n            </div>\n        </FullScreen>\n    );\n};\n\nfunction getClassName(className?: string) {\n    const classes = [Styles['App']];\n    if (className) classes.push(className);\n    return classes.join(' ');\n}\n\nfunction Gradient() {\n    return (\n        <div\n            style={{ width: '50px', height: '50px', borderRadius: '5px', border: 'none' }}\n            className={Styles.colorramp}\n            ref={(div) => {\n                div?.appendChild(getGradientCanvas());\n            }}\n        ></div>\n    );\n}\n\nexport default Viewer;","export type TypeDef =\n    | \"boolean\"\n    | \"null\"\n    | \"undefined\"\n    | \"string\"\n    | \"number\"\n    | \"function\"\n    | \"unknown\"\n    | \"function\"\n    | [\"string\", { min?: number; max?: number }]\n    | [\"number\", { min?: number; max?: number }]\n    | [\"|\", ...TypeDef[]]\n    | [\"?\", TypeDef]\n    | [\"array\", TypeDef]\n    | [`array(${number})`, TypeDef]\n    | [\"map\", TypeDef]\n    | { [name: string]: TypeDef }\n\nexport function assertType<T>(\n    data: unknown,\n    type: TypeDef,\n    prefix = \"data\"\n): asserts data is T {\n    if (type === \"unknown\") return\n\n    if (type === \"null\") {\n        if (data !== null) {\n            throw Error(\n                `Expected ${prefix} to be null and not a ${typeof data}!`\n            )\n        }\n        return\n    }\n\n    if (typeof type === \"string\") {\n        if (typeof data !== type) {\n            throw Error(\n                `Expected ${prefix} to be a string and not a ${typeof data}!`\n            )\n        }\n        return\n    }\n    if (Array.isArray(type)) {\n        const [kind] = type\n        switch (kind) {\n            case \"array\":\n                assertTypeArray(data, prefix, type)\n                return\n            case \"map\":\n                assertTypeMap(data, prefix, type)\n                return\n            case \"?\":\n                assertTypeOptional(data, prefix, type)\n                return\n            case \"|\":\n                assertTypeAlternative(data, prefix, type)\n                return\n            default:\n                if (kind.startsWith(\"array(\")) {\n                    const size = parseInt(\n                        kind.substring(\"array(\".length, kind.length - 1),\n                        10\n                    )\n                    assertTypeArrayWithDimension(\n                        data,\n                        prefix,\n                        type as [unknown, TypeDef],\n                        size\n                    )\n                    return\n                }\n                throw Error(\n                    `Don't know how to create a type guard for this kind of type: ${JSON.stringify(\n                        type\n                    )}`\n                )\n        }\n    }\n\n    if (typeof data !== \"object\")\n        throw Error(\n            `Expected ${prefix} to be an object and not a ${typeof data}!`\n        )\n\n    const obj = data as { [key: string]: unknown }\n    for (const name of Object.keys(type)) {\n        if (typeof name !== \"string\") continue\n\n        const objType = type[name]\n        if (objType) assertType(obj[name], type[name], `${prefix}.${name}`)\n    }\n}\n\nfunction assertTypeArrayWithDimension(\n    data: unknown,\n    prefix: string,\n    type: [unknown, TypeDef],\n    size: number\n) {\n    if (!Array.isArray(data))\n        throw Error(\n            `Expected ${prefix} to be an array and not a ${typeof data}!`\n        )\n    if (data.length !== size)\n        throw Error(\n            `${prefix} was expected to have a length of ${size}, but we got ${data.length}!`\n        )\n    const [, subType] = type\n    for (let i = 0; i < data.length; i += 1) {\n        assertType(data[i], subType, `${prefix}[${i}]`)\n    }\n}\n\nfunction assertTypeArray(\n    data: unknown,\n    prefix: string,\n    type: [\"array\", TypeDef]\n) {\n    if (!Array.isArray(data))\n        throw Error(\n            `Expected ${prefix} to be an array and not a ${typeof data}!`\n        )\n    const [, subType] = type\n    for (let i = 0; i < data.length; i += 1) {\n        assertType(data[i], subType, `${prefix}[${i}]`)\n    }\n}\n\nfunction assertTypeMap(data: unknown, prefix: string, type: [\"map\", TypeDef]) {\n    if (!isObject(data))\n        throw Error(\n            `Expected ${prefix} to be an object and not a ${typeof data}!`\n        )\n    const [, subType] = type\n    for (const key of Object.keys(data)) {\n        if (typeof key === \"string\") {\n            assertType(data[key], subType, `${prefix}[${key}]`)\n        }\n    }\n}\n\nfunction assertTypeOptional(\n    data: unknown,\n    prefix: string,\n    type: [\"?\", TypeDef]\n) {\n    if (typeof data === \"undefined\") return\n\n    const [, optionalType] = type\n    assertType(data, optionalType, prefix)\n}\n\nfunction assertTypeAlternative(\n    data: unknown,\n    prefix: string,\n    type: [\"|\", ...TypeDef[]]\n) {\n    const [, ...altTypes] = type\n    let lastException = Error(\n        `No type has been defined for this alternative: ${JSON.stringify(\n            type\n        )}!`\n    )\n    for (const altType of altTypes) {\n        try {\n            assertType(data, altType, prefix)\n            return\n        } catch (ex) {\n            if (ex instanceof Error) lastException = ex\n        }\n    }\n    throw lastException\n}\n\nfunction isObject(data: unknown): data is { [key: string]: unknown } {\n    if (!data) return false\n    if (Array.isArray(data)) return false\n    return typeof data === \"object\"\n}\n","import React, { useEffect, useState } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport Viewer from './Viewer/Viewer';\nimport { assertType } from './type-guards';\nimport { Bounds } from './types';\nimport { dataPath } from '@/config';\n\nconst CoordinatesViewer: React.FC = () => {\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const start = async () => {\n            const info = await loadInfo(`${dataPath}/3d/2_reconstruction-data/coordinates/mesh.json`);\n            const elemData = new Uint32Array(await loadData(`${dataPath}/3d/2_reconstruction-data/coordinates/elem.dat`));\n            const vertData = new Float32Array(await loadData(`${dataPath}/3d/2_reconstruction-data/coordinates/vert.dat`));\n            const container = document.getElementById('root') as HTMLElement;\n            const root = createRoot(container);\n            root.render(<Viewer meshInfo={info} vert={vertData} elem={Array.from(elemData)} />);\n\n        };\n\n        start();\n    }, []);\n\n    return <div id=\"root\">{loading && <p>Loading...</p>}</div>;\n};\n\nasync function loadData(url: string): Promise<ArrayBuffer> {\n    const resp = await fetch(url);\n    return await resp.arrayBuffer();\n}\n\nasync function loadInfo(url: string): Promise<Bounds> {\n    const resp = await fetch(url);\n    const data = await resp.json();\n    assertType<Bounds>(data, {\n        min: ['array(3)', 'number'],\n        max: ['array(3)', 'number'],\n    });\n    return data;\n}\n\nexport default CoordinatesViewer;\n","import React, { useState } from 'react';\nimport { Row, Col, Spin, Button } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport VolumeViewer from './volume/volume-viewer';\nimport CoordinatesViewer from './volume/coordinates-viewer/CoordinatesViewer';\n\nimport { basePath, dataPath } from '@/config';\nimport { volumeAnalysisPath, volumeRasterDataPath } from '@/queries/http';\nimport { downloadAsJson } from '@/utils';\nimport { defaultSelection, volumeSections } from '@/constants';\nimport HttpData from '@/components/HttpData';\nimport HttpDownloadButton from '@/components/HttpDownloadButton';\nimport Filters from '@/layouts/Filters';\nimport Factsheet from '@/components/Factsheet';\nimport StickyContainer from '@/components/StickyContainer';\nimport Title from '@/components/Title';\nimport InfoBox from '@/components/InfoBox';\nimport DataContainer from '@/components/DataContainer';\nimport Collapsible from '@/components/Collapsible';\nimport VolumeSectionSelector3D from '@/components/VolumeSectionSelector3D';\nimport withPreselection from '@/hoc/with-preselection';\n\nimport selectorStyle from '@/styles/selector.module.scss';\nimport { VolumeSection, QuickSelectorEntry } from '@/types';\nimport { colorName } from './config';\nimport DownloadButton from '@/components/DownloadButton';\nimport NeuronFactsheet from '../1_experimental-data/neuronal-morphology/NeuronFactsheet';\n\nconst VolumeView: React.FC = () => {\n  const router = useRouter();\n  const theme = 2;\n  const [volumeViewerReady, setVolumeViewerReady] = useState<boolean>(false);\n  const { volume_section: volumeSection } = router.query as { volume_section: VolumeSection };\n\n  const setVolumeSectionQuery = (volumeSection: VolumeSection) => {\n    const query = { volume_section: volumeSection };\n    router.push({ query }, undefined, { shallow: true });\n  };\n\n  const factNameR = new RegExp(volumeSection === 'region' ? 'CA1' : volumeSection, 'i');\n  const getVolumeSectionFacts = (facts) => {\n    return facts.filter(fact => factNameR.test(fact.name));\n  }\n\n  const qsEntries: QuickSelectorEntry[] = [\n    {\n      title: 'Volume section',\n      key: 'volume_section',\n      values: volumeSections,\n      setFn: setVolumeSectionQuery,\n    },\n  ];\n\n  return (\n    <>\n      <Filters theme={theme} hasData={true}>\n        <div className=\"flex flex-col lg:flex-row w-full lg:items-center mt-40 lg:mt-0\">\n          <div className=\"w-full lg:w-1/2 md:w-full md:flex-none mb-8 md:mb-8 lg:pr-0\">\n            <StickyContainer>\n              <Title\n                title=\"Volume\" subtitle=\"Reconstruction Data\" theme={theme}\n              />\n              <div role=\"information\">\n                <InfoBox>\n                  <p>\n                    We combined a publicly available <Link href=\"http://cng.gmu.edu/hippocampus3d/\" className={`link theme-${theme}`}>atlas</Link> with a process of coordinate extraction and <Link href=\"/experimental-data/layer-anatomy/\" className={`link theme-${theme}`}>layer thickness estimation</Link> to reconstruct the volume of CA1. From the entire CA1, we can obtain subvolumes of particular interest, such as cylinders and slices, at any desired location.\n                  </p>\n                </InfoBox>\n              </div>\n            </StickyContainer>\n          </div>\n\n          <div className=\"flex flex-col-reverse md:flex-row-reverse gap-8 mb-12 md:mb-0 mx-8 md:mx-0 lg:w-1/2 md:w-full flex-grow md:flex-none justify-center\">\n            <div className={`selector__column selector__column--lg theme-${theme} w-full`}>\n              <div className={`selector__head theme-${theme}`}>Choose a layer</div>\n              <div className=\"selector__body\">\n                <VolumeSectionSelector3D\n                  value={volumeSection}\n                  onSelect={setVolumeSectionQuery}\n                  theme={theme}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Filters>\n      <DataContainer\n        theme={theme}\n        navItems={[\n          { id: 'volumeSection', label: 'Volume' },\n          { id: 'coordinatesSection', label: 'Coordinates' }\n        ]}\n        quickSelectorEntries={qsEntries}\n      >\n        <Collapsible id=\"volume\" title=\"Volume\" properties={[volumeSection]}>\n          <h2>\n            {volumeSection === 'region' ? (\n              <span>Region CA1</span>\n            ) : volumeSection === 'cylinder' ? (\n              <span>Cylindrical subvolume of radius 300 um from the dorsal CA1.</span>\n            ) : volumeSection === 'slice' ? (\n              <span>Coronal slice of 400 um from the dorsal CA1.</span>\n            ) : null}\n          </h2>\n\n          <h3>3D volume viewer</h3>\n          <Spin spinning={!volumeViewerReady}>\n            <div className=\"graph no-padding\">\n              <VolumeViewer meshPath={`${dataPath}/3d/2_reconstruction-data/volume/volume.obj`} volumeSection={volumeSection} onReady={() => setVolumeViewerReady(true)} />\n            </div>\n\n          </Spin>\n\n\n          <p className=\"mt-4\">\n            Related: <Link href=\"/experimental-data/layer-anatomy/\">Experimental data - Layer anatomy</Link>\n          </p>\n\n          <div className=\"mt-12\">\n            <h2 className='text-lg'>Volume analysis</h2>\n            <HttpData\n              path={`${dataPath}/2_reconstruction-data/volume/volume_analysis.json`}\n            >\n              {(factsheetData) => (\n                <>\n                  {factsheetData && (\n                    <>\n                      <Factsheet facts={factsheetData.values} />\n                    </>\n                  )}\n                  <div className=\"mt-4\">\n                    <DownloadButton onClick={() => downloadAsJson(factsheetData.values, 'volume_analysis.json')} theme={theme}> Volume analysis </DownloadButton>\n                  </div>\n                </>\n              )}\n\n\n            </HttpData>\n\n          </div>\n\n        </Collapsible >\n\n        <Collapsible id=\"coordinatesSection\" title=\"Coordinates\" className=\"mt-4\" properties={[volumeSection]}>\n          <p>Due to its curvature and irregularities, the volume of CA1 is difficult to manipulate. For this reason, we define a coordinate system that follows the hippocampal axes (longitudinal, transverse, radial).</p>\n          <div className=\"graph no-padding flex-col\">\n            <Spin spinning={!volumeViewerReady}>\n              <CoordinatesViewer />\n            </Spin>\n          </div>\n\n        </Collapsible>\n      </DataContainer >\n    </>\n  );\n};\n\nexport default withPreselection(\n  VolumeView,\n  {\n    key: 'volume_section',\n    defaultQuery: defaultSelection.reconstructionData.volume,\n  },\n);\n","import Head from 'next/head';\nimport VolumeView from '@/views/2_reconstruction-data/Volume';\n\nexport default function VolumePage() {\n  const metadata = {\n    title: 'Volume - Reconstruction Data | The Hippocampus Hub',\n    description:\n      'Explore the reconstructed volume of the CA1 region of the hippocampus. Visualize the 3D structure of CA1, including detailed layers and coordinates, and extract subvolumes of particular interest for further analysis.',\n    keywords: [\n      'Hippocampus',\n      'CA1 Volume',\n      '3D Structure',\n      'Reconstruction Data',\n      'Neuroscience',\n      'Blue Brain Project',\n      'Coordinate System',\n    ],\n    author: 'Blue Brain Project',\n    creator: 'EPFL Blue Brain Project',\n    publisher: 'The Hippocampus Hub',\n  };\n\n  return (\n    <>\n      <Head>\n        <title>{metadata.title}</title>\n        <meta name=\"description\" content={metadata.description} />\n        <meta name=\"keywords\" content={metadata.keywords.join(', ')} />\n        <meta name=\"author\" content={metadata.author} />\n        <meta name=\"creator\" content={metadata.creator} />\n        <meta name=\"publisher\" content={metadata.publisher} />\n      </Head>\n\n      <VolumeView />\n    </>\n  );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Scene\":\"Scene_Scene__w0BtV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Selector\":\"Selector_Selector__VUaVF\",\"selected\":\"Selector_selected__q_nDm\",\"unselected\":\"Selector_unselected__IVu7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixedAspectRatio\":\"viewer_fixedAspectRatio__sLXZy\",\"App\":\"viewer_App__hb47X\",\"canvas\":\"viewer_canvas__jn8nV\",\"colorrampContainer\":\"viewer_colorrampContainer__Wc0AE\",\"colorramp\":\"viewer_colorramp__0uORu\",\"selector\":\"viewer_selector__l0_Sa\",\"topRightCtrlGroup\":\"viewer_topRightCtrlGroup__Brav4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixedAspectRatio\":\"volume-viewer_fixedAspectRatio__On_lG\",\"container\":\"volume-viewer_container__o8FSH\",\"coloredCheckbox\":\"volume-viewer_coloredCheckbox__9bhIF\",\"coloredBox\":\"volume-viewer_coloredBox__vgrjm\",\"settingBtn\":\"volume-viewer_settingBtn__DUNhE\",\"fullscreenBtn\":\"volume-viewer_fullscreenBtn__HdEG7\",\"config\":\"volume-viewer_config__3a6ZN\",\"legend\":\"volume-viewer_legend__bshzh\",\"topRightCtrlGroup\":\"volume-viewer_topRightCtrlGroup__t06Be\",\"legendDivider\":\"volume-viewer_legendDivider__0yp_a\"};"],"names":["window","__NEXT_P","push","__webpack_require__","VolumeViewerLazy","dynamic","Promise","all","e","then","bind","ssr","volume_viewer","jsx_runtime","jsx","div","className","styles","props","AtomicState","value","currentValue","transform","storage","options","localStorage","setItem","id","JSON","stringify","saveSession","listeners","forEach","listener","addListener","add","removeListener","delete","loadFromStorage","text","getItem","data","parse","guard","Error","ex","console","error","concat","hash","computeHash","sessionStorage","sessionId","restoreSession","content","substring","constructor","initialValue","Set","counter","toString","DIGITS","digits","i","length","c","charCodeAt","map","v","join","State","axe","canvas","getGradientCanvas","document","createElement","width","height","ctx","getContext","grad","createLinearGradient","addColorStop","fillStyle","fillRect","Axes","L","ThreeVector3","T","R","Painter","meshInfo","vert","elem","lastWidth","lastHeight","paint","controls","camera","renderer","scene","clientWidth","clientHeight","w","h","aspect","updateProjectionMatrix","updateMatrix","setSize","update","render","ThreeScene","ThreePerspectiveCamera","ThreeWebGLRenderer","alpha","preserveDrawingBuffer","premultipliedAlpha","depth","setClearColor","x","y","z","sizeX","sizeY","sizeZ","getSizeAndLocation","bounds","minX","minY","minZ","min","maxX","maxY","maxZ","max","OrbitControls","target","set","addEventListener","mesh","setUniSelector","createMeshFromData","texture","ThreeCanvasTexture","geometry","ThreeBufferGeometry","interleavedBuffer","ThreeInterleavedBuffer","setIndex","setAttribute","ThreeInterleavedBufferAttribute","uniforms","texCoords","type","uniSelector","material","ThreeShaderMaterial","fragmentShader","vertexShader","side","ThreeBackSide","depthTest","generateMipmaps","needsUpdate","group","ThreeGroup","ThreeMesh","ThreeFrontSide","position","rotation","Math","PI","lookAt","requestAnimationFrame","Scene","param","onPainterInit","canvasRef","useRef","painterRef","useEffect","current","painter","Styles","ref","Selector","setValue","useAtomicState","atomicState","useState","newValue","jsxs","button","onClick","defaultMeshInfo","defaultVert","Float32Array","defaultElem","Gradient","style","borderRadius","border","appendChild","Viewer_Viewer","fullscreenHandle","useFullScreenHandle","setPainter","downloadRender","domElement","parentElement","WebGLRenderer","antialias","physicallyCorrectColors","toBlob","blob","saveAs","filename","dispose","FullScreen","active","undefined","handle","Tooltip","title","Button","size","icon","CameraOutlined","exit","enter","FullscreenExitOutlined","FullscreenOutlined","getClassName","classes","color","loadData","url","resp","fetch","arrayBuffer","loadInfo","json","assertType","prefix","Array","isArray","kind","assertTypeArray","subType","assertTypeMap","key","Object","keys","assertTypeOptional","optionalType","assertTypeAlternative","altTypes","lastException","altType","startsWith","parseInt","assertTypeArrayWithDimension","name","objType","obj","coordinates_viewer_CoordinatesViewer","loading","setLoading","start","info","dataPath","elemData","Uint32Array","vertData","container","getElementById","root","createRoot","Viewer","from","p","Volume","withPreselection","router","useRouter","volumeViewerReady","setVolumeViewerReady","volume_section","volumeSection","query","setVolumeSectionQuery","shallow","qsEntries","values","volumeSections","setFn","Fragment","Filters","theme","hasData","StickyContainer","Title","subtitle","role","InfoBox","Link","href","VolumeSectionSelector3D","onSelect","DataContainer","navItems","label","quickSelectorEntries","Collapsible","properties","h2","span","h3","Spin","spinning","VolumeViewer","meshPath","onReady","HttpData","path","factsheetData","Factsheet","facts","DownloadButton","downloadAsJson","CoordinatesViewer","defaultQuery","defaultSelection","reconstructionData","volume","VolumePage","metadata","description","keywords","author","creator","publisher","Head","meta","VolumeView","module","exports"],"sourceRoot":""}