{"version":3,"sources":["webpack://_N_E//Users/getta/dev/portals/hippocampus-model-portal/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack://_N_E/./src/components/ChannelParamPlot/plot.tsx","webpack://_N_E/./src/components/Collapsible/index.tsx","webpack://_N_E/./src/components/ScrollTo/index.tsx","webpack://_N_E/./src/components/DataContainer/index.tsx","webpack://_N_E/./src/components/InfoBox/index.tsx","webpack://_N_E/./src/components/LayerSelector/index.tsx","webpack://_N_E/./src/components/List/index.tsx","webpack://_N_E/./src/components/NumberFormat/index.tsx","webpack://_N_E/./src/components/Title/index.tsx","webpack://_N_E/./src/components/Unit/index.tsx","webpack://_N_E/./src/layouts/Filters/index.tsx","webpack://_N_E/./src/queries/http/index.ts","webpack://_N_E/./src/components/HttpData/index.tsx","webpack://_N_E/./src/components/ChannelParamPlot/index.tsx","webpack://_N_E/./src/components/EtypeFactsheet/index.tsx","webpack://_N_E/./src/components/ModelMorphologyFactsheet/index.tsx","webpack://_N_E/./src/components/NeuronMorphology/index.tsx","webpack://_N_E/./src/views/digitalReconstructions/Neurons.tsx","webpack://_N_E/./src/pages/digital-reconstructions/neurons.tsx","webpack://_N_E/?67c8","webpack://_N_E/./src/components/EtypeFactsheet/index.module.scss","webpack://_N_E/./src/components/InfoBox/styles.module.scss","webpack://_N_E/./src/components/LayerSelector/styles.module.scss","webpack://_N_E/./src/styles/digital-reconstructions/neurons.module.scss"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","channelParam","canvasEl","useRef","useEffect","plot","maxValue","textBottom","Chart","current","type","data","datasets","fill","parameter","arrayValues","distribution","Array","toString","parser","Parser","equation","formula","replace","expr","parse","getXAxes","xVal","evaluate","distance","value","Math","max","apply","getData","label","backgroundColor","labels","options","scales","yAxes","ticks","beginAtZero","suggestedMax","suggestedMin","xAxes","scaleLabel","display","labelString","title","fontSize","text","position","fontWeight","padding","legend","boxWidth","length","Function","call","x","createPlot","destroy","className","styles","ref","width","height","collapsed","children","color","React","isCollapsed","setCollapsed","onClick","classPrefix","anchor","direction","target","document","querySelector","scrollIntoView","LAYERS","activeLayer","onLayerSelected","layer","classPrefixList","list","onSelect","role","aria-labelledby","element","aria-checked","tabIndex","window","setTimeout","handleSelectedElement","significantFigures","thousandSeparator","prefix","suffix","isNumber","fixed","parseFloat","toPrecision","formatted","toLocaleString","subtitle","hint","primaryColor","primary","dangerouslySetInnerHTML","__html","replacement","MOhm","backgroundAlt","etypeFactsheetPath","instance","basePath","path","loading","error","state","setState","fetch","then","res","json","dynamic","ssr","Panel","Collapse","featureUnit","voltage_deflection","voltage_deflection_begin","voltage_base","steady_state_voltage","spikecount","time_to_first_spike","time_to_last_spike","inv_time_to_first_spike","inv_first_isi","inv_second_isi","inv_third_isi","inv_fourth_isi","inv_fifth_isi","inv_last_isi","mean_frequency","ahp_depth","AP1_amp","featureLabel","Spikecount","expFeatures","features","tableData","protocols","entries","forEach","protocol","protocolVal","push","measurement","measurementVal","sort","f1","f2","featureName","featureValue","key","feature","unit","toLowerCase","mean","std","tableColumns","dataIndex","render","row","NumberFormat","channelMechanisms","distributions","sections","bordered","defaultActiveKey","header","dataSource","columns","pagination","size","tableLayout","section","rawChannelParams","groupBy","flat","channel","channelParams","content","ChannelParamPlot","MorphologyFactsheetSingleValueEntry","fact","name","isNil","Unit","MorphologyFactsheetEntry","neuriteTypes","strPrettify","str","morphologyName","stats","ModelMorphologyStats","getFactsheetEntries","neuriteType","statKey","statValue","includes","mean_soma_radius","filter","max_section_length","neuriteHasStats","MorphoViewerContainer","modelMorphologyRe","router","useRouter","query","currentLayer","currentMtype","mtype","currentEtype","etype","currentInstance","setParams","params","pathname","undefined","shallow","mtypes","models","model","reduce","acc","cur","etypes","instances","memodelArchiveHref","match","Filters","Title","InfoBox","LayerSelector","List","DataContainer","Collapsible","ModelMorphologyFactsheet","download","href","About","MainLayout","__NEXT_P"],"mappings":"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","file":"static/chunks/pages/digital-reconstructions/neurons-1ccc3da823e92e5abe32.js","sourcesContent":["var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 95606,\n\t\"./ss.js\": 95606,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js';\nimport { Parser } from 'expr-eval';\n\nimport styles from './styles.module.scss';\n\n\nexport type ChannelParam = {\n  channel: string;\n  parameter: string;\n  distribution: 'uniform' | string;\n  min?: number;\n  max?: number;\n  formula?: string;\n}\n\ntype ChannelParamPlotProps = {\n  channelParam: ChannelParam;\n}\n\nconst ChannelParamPlot: React.FC<ChannelParamPlotProps> = ({ channelParam }) => {\n  const canvasEl = useRef<HTMLCanvasElement>(null);\n\n  const createPlot = () => {\n    const plotLength = 9;\n    let maxValue = 0.012;\n    let textBottom = '';\n\n    return new Chart(canvasEl?.current, {\n      type: 'line',\n      data: {\n        datasets: [{\n          fill: 'origin',\n          data: getData(channelParam),\n          label: channelParam.parameter,\n          backgroundColor: 'rgba(255, 177, 193, 0.5)',\n        }],\n        labels: getXAxes(),\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: false,\n              suggestedMax: maxValue * 1.6,\n              suggestedMin: 0,\n            },\n          }],\n          xAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: 'µm',\n            },\n          }],\n        },\n        title: {\n          fontSize: 12,\n          text: textBottom,\n          position: 'bottom',\n          display: true,\n          fontWeight: 'normal',\n          padding: 6,\n        },\n        legend: {\n          labels: {\n            boxWidth: 0,\n            fontSize: 12,\n          },\n        },\n      },\n    });\n\n    function getXAxes () {\n      // generate scale with steps\n      return Array.apply(null, {\n        length: plotLength,\n      }).map(Function.call, x => x * 100);\n    }\n\n    function getData (parameter) {\n      let arrayValues = [];\n      switch (parameter.distribution) {\n      case 'uniform':\n        const UNIFORM_CONST = 1;\n        arrayValues = new Array(plotLength).fill(UNIFORM_CONST);\n        maxValue = UNIFORM_CONST;\n        textBottom = UNIFORM_CONST.toString();\n        break;\n      default:\n        const parser = new Parser();\n        const equation = parameter.formula\n          .replace(/math\\.exp/g, 'exp')\n          .replace(/\\{/g, '(')\n          .replace(/\\}/g, ')');\n\n        const expr = parser.parse(equation);\n        arrayValues = getXAxes().map(xVal => expr.evaluate({ distance: xVal, value: 1 }));\n        maxValue = Math.max.apply(null, arrayValues);\n        textBottom = parameter.formula;\n        break;\n      }\n\n      return arrayValues;\n    }\n  };\n\n  useEffect(() => {\n    if (!canvasEl) return;\n\n    const plot = createPlot();\n\n    return () => {\n      if (plot) plot.destroy();\n    };\n  }, [canvasEl]);\n\n  return (\n    <div className={styles.plotContainer}>\n      <canvas ref={canvasEl} width=\"320\" height=\"220\" />\n    </div>\n  );\n};\n\n\nexport default ChannelParamPlot;\n","import React, { ReactChild, ReactFragment } from 'react';\nimport { IoIosArrowUp } from 'react-icons/io';\n\n\nconst classPrefix = 'collapsible__';\n\ntype CollapsibleColor = 'red'\n\ntype CollapsibleProps = {\n  collapsed?: boolean;\n  title: string;\n  children: ReactChild | ReactFragment;\n  color?: CollapsibleColor;\n  className?: string;\n};\n\nconst Collapsible: React.FC<CollapsibleProps> = ({\n  collapsed,\n  title,\n  children,\n  color = '',\n  className = '',\n}) => {\n  const [isCollapsed, setCollapsed] = React.useState(collapsed);\n\n  return (\n    <div id=\"data\" className={`${classPrefix}${isCollapsed ? 'collapsed' : 'expanded'} ${color} ${className}`}>\n      <div\n        className=\"header\"\n        title={title}\n        onClick={() => setCollapsed(!isCollapsed)}\n      >\n        {title}\n        <span className=\"arrow\">\n          <IoIosArrowUp />\n        </span>\n      </div>\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n};\n\nexport default Collapsible;\n","import React, { ReactChild, ReactFragment } from 'react';\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\n\nimport { Direction, Color } from '../../types';\n\n\nconst classPrefix = 'scroll-to__';\n\ntype ScrollToProps = {\n  anchor: string;\n  direction: Direction;\n  children: ReactChild | ReactFragment;\n  color?: Color;\n};\n\nconst ScrollTo: React.FC<ScrollToProps> = ({\n  anchor,\n  direction,\n  children,\n  color = '',\n}) => {\n  const scroll = () => {\n    const target = document.querySelector(`#${anchor}`);\n    if (target) {\n      target.scrollIntoView();\n    }\n  };\n\n  return (\n    <div onClick={scroll} className={`${classPrefix}basis bg-${color}`}>\n      {children}\n      <span className={`${classPrefix}direction`}>\n        {direction === 'up' && <IoIosArrowUp />}\n        {direction === 'down' && <IoIosArrowDown />}\n      </span>\n    </div>\n  );\n};\n\nexport default ScrollTo;\n","import React from 'react';\n\nimport ScrollTo from '../../components/ScrollTo';\n\n\nconst classPrefix = 'data-container__';\n\ntype DataContainerProps = {\n  visible?: boolean;\n  children: React.ReactNode\n};\n\nconst DataContainer: React.FC<DataContainerProps> = ({\n  children,\n}) => {\n  return <div className={`${classPrefix}basis`}>\n    <div className=\"center\">{children}</div>\n    <div className=\"scroll-to\">\n      <ScrollTo anchor=\"filters\" direction=\"up\">\n        Return to selectors\n            </ScrollTo>\n    </div>\n  </div>\n};\n\nexport default DataContainer;\n","import React from 'react';\n\nimport { Color } from '../../types';\nimport styles from './styles.module.scss';\n\n\ntype InfoBoxProps = {\n  title?: string;\n  text: string;\n  color?: Color;\n};\n\nconst InfoBox: React.FC<InfoBoxProps> = ({\n  title,\n  text,\n  color = '',\n}) => {\n  return (\n    <div className={`${styles.container} bg-${color}`}>\n      {title && <h3>{title}</h3>}\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default InfoBox;\n","import React, { ReactChild, ReactFragment } from 'react';\nimport { Layer } from '../../types';\n\nimport styles from './styles.module.scss'\n\n\ntype LayerSelectProps = {\n  activeLayer?: Layer;\n  onLayerSelected?: (layer: Layer) => void;\n};\n\nconst LAYERS: Layer[] = ['SLM', 'SR', 'SP', 'SO'];\n\nconst LayerSelector: React.FC<LayerSelectProps> = ({\n  activeLayer,\n  onLayerSelected = () => {},\n}) => {\n  const selectLayer = (l: Layer): void => onLayerSelected(l);\n\n  return (\n    <div>\n      {LAYERS.map(layer => (\n        <div\n          key={layer}\n          className={`${styles.layer} ${layer === activeLayer ? styles.active : ''}`}\n          onClick={() => selectLayer(layer)}\n        >\n          {layer}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default LayerSelector;\n","import React from 'react';\n\nimport { Color } from '../../types';\n\n\nconst classPrefixList = 'list__';\nconst classPrefixListElement = 'list-element__';\n\ntype ListProps = {\n  title?: string;\n  list: string[];\n  value?: string;\n  onSelect?: (s: string) => void;\n  color?: Color;\n  anchor?: string;\n  block?: boolean;\n  className?: string;\n};\n\nconst List: React.FC<ListProps> = ({\n  title,\n  list,\n  value,\n  onSelect = () => { },\n  color,\n  anchor = '',\n  className = '',\n}) => {\n  const handleSelectedElement = (element: string) => {\n    const target = anchor && document.querySelector(`#${anchor}`);\n    if (target) {\n      window.setTimeout(() => target.scrollIntoView(true), 0)\n    }\n    onSelect(element);\n  }\n\n  const id = title ? title.replace(/\\s/g, '') : 'no_title';\n\n  return (\n    <div\n      className={`${classPrefixList}basis bg-${color} ${className}`}\n      role=\"radiogroup\"\n      aria-labelledby={`${classPrefixList}${id}`}\n    >\n      {title && <p>{title}</p>}\n      <div className=\"elements\">\n        {list.map(element => (\n          <div\n            key={element}\n            role=\"radio\"\n            aria-checked={value === element}\n            tabIndex={0}\n            className={`${classPrefixListElement}basis ${value === element ? 'selected' : ''}`}\n            onClick={() => handleSelectedElement(element)}\n            title={element}\n          >\n            {element}\n          </div>\n\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React from 'react';\n\nimport isNumber from 'lodash/isNumber';\n\n\ntype NumberFormatProps = {\n  value?: any;\n  significantFigures?: number;\n  thousandSeparator?: boolean;\n  prefix?: string;\n  suffix?: string;\n};\n\nconst NumberFormat: React.FC<NumberFormatProps> = ({\n  value,\n  significantFigures = 5,\n  thousandSeparator = true,\n  prefix = '',\n  suffix = '',\n}) => {\n  if (!isNumber(value)) return value;\n\n  const fixed = parseFloat(value.toPrecision(significantFigures));\n\n  const formatted = thousandSeparator\n    ? fixed.toLocaleString('en')\n    : fixed;\n\n  return `${prefix}${formatted}${suffix}`;\n}\n\n\nexport default NumberFormat;\n","import React from 'react';\n\nimport { Color } from '../../types';\n\n\nconst classPrefix = 'title__';\n\ntype TitleProps = {\n  title?: React.ReactChild;\n  subtitle?: string;\n  primaryColor?: Color;\n  hint?: string;\n  primary?: boolean;\n};\n\nconst Title: React.FC<TitleProps> = ({\n  title,\n  subtitle,\n  hint,\n  primaryColor = 'yellow' as Color,\n  primary,\n}) => {\n  return (\n    <div\n      className={`${classPrefix}basis ${\n        primary ? 'primary' : ''\n      } ${primaryColor}`}\n    >\n      {subtitle && !primary && <h4 className=\"text-white\">{subtitle}</h4>}\n      {title && <h2 role=\"title\" className=\"text-white\">{title}</h2>}\n      {subtitle && primary && <h4 className=\"text-white\">{subtitle}</h4>}\n      {hint && <p dangerouslySetInnerHTML={{ __html: hint }} />}\n    </div>\n  );\n};\n\nexport default Title;\n","import React from 'react';\n\ntype UnitProps = {\n  value?: string;\n}\n\nconst replacement = {\n  MOhm: 'MΩ',\n};\n\nconst Unit: React.FC<UnitProps> = ({ value = '' }) => {\n  return (\n    <>\n      {replacement[value] ?? value}\n    </>\n  );\n};\n\n\nexport default Unit;\n","import React, { ReactChild, ReactFragment } from 'react';\n\nimport ScrollTo from '../../components/ScrollTo';\nimport { Color } from '../../types';\n// import './style.scss';\n\nconst classPrefix = 'filters__';\n\ntype FiltersProps = {\n  children: ReactChild | ReactFragment;\n  backgroundAlt?: boolean;\n  id?: string;\n};\n\nconst Filters: React.FC<FiltersProps> = ({\n  children,\n  backgroundAlt,\n  id = 'filters',\n}) => {\n  return (\n    <div>\n      <div\n        id={id}\n        className={`${classPrefix}basis ${backgroundAlt ? 'background-alt' : ''}`}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Filters;\n","\nimport { basePath } from '../../config';\n\n\nexport const subregionCircuitFactsheetPath = (subregion: string): string => {\n  return `${basePath}/data/model-data/factsheets/REGION/${subregion}/Circuit/factsheet.json`;\n};\n\nexport const regionCircuitFactsheetPath = (): string => {\n  return `${basePath}/data/model-data/factsheets/Circuit/factsheet.json`;\n}\n\nexport const subregionMicrocircuitFactsheetPath = (subregion: string): string => {\n  return `${basePath}/data/model-data/factsheets/REGION/${subregion}/Central/Circuit/factsheet.json`;\n}\n\nexport const etypeFactsheetPath = (\n  instance: string\n): string => {\n  return `${basePath}/data/model-info/${instance}/etype_factsheet.json`;\n}\n\nexport const metypeFactsheetPath = (\n  region: string,\n  mtype: string,\n  etype: string,\n  instance: string,\n) => {\n  return `${basePath}/data/memodel_factsheets/${mtype}/${etype}/${region}/${instance}/me_type_factsheeet.json`;\n}\n\nexport const layerFactsheetPath = (subregion: string, layerNum: number): string => {\n  return `${basePath}/data/model-data/factsheets/REGION/${subregion}/Central/CircuitLayers/${layerNum}/factsheet.json`;\n};\n\nexport const pathwayFactsheetPath = (subregion: string, pathway: string): string => {\n  return `${basePath}/data/model-data/factsheets/REGION/${subregion}/Central/Pathways/${pathway}/factsheet.json`;\n};\n\nexport const expMorphologyFactsheetPath = (morphologyName: string): string => {\n  return `${basePath}/data/exp-morphologies/factsheets/${morphologyName}/morphology_factsheeet.json`;\n};\n\nexport const morphHistogramIndexPath = (region: string, mtype: string) => {\n  return `${basePath}/data/morph-histogram/${region}_Column/${mtype}/histogram-index.json`;\n};\n","import React from 'react';\n\n\ntype HttpDataProps = {\n  path: string;\n  children: (\n    data: any,\n    loading: boolean,\n    error: any,\n  ) => React.ReactNode;\n};\n\nconst HttpData: React.FC<HttpDataProps> = ({ path, children }) => {\n  const [state, setState] = React.useState<{\n    data: any;\n    loading: boolean;\n    error: any;\n  }>({\n    data: null,\n    loading: false,\n    error: null,\n  });\n\n  React.useEffect(() => {\n    if (path) {\n      setState({ ...state, loading: true, data: null });\n      fetch(path)\n        .then(res => res.json())\n        .then(data => setState({ ...state, data, error: false }))\n        .catch(error => setState({ ...state, error, data: null }));\n    }\n  }, [path]);\n\n  if (!path) {\n    return null;\n  }\n\n  if (state.loading || !state.data) {\n    return <p>loading...</p>;\n  }\n  if (state.error) {\n    return <p>An error happened loading the data... Please try again later.</p>;\n  }\n\n  return (\n    <>\n      {children(state.data, state.loading, state.error)}\n    </>\n  );\n};\n\nexport default HttpData;\n","import React from 'react';\nimport dynamic from 'next/dynamic';\n\nexport * from './plot';\n\n\nexport default dynamic(() => import('./plot'), { ssr: false });\n","import React from 'react';\nimport get from 'lodash/get';\nimport groupBy from 'lodash/groupBy';\nimport { Table, Collapse, Popover } from 'antd';\n\nimport NumberFormat from '../NumberFormat';\nimport ChannelParamPlot from '../ChannelParamPlot';\nimport styles from './index.module.scss';\n\n\nconst { Panel } = Collapse;\n\nexport type EtypeFactsheetProps = {\n  data?: any;\n};\n\nconst featureUnit = {\n  voltage_deflection: 'mV',\n  voltage_deflection_begin: 'mV',\n  voltage_base: 'mV',\n  steady_state_voltage: 'mV',\n  spikecount: '',\n  time_to_first_spike: 'ms',\n  time_to_last_spike: 'ms',\n  inv_time_to_first_spike: 'Hz',\n  inv_first_isi: 'Hz',\n  inv_second_isi: 'Hz',\n  inv_third_isi: 'Hz',\n  inv_fourth_isi: 'Hz',\n  inv_fifth_isi: 'Hz',\n  inv_last_isi: 'Hz',\n  mean_frequency: 'ms',\n  ahp_depth: 'mV',\n  AP1_amp: 'mV',\n};\n\nconst featureLabel = {\n  Spikecount: 'spikecount',\n}\n\n\nconst EtypeFactsheet: React.FC<EtypeFactsheetProps> = ({\n  data,\n}) => {\n  // Experimental features table data preparation\n  const expFeatures = data.features;\n\n  const tableData = {};\n  const protocols = [];\n  Object.entries(expFeatures).forEach(([protocol, protocolVal]) => {\n    protocols.push(protocol);\n    Object.entries(protocolVal).forEach(([measurement, measurementVal]) => {\n      Object.entries(measurementVal).sort((f1, f2) => (f1[0] > f2[0] ? 1 : -1)).forEach(([featureName, featureValue]) => {\n        if (!tableData[protocol]) {\n          tableData[protocol] = [];\n        }\n\n        tableData[protocol].push({\n          key: featureName,\n          protocol,\n          measurement,\n          feature: featureLabel[featureName] || featureName,\n          unit: featureUnit[featureName.toLowerCase()],\n          mean: featureValue[0],\n          std: featureValue[1],\n        })\n      });\n    });\n  });\n\n  protocols.sort();\n\n  const tableColumns = [\n    {\n      title: 'Feature',\n      dataIndex: 'feature',\n      render: feature => feature.replace(/\\_/g, ' '),\n    },\n    {\n      title: 'Recording site',\n      dataIndex: 'measurement',\n    },\n    {\n      title: 'Mean',\n      dataIndex: 'mean',\n      render: (mean, row) => <span><NumberFormat value={mean} /> {row.unit}</span>\n    },\n    {\n      title: 'Std',\n      dataIndex: 'std',\n      render: (std, row) => <span><NumberFormat value={std} /> {row.unit}</span>\n    },\n    // {\n    //   title: 'Model fitness',\n    //   dataIndex: 'modelFitness',\n    //   render: modelFitness => <NumberFormat value={modelFitness} />\n    // },\n  ];\n\n  // Channel mechanisms data preparation\n  const channelMechanisms = data.distributions;\n  const sections = Object.keys(channelMechanisms);\n\n  const groupByChannel = (rawChannelParams) => groupBy(rawChannelParams.flat(), 'channel');\n\n  return (\n    <div className={styles.container}>\n      <h3>Factsheet</h3>\n      <Collapse\n        className=\"mb-3\"\n        bordered={false}\n        defaultActiveKey={protocols[0]}\n      >\n        {protocols.map(protocol => (\n          <Panel key={protocol} header={<strong>{protocol}</strong>}>\n            <Table\n              dataSource={tableData[protocol]}\n              columns={tableColumns}\n              pagination={false}\n              size=\"small\"\n              tableLayout=\"fixed\"\n              bordered\n            />\n          </Panel>\n        ))}\n      </Collapse>\n\n      <h3>Channel Mechanisms</h3>\n      <div className={styles.mechanisms}>\n        <div className=\"row mb-1\">\n          <div className=\"col-xs-6 col-md-4\"><strong>Sections</strong></div>\n          <div className=\"col-xs-6 col-md-8\"><strong>Mechanisms</strong></div>\n        </div>\n        {sections.map(section => (\n          <div className={`row ${styles.mechanismsRow}`} key={section}>\n            <div className=\"col-xs-6 col-md-4\">{section}</div>\n            <div className=\"col-xs-6 col-md-8\">\n              {Object.entries<any[]>(groupByChannel(channelMechanisms[section])).map(([channel, channelParams]) => (\n                <Popover\n                  key={channel}\n                  title={channel}\n                  content={(\n                    <>\n                      {channelParams.map(channelParam => (\n                        <ChannelParamPlot\n                          key={channelParam.parameter}\n                          channelParam={channelParam}\n                        />\n                      ))}\n                    </>\n                  )}\n                >\n                  <span\n                    className={styles.channelLabel}\n                  >\n                    {channelParams[0].channel}\n                  </span>\n                </Popover>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n\nexport default EtypeFactsheet;\n","import React from 'react';\nimport NumberFormat from '../NumberFormat';\nimport isNil from 'lodash/isNil';\n\nimport Unit from '../Unit';\nimport ModelMorphologyStats from '../../model-morphology-stats.json';\n\n\nconst classPrefix = 'factsheet__';\n\n\ntype MorphologyFactsheetEntryType = {\n  name: string;\n  description?: string;\n  unit?: string;\n  value?: number | string;\n  value_map?: {\n    [key: string]: string | number;\n  };\n};\n\n\ntype MorphologyFactsheetProps = {\n  morphologyName: string;\n  className?: string;\n};\n\n\nconst MorphologyFactsheetSingleValueEntry: React.FC<{\n  fact: MorphologyFactsheetEntryType;\n}> = ({\n  fact\n}) => {\n  return (\n    <div className=\"row mt-1\">\n      <div className=\"col-xs-8 col-sm-4 name\">{fact.name}</div>\n      <div className=\"col-xs-4 col-sm-8 value\">\n        {isNil(fact.value)\n          ? (<span>-</span>)\n          : (<span>\n              <NumberFormat value={fact.value} /> <Unit value={fact.unit} />\n            </span>)\n        }\n      </div>\n    </div>\n  );\n};\n\nconst MorphologyFactsheetEntry: React.FC<{\n  fact: MorphologyFactsheetEntryType\n}> = ({\n  fact\n}) => {\n  return (<MorphologyFactsheetSingleValueEntry fact={fact} />);\n};\n\nconst neuriteTypes = ['all', 'axon', 'apical_dendrite', 'basal_dendrite'];\n\nconst strPrettify = (str) => str ? str.replace(/\\_/g, ' ') : str;\n\nconst MorphologyFactsheet: React.FC<MorphologyFactsheetProps> = ({\n  morphologyName,\n  className = '',\n}) => {\n  const stats = ModelMorphologyStats[morphologyName];\n\n  if (!stats) {\n    return (\n      <p className=\"red\">No morphology stats found</p>\n    );\n  }\n\n  const neuriteHasStats = (neuriteType) => !!stats[neuriteType].max_section_length;\n\n  const getFactsheetEntries = (neuriteType) => {\n    return Object.entries(stats[neuriteType]).map(([statKey, statValue]) => ({\n      name: strPrettify(statKey),\n      unit: (statKey as string).includes('volume') ? 'µm³' : ((statKey as string).includes('length') ? 'µm' : ''),\n      value: statValue\n    }));\n  };\n\n  return (\n    <div className={`${classPrefix}basis ${className}`}>\n      <div className=\"mb-3 mt-3\">\n        <MorphologyFactsheetEntry fact={{\n          name: 'soma diameter',\n          unit: 'µm',\n          value: stats.mean_soma_radius * 2,\n        }} />\n      </div>\n\n      {neuriteTypes.filter(neuriteType => neuriteHasStats(neuriteType)).map(neuriteType => (\n        <div className=\"mb-2\" key={neuriteType}>\n          <strong className=\"text-capitalize\">{strPrettify(neuriteType)}</strong>\n          {getFactsheetEntries(neuriteType).map(fact => (\n            <MorphologyFactsheetEntry key={fact.name} fact={fact as MorphologyFactsheetEntryType} />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MorphologyFactsheet;\n","import React from 'react';\nimport dynamic from 'next/dynamic'\n\n\nconst MorphoViewerContainer = dynamic(() => import('./MorphoViewerContainer'), { ssr: false });\n\ntype NeuronMorphologyProps = {\n  path: string;\n};\n\nconst NeuronMorphology: React.FC<NeuronMorphologyProps> = ({ path }) => {\n  return (\n    <MorphoViewerContainer path={path} />\n  );\n};\n\n\nexport default NeuronMorphology;\n","import React from 'react';\n\nimport { useRouter } from 'next/router';\nimport { Button } from 'antd';\n\nimport { etypeFactsheetPath } from '../../queries/http';\nimport Title from '../../components/Title';\nimport LayerSelector from '../../components/LayerSelector';\nimport InfoBox from '../../components/InfoBox';\nimport Filters from '../../layouts/Filters';\nimport HttpData from '../../components/HttpData';\nimport DataContainer from '../../components/DataContainer';\nimport { Layer } from '../../types';\nimport List from '../../components/List';\nimport Collapsible from '../../components/Collapsible';\nimport EtypeFactsheet from '../../components/EtypeFactsheet';\nimport ModelMorphologyFactsheet from '../../components/ModelMorphologyFactsheet';\nimport NeuronMorphology from '../../components/NeuronMorphology';\nimport { basePath } from '../../config';\nimport models from '../../models.json';\n\nimport styles from '../../styles/digital-reconstructions/neurons.module.scss';\n\n\nconst modelMorphologyRe = /^[a-zA-Z0-9]+\\_[a-zA-Z0-9]+\\_[a-zA-Z0-9]+\\_(.+)\\_[a-zA-Z0-9]+$/;\n\nimport { colorName } from './config';\n\n\nconst Neurons: React.FC = () => {\n  const router = useRouter();\n\n  const query = {\n    ...router?.query\n  };\n\n  const currentLayer: Layer = query.layer as Layer;\n  const currentMtype: string = query.mtype as string;\n  const currentEtype: string = query.etype as string;\n  const currentInstance: string = query.instance as string;\n\n  const setParams = (params: Record<string, string>): void => {\n    const query = {\n      ...{\n        layer: currentLayer,\n        mtype: currentMtype,\n        etype: currentEtype,\n        instance: currentInstance,\n      },\n      ...params,\n    };\n    router.push({ query, pathname: router.pathname }, undefined, { shallow: true });\n  };\n\n  const setLayer = (layer: Layer) => {\n    setParams({\n      layer,\n      mtype: null,\n      etype: null,\n      instance: null,\n    })\n  };\n  const setMtype = (mtype: string) => {\n    setParams({\n      mtype,\n      etype: null,\n      instance: null,\n    })\n  };\n  const setEtype = (etype: string) => {\n    setParams({\n      etype,\n      instance: null,\n    })\n  };\n  const setInstance = (instance: string) => {\n    setParams({ instance })\n  };\n\n  const mtypes = currentLayer\n    ? models\n      .filter(model => model.layer === currentLayer)\n      .map(model => model.mtype)\n      .reduce((acc, cur) => acc.includes(cur) ? acc : [...acc, cur], [])\n      .sort()\n    : [];\n\n  const etypes = currentMtype\n    ? models\n      .filter(model => model.mtype === currentMtype)\n      .map(model => model.etype)\n      .reduce((acc, cur) => acc.includes(cur) ? acc : [...acc, cur], [])\n      .sort()\n    : [];\n\n  const instances = currentEtype\n    ? models\n      .filter(model => model.mtype === currentMtype && model.etype === currentEtype)\n      .map(model => model.name)\n      .sort()\n    : [];\n\n  const getMorphologyDistribution = (morphologyResource: any) => {\n    return morphologyResource.distribution.find((d: any) => d.name.match(/\\.asc$/i));\n  };\n\n  const memodelArchiveHref = `https://object.cscs.ch/v1/AUTH_c0a333ecf7c045809321ce9d9ecdfdea/hippocampus_optimization/rat/CA1/v4.0.5/optimizations_Python3/${currentInstance}/${currentInstance}.zip?bluenaas=true`;\n\n  const morphologyName = currentInstance\n    ? currentInstance.match(modelMorphologyRe)[1]\n    : null;\n\n  return (\n    <>\n      <Filters>\n        <div className=\"row bottom-xs w-100\">\n          <div className=\"col-xs-12 col-lg-6\">\n            <Title\n              primaryColor=\"grey-1\"\n              title={<span>Neurons</span>}\n              subtitle=\"Digital Reconstructions\"\n            />\n            <InfoBox\n              color=\"grey-1\"\n              text=\"We reconstructed the 3D morphology of single neurons and classified them into morphological types (m-types). In addition, we recorded electrical traces from the same cell types and classified the traces into electrical types (e-types). Finally, we mapped the e-types expressed in each m-type to account for the observed diversity of morpho-electrical subtypes (me-types).\"\n            />\n          </div>\n          <div className=\"col-xs-12 col-lg-6\">\n            <div className={styles.selector}>\n              <div className={styles.selectorColumn}>\n                <div className={styles.selectorHead}>1. Choose a layer</div>\n                <div className={styles.selectorBody}>\n                  <LayerSelector\n                    activeLayer={currentLayer}\n                    onLayerSelected={setLayer}\n                  />\n                </div>\n              </div>\n              <div className={styles.selectorColumn}>\n                <div className={styles.selectorHead}>2. Select model</div>\n                <div className={styles.selectorBody}>\n                  <List\n                    className=\"mb-2\"\n                    list={mtypes}\n                    value={currentMtype}\n                    title={`M-type ${mtypes.length ? '(' + mtypes.length + ')' : ''}`}\n                    color=\"grey-1\"\n                    onSelect={setMtype}\n                  />\n                  <List\n                    className=\"mb-2\"\n                    list={etypes}\n                    value={currentEtype}\n                    title={`E-type ${etypes.length ? '(' + etypes.length + ')' : ''}`}\n                    color=\"grey-1\"\n                    onSelect={setEtype}\n                  />\n                  <List\n                    list={instances}\n                    value={currentInstance}\n                    title={`ME-type instance ${instances.length ? '(' + instances.length + ')' : ''}`}\n                    color=\"grey-1\"\n                    onSelect={setInstance}\n                    anchor=\"data\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Filters>\n\n      <div id=\"data\" />\n\n      {!!currentInstance && <DataContainer >\n        <Collapsible className=\"mt-4\" title={`Model instance ${currentInstance} Factsheet`}>\n          <h3>Anatomy</h3>\n          <ModelMorphologyFactsheet morphologyName={morphologyName} />\n\n          <div className=\"row end-xs mt-3 mb-4\">\n            <div className=\"col\">\n              <Button\n                type=\"primary\"\n                download\n                href={memodelArchiveHref}\n              >\n                Download model\n              </Button>\n            </div>\n          </div>\n\n          <h3 className=\"mb-3\">Morphology</h3>\n          <NeuronMorphology path={`${basePath}/data/model-morphologies-swc/${morphologyName}.swc`} />\n          <div className=\"row end-xs mt-3 mb-3\">\n            <div className=\"col\">\n              <Button\n                type=\"primary\"\n                download\n                href={`${basePath}/data/model-morphologies-asc/${morphologyName}.asc`}\n              >\n                Download morphology\n              </Button>\n            </div>\n          </div>\n        </Collapsible>\n\n        <Collapsible className=\"mt-4\" title={`E-Type ${currentEtype} Factsheet`}>\n          <HttpData path={etypeFactsheetPath(currentInstance)}>\n            {data => (\n              <>\n                <EtypeFactsheet data={data} />\n                <div className=\"text-right mt-3 mb-3\">\n                  <Button\n                    type=\"primary\"\n                    href={etypeFactsheetPath(currentInstance)}\n                    download\n                  >\n                    Download factsheet\n                  </Button>\n                </div>\n              </>\n            )}\n          </HttpData>\n          {/* TODO: add experimental traces used for model fitting */}\n        </Collapsible>\n\n      </DataContainer>}\n    </>\n  );\n};\n\nexport default Neurons;\n","import React from 'react';\n\nimport MainLayout from '../../layouts/MainLayout';\nimport NeuronsView from '../../views/digitalReconstructions/Neurons';\n\n\nexport default function About() {\n  return (\n    <MainLayout>\n      <NeuronsView />\n    </MainLayout>\n  );\n};\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/digital-reconstructions/neurons\",\n      function () {\n        return require(\"private-next-pages/digital-reconstructions/neurons.tsx\");\n      }\n    ]);\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mechanisms\":\"EtypeFactsheet_mechanisms__3CSqg\",\"mechanismsRow\":\"EtypeFactsheet_mechanismsRow__3lud9\",\"channelLabel\":\"EtypeFactsheet_channelLabel__1wOJ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__9zB6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layer\":\"styles_layer__uUJ49\",\"active\":\"styles_active__1RUjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selector\":\"neurons_selector__2DgdB\",\"selectorColumn\":\"neurons_selectorColumn__1Ifs_\",\"selectorHead\":\"neurons_selectorHead__2rPY0\",\"selectorBody\":\"neurons_selectorBody__2qh5E\"};"],"sourceRoot":""}