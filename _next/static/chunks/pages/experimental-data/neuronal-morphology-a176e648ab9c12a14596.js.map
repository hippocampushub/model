{"version":3,"sources":["webpack://_N_E/./src/components/ExpMorphologyFactsheet/index.tsx","webpack://_N_E/./src/components/ImageViewer/index.tsx","webpack://_N_E/./src/components/ExpMorphologyTable/index.tsx","webpack://_N_E/./src/utils/index.ts","webpack://_N_E/./src/components/NexusFileDownloadButton/index.tsx","webpack://_N_E/./src/views/experimental/NeuronMorphology.tsx","webpack://_N_E/./src/pages/experimental-data/neuronal-morphology.tsx","webpack://_N_E/./node_modules/file-saver/dist/FileSaver.min.js","webpack://_N_E/./src/components/ExpMorphologyTable/styles.module.scss","webpack://_N_E/./src/styles/experimental-data/neuron-morphology.module.scss","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?beab"],"names":["_ref","fact","className","children","name","value","NumberFormat","Unit","unit","_ref2","neuriteTypes","strPrettify","str","replace","_ref3","morphologyName","_ref3$className","stats","getFactsheetEntries","neuriteType","Object","entries","map","_ref4","_ref5","statKey","statValue","includes","concat","mean_soma_radius","filter","max_section_length","neuriteHasStats","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","ImageViewerLazy","ssr","loadableGenerated","webpack","modules","props","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","entryToArray","entry","Array","isArray","getAgentLabel","agent","givenName","familyName","getAgentType","_ref$morphologies","morphologies","nexus","agentIds","reduce","ids","morphology","currIds","contribution","_contribution$agent","Boolean","from","Set","_useState","agentMap","setAgentMap","contributionEsQuery","size","query","terms","View","elasticSearchQuery","org","project","datasetViewId","then","data","hits","esDocuments","esDocument","_source","agents","id","label","type","morph","style","textAlign","morphImageContainer","src","alt","loading","annotation","hasBody","sort","a1","a2","nexusEntities","nexusUrlR","RegExp","join","filename","url","_ref$className","setLoading","onClick","_parseUrl$org$project","nexusUrl","Error","mulEntityTypeR","mulEntityTypeMatch","match","matches","deployment","entityType","slice","schema","parseUrl","fileOrg","fileProject","fileId","split","reverse","File","get","as","imageData","console","error","router","setQuery","pathname","undefined","shallow","currentLayer","layer","mtypes","m","region","mtype","currentMtype","instances","currentInstance","instance","getMorphologyDistribution","morphologyResource","distribution","find","d","getAndSortMorphologies","m1","m2","Filters","backgroundAlt","Title","primaryColor","title","subtitle","InfoBox","color","text","selector","selectorColumn","selectorHead","selectorBody","LayerSelector","activeLayer","onLayerSelected","List","list","onSelect","anchor","DataContainer","Collapsible","ESData","ExpMorphologyFactsheet","contentUrl","NexusPlugin","resource","nexusClient","About","MainLayout","NeuronMorphology","b","a","autoBom","warn","test","Blob","c","XMLHttpRequest","open","responseType","onload","g","response","onerror","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","URL","webkitURL","j","createElement","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","readAsDataURL","l","module","exports","__NEXT_P"],"mappings":"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","file":"static/chunks/pages/experimental-data/neuronal-morphology-a176e648ab9c12a14596.js","sourcesContent":["import _slicedToArray from \"/Users/getta/dev/portals/hippocampus-model-portal/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport NumberFormat from '../NumberFormat';\nimport isNil from 'lodash/isNil';\nimport Unit from '../Unit';\nimport expMorphologyStats from '../../exp-morphology-stats.json';\nvar classPrefix = 'factsheet__';\n\nvar MorphologyFactsheetSingleValueEntry = function MorphologyFactsheetSingleValueEntry(_ref) {\n  var fact = _ref.fact;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"row mt-1\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"col-xs-8 col-sm-4 name\",\n      children: fact.name\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"col-xs-4 col-sm-8 value\",\n      children: isNil(fact.value) ? /*#__PURE__*/_jsx(\"span\", {\n        children: \"-\"\n      }) : /*#__PURE__*/_jsxs(\"span\", {\n        children: [/*#__PURE__*/_jsx(NumberFormat, {\n          value: fact.value\n        }), \" \", /*#__PURE__*/_jsx(Unit, {\n          value: fact.unit\n        })]\n      })\n    })]\n  });\n};\n\nvar MorphologyFactsheetEntry = function MorphologyFactsheetEntry(_ref2) {\n  var fact = _ref2.fact;\n  return /*#__PURE__*/_jsx(MorphologyFactsheetSingleValueEntry, {\n    fact: fact\n  });\n};\n\nvar neuriteTypes = ['all', 'axon', 'apical_dendrite', 'basal_dendrite'];\n\nvar strPrettify = function strPrettify(str) {\n  return str ? str.replace(/\\_/g, ' ') : str;\n};\n\nvar MorphologyFactsheet = function MorphologyFactsheet(_ref3) {\n  var morphologyName = _ref3.morphologyName,\n      _ref3$className = _ref3.className,\n      className = _ref3$className === void 0 ? '' : _ref3$className;\n  var stats = expMorphologyStats[morphologyName];\n\n  if (!stats) {\n    return /*#__PURE__*/_jsx(\"p\", {\n      className: \"red\",\n      children: \"No morphology stats found\"\n    });\n  }\n\n  var neuriteHasStats = function neuriteHasStats(neuriteType) {\n    return !!stats[neuriteType].max_section_length;\n  };\n\n  var getFactsheetEntries = function getFactsheetEntries(neuriteType) {\n    return Object.entries(stats[neuriteType]).map(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          statKey = _ref5[0],\n          statValue = _ref5[1];\n\n      return {\n        name: strPrettify(statKey),\n        unit: statKey.includes('volume') ? 'µm³' : statKey.includes('length') ? 'µm' : '',\n        value: statValue\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"\".concat(classPrefix, \"basis \").concat(className),\n    children: [/*#__PURE__*/_jsx(\"h3\", {\n      children: \"Morphology factsheet\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"mb-3 mt-3\",\n      children: /*#__PURE__*/_jsx(MorphologyFactsheetEntry, {\n        fact: {\n          name: 'soma diameter',\n          unit: 'µm',\n          value: stats.mean_soma_radius * 2\n        }\n      })\n    }), neuriteTypes.filter(function (neuriteType) {\n      return neuriteHasStats(neuriteType);\n    }).map(function (neuriteType) {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsx(\"strong\", {\n          className: \"text-capitalize\",\n          children: strPrettify(neuriteType)\n        }), getFactsheetEntries(neuriteType).map(function (fact) {\n          return /*#__PURE__*/_jsx(MorphologyFactsheetEntry, {\n            fact: fact\n          }, fact.name);\n        })]\n      }, neuriteType);\n    })]\n  });\n};\n\nexport default MorphologyFactsheet;","import _defineProperty from \"/Users/getta/dev/portals/hippocampus-model-portal/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nvar ImageViewerLazy = dynamic(function () {\n  return import('./image-viewer');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./image-viewer')];\n    },\n    modules: ['./image-viewer']\n  }\n});\n\nvar ImageViewer = function ImageViewer(props) {\n  return /*#__PURE__*/_jsx(ImageViewerLazy, _objectSpread({}, props));\n};\n\nexport default ImageViewer;","import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"/Users/getta/dev/portals/hippocampus-model-portal/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useState, useEffect } from 'react';\nimport { keyBy } from 'lodash';\nimport { useNexusContext } from '@bbp/react-nexus';\nimport { hippocampus, basePath } from '../../config';\nimport ImageViewer from '../ImageViewer';\nimport styles from './styles.module.scss';\n\nfunction entryToArray(entry) {\n  if (Array.isArray(entry)) return entry;\n  return [entry];\n}\n\nfunction getAgentLabel(agent) {\n  return agent.name ? agent.name : \"\".concat(agent.givenName, \" \").concat(agent.familyName);\n}\n\nfunction getAgentType(agent) {\n  return agent.name ? 'institution' : 'person';\n}\n\nvar ExpMorphologyTable = function ExpMorphologyTable(_ref) {\n  var _ref$morphologies = _ref.morphologies,\n      morphologies = _ref$morphologies === void 0 ? [] : _ref$morphologies;\n  var nexus = useNexusContext();\n  var agentIds = morphologies.reduce(function (ids, morphology) {\n    var currIds = entryToArray(morphology.contribution).map(function (contribution) {\n      var _contribution$agent;\n\n      return (_contribution$agent = contribution.agent) === null || _contribution$agent === void 0 ? void 0 : _contribution$agent['@id'];\n    }).filter(Boolean);\n    return Array.from(new Set([].concat(_toConsumableArray(ids), _toConsumableArray(currIds))));\n  }, []);\n\n  var _useState = useState(null),\n      agentMap = _useState[0],\n      setAgentMap = _useState[1];\n\n  useEffect(function () {\n    if (!agentIds.length) return;\n    var contributionEsQuery = {\n      from: 0,\n      size: 100,\n      query: {\n        terms: {\n          '_id': agentIds\n        }\n      }\n    };\n    nexus.View // query ElesticSearch endpoint to get agents by their ids\n    .elasticSearchQuery(hippocampus.org, hippocampus.project, hippocampus.datasetViewId, contributionEsQuery) // extract ES documents\n    .then(function (data) {\n      return data.hits.hits;\n    }) // extract Nexus original documents\n    .then(function (esDocuments) {\n      return esDocuments.map(function (esDocument) {\n        return esDocument._source;\n      });\n    }) // pick only agent ids and labels\n    .then(function (agents) {\n      return agents.map(function (agent) {\n        return {\n          id: agent['@id'],\n          label: getAgentLabel(agent),\n          type: getAgentType(agent)\n        };\n      });\n    }) // create a map of agents of type Record<id, label>\n    .then(function (agents) {\n      return keyBy(agents, 'id');\n    }).then(function (agentMap) {\n      return setAgentMap(agentMap);\n    });\n  }, [morphologies]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"layer-anatomy-summary__basis mt-2\",\n    children: /*#__PURE__*/_jsxs(\"table\", {\n      children: [/*#__PURE__*/_jsx(\"thead\", {\n        children: /*#__PURE__*/_jsxs(\"tr\", {\n          children: [/*#__PURE__*/_jsx(\"th\", {\n            children: \"Name\"\n          }), /*#__PURE__*/_jsx(\"th\", {\n            children: \"Image\"\n          }), /*#__PURE__*/_jsx(\"th\", {\n            children: \"M-Type\"\n          }), /*#__PURE__*/_jsx(\"th\", {\n            children: \"Contribution\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"tbody\", {\n        children: morphologies.map(function (morph) {\n          return /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"td\", {\n              className: \"text-capitalize\",\n              children: morph.name\n            }), /*#__PURE__*/_jsx(\"td\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: styles.morphImageContainer,\n                children: /*#__PURE__*/_jsx(ImageViewer, {\n                  src: \"\".concat(basePath, \"/assets/images/exp-morph-images/\").concat(morph.name, \".jpeg\"),\n                  alt: \"Morphology \".concat(morph.name, \" image\"),\n                  loading: \"lazy\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: morph.annotation.hasBody.label\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: agentMap && entryToArray(morph.contribution).map(function (contribution) {\n                return agentMap[contribution.agent['@id']];\n              }).sort(function (a1, a2) {\n                return a1.type > a2.type ? 1 : -1;\n              }).map(function (agent) {\n                return /*#__PURE__*/_jsxs(\"span\", {\n                  children: [agent.label, \" \", /*#__PURE__*/_jsx(\"br\", {})]\n                }, agent.label);\n              })\n            })]\n          }, morph.name);\n        })\n      })]\n    })\n  });\n};\n\nexport default ExpMorphologyTable;","var nexusEntities = ['orgs', 'projects', 'acls', 'views', 'resources', 'files'];\nvar nexusUrlR = new RegExp(['^', '(https?://.+)', // nexus deployment\n'/', \"(\".concat(nexusEntities.join('|'), \")\"), // entity type\n'/', '([^/]+)', // org\n'/', '([^/]+)', // proj\n'/?', '([^/]+)?', // schema [optional]\n'/?', '([^/]+)?', // id [optional]\n'/?', '$'].join(''));\n/**\n * @author pgetta\n * With given Nexus URL (might be self/project/id url), return it's:\n * * deployment URL\n * * entity type\n * * org label\n * * project label\n * * id\n *\n * @param nexusUrl\n */\n\nexport var parseUrl = function parseUrl(nexusUrl) {\n  if (!nexusUrl) throw new Error('selfUrl should be defined');\n  var mulEntityTypeR = new RegExp(\"(\".concat(nexusEntities.join('|'), \")\"), 'g');\n  var mulEntityTypeMatch = nexusUrl.match(mulEntityTypeR);\n\n  if (mulEntityTypeMatch && mulEntityTypeMatch.length > 1) {\n    throw new Error('Url contains multiple entity types which is not supported');\n  }\n\n  var matches = nexusUrl.match(nexusUrlR);\n\n  if (!matches || matches.length <= 5) {\n    throw new Error('Error while parsing selfUrl');\n  }\n\n  return {\n    deployment: matches[1],\n    entityType: matches[2].slice(0, -1),\n    org: matches[3],\n    project: matches[4],\n    schema: matches[5],\n    id: matches[6]\n  };\n};","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/getta/dev/portals/hippocampus-model-portal/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { useNexusContext } from '@bbp/react-nexus';\nimport { saveAs } from 'file-saver';\nimport { Button } from 'antd';\nimport { parseUrl } from '../../utils';\n\nvar NexusFileDownloadButton = function NexusFileDownloadButton(_ref) {\n  var filename = _ref.filename,\n      url = _ref.url,\n      org = _ref.org,\n      project = _ref.project,\n      children = _ref.children,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className;\n  var nexus = useNexusContext();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var download = function download() {\n    setLoading(true);\n\n    var _parseUrl$org$project = _objectSpread(_objectSpread({}, parseUrl(url)), {\n      org: org,\n      project: project\n    }),\n        fileOrg = _parseUrl$org$project.org,\n        fileProject = _parseUrl$org$project.project;\n\n    var fileId = url.split('/').reverse()[0];\n    nexus.File.get(fileOrg, fileProject, fileId, {\n      as: 'blob'\n    }).then(function (imageData) {\n      return saveAs(imageData, filename);\n    })[\"catch\"](console.error)[\"finally\"](function () {\n      return setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsx(Button, {\n    className: className,\n    type: \"primary\",\n    size: \"small\",\n    onClick: download,\n    loading: loading,\n    children: children\n  });\n};\n\nexport default NexusFileDownloadButton;","import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/getta/dev/portals/hippocampus-model-portal/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useNexusContext } from '@bbp/react-nexus';\nimport ESData from '../../components/ESData';\nimport DataContainer from '../../components/DataContainer';\nimport LayerSelector from '../../components/LayerSelector';\nimport { morphologyDataQuery, mtypeExpMorphologyListDataQuery } from '../../queries/es';\nimport Filters from '../../layouts/Filters';\nimport Title from '../../components/Title';\nimport InfoBox from '../../components/InfoBox';\nimport NexusPlugin from '../../components/NexusPlugin';\nimport { colorName } from './config';\nimport Collapsible from '../../components/Collapsible';\nimport List from '../../components/List';\nimport morphologies from '../../exp-morphology-list.json';\nimport ExpMorphologyFactsheet from '../../components/ExpMorphologyFactsheet';\nimport ExpMorphologyTable from '../../components/ExpMorphologyTable';\nimport NexusFileDownloadButton from '../../components/NexusFileDownloadButton';\nimport { hippocampus } from '../../config';\nimport styles from '../../styles/experimental-data/neuron-morphology.module.scss';\n\nvar NeuronExperimentalMorphology = function NeuronExperimentalMorphology() {\n  var router = useRouter();\n  var nexus = useNexusContext();\n\n  var query = _objectSpread({}, router.query);\n\n  var setQuery = function setQuery(query) {\n    router.push({\n      query: query,\n      pathname: router.pathname\n    }, undefined, {\n      shallow: true\n    });\n  };\n\n  var setLayer = function setLayer(layer) {\n    setQuery({\n      layer: layer,\n      mtype: null,\n      instance: null\n    });\n  };\n\n  var currentLayer = query.layer;\n  var mtypes = currentLayer ? Array.from(new Set(morphologies.filter(function (m) {\n    return m.region === currentLayer;\n  }).map(function (m) {\n    return m.mtype;\n  }))).sort() : [];\n\n  var setMtype = function setMtype(mtype) {\n    setQuery({\n      mtype: mtype,\n      layer: currentLayer,\n      instance: null\n    });\n  };\n\n  var currentMtype = query.mtype;\n  var instances = currentMtype ? morphologies.filter(function (m) {\n    return m.mtype === currentMtype;\n  }).map(function (m) {\n    return m.name;\n  }).sort() : [];\n\n  var setInstance = function setInstance(instance) {\n    setQuery({\n      instance: instance,\n      layer: currentLayer,\n      mtype: currentMtype\n    });\n  };\n\n  var currentInstance = query.instance;\n\n  var getMorphologyDistribution = function getMorphologyDistribution(morphologyResource) {\n    return morphologyResource.distribution.find(function (d) {\n      return d.name.match(/\\.asc$/i);\n    });\n  };\n\n  var getAndSortMorphologies = function getAndSortMorphologies(esDocuments) {\n    return esDocuments.map(function (esDocument) {\n      return esDocument._source;\n    }).sort(function (m1, m2) {\n      return m1.name > m2.name ? 1 : -1;\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Filters, {\n      backgroundAlt: true,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row bottom-xs w-100\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-xs-12 col-lg-6\",\n          children: [/*#__PURE__*/_jsx(Title, {\n            primaryColor: colorName,\n            title: /*#__PURE__*/_jsxs(\"span\", {\n              children: [\"Neuronal \", /*#__PURE__*/_jsx(\"br\", {}), \" Morphology\"]\n            }),\n            subtitle: \"Experimental Data\"\n          }), /*#__PURE__*/_jsx(InfoBox, {\n            color: \"grey-1\",\n            text: \"We classified neuronal morphologies in different morphological types (m-types) and created digital 3D reconstructions. Using objective classification methods, we have identified 12 m-types in rat hippocampus CA1.\"\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-xs-12 col-lg-6\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.selector,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: styles.selectorColumn,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.selectorHead,\n                children: \"1. Choose a layer\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.selectorBody,\n                children: /*#__PURE__*/_jsx(LayerSelector, {\n                  activeLayer: currentLayer,\n                  onLayerSelected: setLayer\n                })\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.selectorColumn,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.selectorHead,\n                children: \"2. Select reconstruction\"\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.selectorBody,\n                children: [/*#__PURE__*/_jsx(List, {\n                  list: mtypes,\n                  value: currentMtype,\n                  title: \"m-type\",\n                  color: colorName,\n                  onSelect: setMtype\n                }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(List, {\n                  list: instances,\n                  value: currentInstance,\n                  title: \"Reconstructed morphology\",\n                  color: colorName,\n                  onSelect: setInstance,\n                  anchor: \"data\"\n                })]\n              })]\n            })]\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      id: \"data\"\n    }), !!currentInstance && /*#__PURE__*/_jsxs(DataContainer, {\n      children: [/*#__PURE__*/_jsxs(Collapsible, {\n        title: \"Population\",\n        children: [/*#__PURE__*/_jsx(\"h3\", {\n          children: \"Reconstructed morphologies\"\n        }), /*#__PURE__*/_jsx(ESData, {\n          query: mtypeExpMorphologyListDataQuery(currentMtype),\n          children: function children(esDocuments) {\n            return /*#__PURE__*/_jsx(_Fragment, {\n              children: !!esDocuments && /*#__PURE__*/_jsx(ExpMorphologyTable, {\n                morphologies: getAndSortMorphologies(esDocuments)\n              })\n            });\n          }\n        })]\n      }), /*#__PURE__*/_jsxs(Collapsible, {\n        className: \"mt-4 mb-4\",\n        title: \"Neuron Morphology \".concat(currentMtype, \" \").concat(currentInstance),\n        children: [/*#__PURE__*/_jsx(ExpMorphologyFactsheet, {\n          morphologyName: currentInstance\n        }), /*#__PURE__*/_jsx(ESData, {\n          query: morphologyDataQuery(currentMtype, currentInstance),\n          children: function children(esDocuments) {\n            return /*#__PURE__*/_jsxs(_Fragment, {\n              children: [!!esDocuments && !!esDocuments.length && /*#__PURE__*/_jsx(\"div\", {\n                className: \"text-right\",\n                children: /*#__PURE__*/_jsx(NexusFileDownloadButton, {\n                  className: \"mt-2\",\n                  filename: getMorphologyDistribution(esDocuments[0]._source).name,\n                  url: getMorphologyDistribution(esDocuments[0]._source).contentUrl,\n                  org: hippocampus.org,\n                  project: hippocampus.project,\n                  children: \"Download morphology\"\n                })\n              }), !!esDocuments && !!esDocuments.length && /*#__PURE__*/_jsx(NexusPlugin, {\n                className: \"mt-3\",\n                name: \"neuron-morphology\",\n                resource: esDocuments[0]._source,\n                nexusClient: nexus\n              })]\n            });\n          }\n        })]\n      })]\n    })]\n  });\n};\n\nexport default NeuronExperimentalMorphology;","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport MainLayout from '../../layouts/MainLayout';\nimport NeuronMorphologyView from '../../views/experimental/NeuronMorphology';\nexport default function About() {\n  return /*#__PURE__*/_jsx(MainLayout, {\n    children: /*#__PURE__*/_jsx(NeuronMorphologyView, {})\n  });\n}\n;","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","// extracted by mini-css-extract-plugin\nmodule.exports = {\"morphImageContainer\":\"styles_morphImageContainer__1PM2z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selector\":\"neuron-morphology_selector__2Hh7F\",\"selectorColumn\":\"neuron-morphology_selectorColumn__1ltHl\",\"selectorHead\":\"neuron-morphology_selectorHead__3ZykT\",\"selectorBody\":\"neuron-morphology_selectorBody__Gr9_a\"};","\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/experimental-data/neuronal-morphology\",\n        function () {\n          return require(\"private-next-pages/experimental-data/neuronal-morphology.tsx\");\n        }\n      ]);\n    "],"sourceRoot":""}