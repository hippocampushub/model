{"version":3,"sources":["webpack://_N_E/./src/styles/experimental-data/neuron-electrophysiology.module.scss","webpack://_N_E/./src/components/ExpTraceTable/index.tsx","webpack://_N_E/./src/views/experimental/NeuronElectrophysiology.tsx","webpack://_N_E/./src/pages/experimental-data/neuronal-electrophysiology.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?6d36"],"names":["module","exports","entryToArray","entry","Array","isArray","getAgentLabel","agent","name","concat","givenName","familyName","getAgentType","_ref","_ref$traces","traces","nexus","agentIds","reduce","ids","trace","currIds","contribution","map","_contribution$agent","filter","Boolean","from","Set","_useState","agentMap","setAgentMap","length","contributionEsQuery","size","query","terms","View","elasticSearchQuery","org","project","datasetViewId","then","data","hits","esDocuments","esDocument","_source","agents","id","label","type","className","children","annotation","hasBody","sort","a1","a2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","router","target","i","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","setQuery","pathname","undefined","shallow","currentEtype","etype","currentInstance","etype_instance","etypes","instances","getAndSortTraces","m1","m2","Filters","backgroundAlt","Title","primaryColor","title","subtitle","InfoBox","color","text","selector","selectorHead","selectorBody","List","list","value","onSelect","instance","anchor","DataContainer","Collapsible","ESData","NexusPlugin","resource","nexusClient","About","MainLayout","window","__NEXT_P"],"mappings":"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","file":"static/chunks/pages/experimental-data/neuronal-electrophysiology-74426fffe2b7409cd169.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selector\":\"neuron-electrophysiology_selector__1wLqj\",\"selectorColumn\":\"neuron-electrophysiology_selectorColumn__37KZ_\",\"selectorHead\":\"neuron-electrophysiology_selectorHead__3N8Kc\",\"selectorBody\":\"neuron-electrophysiology_selectorBody__35I10\"};","import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"/Users/getta/dev/portals/hippocampus-model-portal/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useState, useEffect } from 'react';\nimport { keyBy } from 'lodash';\nimport { useNexusContext } from '@bbp/react-nexus';\nimport { hippocampus } from '../../config';\n\nfunction entryToArray(entry) {\n  if (Array.isArray(entry)) return entry;\n  return [entry];\n}\n\nfunction getAgentLabel(agent) {\n  return agent.name ? agent.name : \"\".concat(agent.givenName, \" \").concat(agent.familyName);\n}\n\nfunction getAgentType(agent) {\n  return agent.name ? 'institution' : 'person';\n}\n\nvar ExpTraceTable = function ExpTraceTable(_ref) {\n  var _ref$traces = _ref.traces,\n      traces = _ref$traces === void 0 ? [] : _ref$traces;\n  var nexus = useNexusContext();\n  var agentIds = traces.reduce(function (ids, trace) {\n    var currIds = entryToArray(trace.contribution).map(function (contribution) {\n      var _contribution$agent;\n\n      return (_contribution$agent = contribution.agent) === null || _contribution$agent === void 0 ? void 0 : _contribution$agent['@id'];\n    }).filter(Boolean);\n    return Array.from(new Set([].concat(_toConsumableArray(ids), _toConsumableArray(currIds))));\n  }, []);\n\n  var _useState = useState(null),\n      agentMap = _useState[0],\n      setAgentMap = _useState[1];\n\n  useEffect(function () {\n    if (!agentIds.length) return;\n    var contributionEsQuery = {\n      from: 0,\n      size: 100,\n      query: {\n        terms: {\n          '_id': agentIds\n        }\n      }\n    };\n    nexus.View // query ElesticSearch endpoint to get agents by their ids\n    .elasticSearchQuery(hippocampus.org, hippocampus.project, hippocampus.datasetViewId, contributionEsQuery) // extract ES documents\n    .then(function (data) {\n      return data.hits.hits;\n    }) // extract Nexus original documents\n    .then(function (esDocuments) {\n      return esDocuments.map(function (esDocument) {\n        return esDocument._source;\n      });\n    }) // pick only agent ids and labels\n    .then(function (agents) {\n      return agents.map(function (agent) {\n        return {\n          id: agent['@id'],\n          label: getAgentLabel(agent),\n          type: getAgentType(agent)\n        };\n      });\n    }) // create a map of agents of type Record<id, label>\n    .then(function (agents) {\n      return keyBy(agents, 'id');\n    }).then(function (agentMap) {\n      return setAgentMap(agentMap);\n    });\n  }, [traces]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"layer-anatomy-summary__basis mt-2\",\n    children: /*#__PURE__*/_jsxs(\"table\", {\n      children: [/*#__PURE__*/_jsx(\"thead\", {\n        children: /*#__PURE__*/_jsxs(\"tr\", {\n          children: [/*#__PURE__*/_jsx(\"th\", {\n            children: \"Name\"\n          }), /*#__PURE__*/_jsx(\"th\", {\n            children: \"E-Type\"\n          }), /*#__PURE__*/_jsx(\"th\", {\n            children: \"Contribution\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"tbody\", {\n        children: traces.map(function (trace) {\n          return /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"td\", {\n              className: \"text-capitalize\",\n              children: trace.name\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: trace.annotation.hasBody.label\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: agentMap && entryToArray(trace.contribution).map(function (contribution) {\n                return agentMap[contribution.agent['@id']];\n              }).sort(function (a1, a2) {\n                return a1.type > a2.type ? 1 : -1;\n              }).map(function (agent) {\n                return /*#__PURE__*/_jsxs(\"span\", {\n                  children: [agent.label, \" \", /*#__PURE__*/_jsx(\"br\", {})]\n                }, agent.label);\n              })\n            })]\n          }, trace.name);\n        })\n      })]\n    })\n  });\n};\n\nexport default ExpTraceTable;","import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/getta/dev/portals/hippocampus-model-portal/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useNexusContext } from '@bbp/react-nexus';\nimport ESData from '../../components/ESData';\nimport DataContainer from '../../components/DataContainer';\nimport NexusPlugin from '../../components/NexusPlugin';\nimport { electroPhysiologyDataQuery, etypeTracesDataQuery } from '../../queries/es';\nimport Filters from '../../layouts/Filters';\nimport Title from '../../components/Title';\nimport InfoBox from '../../components/InfoBox';\nimport { colorName } from './config';\nimport List from '../../components/List';\nimport Collapsible from '../../components/Collapsible';\nimport ExpTraceTable from '../../components/ExpTraceTable';\nimport traces from '../../traces.json';\nimport styles from '../../styles/experimental-data/neuron-electrophysiology.module.scss';\n\nvar NeuronElectrophysiology = function NeuronElectrophysiology() {\n  var router = useRouter();\n  var nexus = useNexusContext();\n\n  var query = _objectSpread({}, router.query);\n\n  var setQuery = function setQuery(query) {\n    router.push({\n      query: query,\n      pathname: router.pathname\n    }, undefined, {\n      shallow: true\n    });\n  };\n\n  var setEtype = function setEtype(etype) {\n    setQuery({\n      etype: etype,\n      etype_instance: currentInstance\n    });\n  };\n\n  var setInstance = function setInstance(instance) {\n    setQuery({\n      etype: currentEtype,\n      etype_instance: instance\n    });\n  };\n\n  var currentEtype = query.etype;\n  var currentInstance = query.etype_instance;\n  var etypes = Object.keys(traces).sort();\n  var instances = currentEtype ? traces[currentEtype].sort() : [];\n\n  var getAndSortTraces = function getAndSortTraces(esDocuments) {\n    return esDocuments.map(function (esDocument) {\n      return esDocument._source;\n    }).sort(function (m1, m2) {\n      return m1.name > m2.name ? 1 : -1;\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Filters, {\n      backgroundAlt: true,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row bottom-xs w-100\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-xs-12 col-lg-6\",\n          children: [/*#__PURE__*/_jsx(Title, {\n            primaryColor: colorName,\n            title: /*#__PURE__*/_jsxs(\"span\", {\n              children: [\"Neuron \", /*#__PURE__*/_jsx(\"br\", {}), \" Electrophysiology\"]\n            }),\n            subtitle: \"Experimental Data\"\n          }), /*#__PURE__*/_jsx(InfoBox, {\n            color: \"grey-1\",\n            text: \"We recorded electrical traces from neurons using single-cell recording experiments in brain slices. Then, we classified the traces in different electrical types (e-types) based on their firing patterns. We have identified one e-type for excitatory cells and four e-types for inhibitory cells.\"\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-xs-12 col-lg-4 col-lg-offset-1\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.selector,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.selectorHead,\n              children: \"Select cell type\"\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.selectorBody,\n              children: [/*#__PURE__*/_jsx(List, {\n                list: etypes,\n                value: currentEtype,\n                title: \"e-type\",\n                color: colorName,\n                onSelect: setEtype\n              }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(List, {\n                list: instances,\n                value: currentInstance,\n                title: \"Experiment instance (\".concat(instances.length, \")\"),\n                color: colorName,\n                onSelect: setInstance,\n                anchor: \"data\"\n              })]\n            })]\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      id: \"data\"\n    }), !!currentEtype && !!currentInstance && /*#__PURE__*/_jsxs(DataContainer, {\n      children: [/*#__PURE__*/_jsx(Collapsible, {\n        title: \"Electrophysiological Recordings for \".concat(currentEtype, \"_\").concat(currentInstance),\n        children: /*#__PURE__*/_jsx(ESData, {\n          query: electroPhysiologyDataQuery(currentEtype, currentInstance),\n          children: function children(esDocuments) {\n            return /*#__PURE__*/_jsx(_Fragment, {\n              children: !!esDocuments && !!esDocuments.length && /*#__PURE__*/_jsx(NexusPlugin, {\n                name: \"neuron-electrophysiology\",\n                resource: esDocuments[0]._source,\n                nexusClient: nexus\n              })\n            });\n          }\n        })\n      }), /*#__PURE__*/_jsxs(Collapsible, {\n        title: \"Population\",\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsx(\"h3\", {\n          className: \"mt-3\",\n          children: \"Experimental instances\"\n        }), /*#__PURE__*/_jsx(ESData, {\n          query: etypeTracesDataQuery(currentEtype),\n          children: function children(esDocuments) {\n            return /*#__PURE__*/_jsx(_Fragment, {\n              children: !!esDocuments && /*#__PURE__*/_jsx(ExpTraceTable, {\n                traces: getAndSortTraces(esDocuments)\n              })\n            });\n          }\n        })]\n      })]\n    })]\n  });\n};\n\nexport default NeuronElectrophysiology;","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport MainLayout from '../../layouts/MainLayout';\nimport NeuronEphysView from '../../views/experimental/NeuronElectrophysiology';\nexport default function About() {\n  return /*#__PURE__*/_jsx(MainLayout, {\n    children: /*#__PURE__*/_jsx(NeuronEphysView, {})\n  });\n}\n;","\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/experimental-data/neuronal-electrophysiology\",\n        function () {\n          return require(\"private-next-pages/experimental-data/neuronal-electrophysiology.tsx\");\n        }\n      ]);\n    "],"sourceRoot":""}