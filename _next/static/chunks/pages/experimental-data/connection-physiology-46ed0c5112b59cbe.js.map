{"version":3,"file":"static/chunks/pages/experimental-data/connection-physiology-46ed0c5112b59cbe.js","mappings":"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","sources":["webpack://_N_E/?baf0","webpack://_N_E/./src/components/NumberFormat/index.tsx","webpack://_N_E/./src/components/ResponsiveTable/index.tsx","webpack://_N_E/./src/components/StickyContainer/index.tsx","webpack://_N_E/./src/components/Term/index.tsx","webpack://_N_E/./src/views/1_experimental-data/connection-physiology/ConductanceModelSection.tsx","webpack://_N_E/./src/views/1_experimental-data/connection-physiology/AMPAKineticsSection.tsx","webpack://_N_E/./src/views/1_experimental-data/connection-physiology/NMDAKineticsSection.tsx","webpack://_N_E/./src/views/1_experimental-data/ConnectionPhysiology.tsx","webpack://_N_E/./src/pages/experimental-data/connection-physiology.tsx","webpack://_N_E/./src/terms.tsx","webpack://_N_E/./src/views/1_experimental-data/config.ts","webpack://_N_E/./src/components/ResponsiveTable/styles.module.scss","webpack://_N_E/./src/components/StickyContainer/styles.module.scss","webpack://_N_E/./src/components/Term/styles.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/experimental-data/connection-physiology\",\n      function () {\n        return require(\"private-next-pages/experimental-data/connection-physiology.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/experimental-data/connection-physiology\"])\n      });\n    }\n  ","import React from 'react';\n\n\ntype NumberFormatProps = {\n  value?: any;\n  significantFigures?: number;\n  thousandSeparator?: boolean;\n  prefix?: string;\n  suffix?: string;\n};\n\nexport function formatNumber(value, significantFigures = 5, thousandSeparator = true, prefix = '', suffix = '') {\n  const num = parseFloat(value);\n\n  if (!Number.isFinite(num)) return value;\n\n  const formatted = thousandSeparator\n    ? num.toLocaleString('en', { maximumSignificantDigits: significantFigures })\n    : num.toPrecision(significantFigures);\n\n  return `${prefix}${formatted}${suffix}`;\n}\n\nconst NumberFormat: React.FC<NumberFormatProps> = ({\n  value,\n  significantFigures = 5,\n  thousandSeparator = true,\n  prefix = '',\n  suffix = '',\n}) => {\n  return formatNumber(value, significantFigures, thousandSeparator, prefix, suffix);\n}\n\n\nexport default NumberFormat;\n","import React, { useEffect, useState } from 'react';\nimport { Table } from 'antd';\nimport { ColumnType as AntColumnType, ColumnGroupType as AntColumnGroupType, TableProps } from 'antd/lib/table';\nimport { Breakpoint } from 'antd/lib/_util/responsiveObserve';\n\nimport classes from './styles.module.scss';\n\ninterface ColumnType<Type extends object & { isHighlight?: boolean }> extends Omit<AntColumnType<Type>, 'dataIndex'> {\n  dataIndex?: keyof Type;\n}\ninterface GroupColumnType<Type extends object & { isHighlight?: boolean }> extends AntColumnGroupType<Type> { }\n\ninterface ResponsiveTableProps<Type extends object & { isHighlight?: boolean }> extends Omit<TableProps<Type>, 'columns'> {\n  data?: Type[];\n  columns: (ColumnType<Type> | GroupColumnType<Type>)[] | any;\n}\n\nconst renderHighlightValue = (record) => (nestedValue, _value) =>\n  highlightValue(nestedValue, record.isHighlight);\n\nconst highlightValue = (nestedValue, isHighlight) =>\n  isHighlight ? <div className=\"text-bold\">{nestedValue}</div> : nestedValue;\n\n// Utility function to calculate the width of text\nfunction calculateTextWidth(text: string, font: string = '16px Arial'): number {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  if (context) {\n    context.font = font;\n    return context.measureText(text).width;\n  }\n  return 0;\n}\n\nfunction ResponsiveTable<Type extends object & { isHighlight?: boolean }>({\n  columns,\n  data = [], // Provide a default value of an empty array\n  ...restProps\n}: ResponsiveTableProps<Type>) {\n  const [columnWidths, setColumnWidths] = useState<number[]>([]);\n  const font = '14px Arial'; // Set the font to match your table\n\n  useEffect(() => {\n    const newColumnWidths = columns.map((column) => {\n      const maxTextWidth = data.reduce((max, record) => {\n        const dataIndex = (column as ColumnType<Type>).dataIndex;\n        if (dataIndex && record[dataIndex] !== undefined) {\n          const text = String(record[dataIndex]);\n          const textWidth = calculateTextWidth(text, font);\n          return Math.max(max, textWidth);\n        }\n        return max;\n      }, 0);\n      return Math.min(maxTextWidth + 20, 200); // Add some padding and a max limit\n    });\n\n    setColumnWidths(newColumnWidths);\n  }, [columns, data]);\n\n  const expandableColumn = {\n    title: null,\n    dataIndex: null,\n    render: (_value, record, index) => {\n      const nestedTableData = columns\n        .map((column) => {\n          const dataIndex = (column as ColumnType<Type>).dataIndex;\n          if (dataIndex) {\n            return {\n              key: column.title,\n              value: record[dataIndex],\n            };\n          }\n\n          const children = (column as GroupColumnType<Type>).children;\n          if (children) {\n            const childrenValue = children.map((child) => (\n              <div key={child.key}>\n                {child.title}: {record[(child as ColumnType<Type>).dataIndex]}\n              </div>\n            ));\n            return {\n              key: column.title,\n              value: childrenValue,\n            };\n          }\n\n          return null;\n        })\n        .filter((item) => item !== null); // Filter out null values\n\n      const nestedColumns: ColumnType<{ key: any; value: any }>[] = [\n        {\n          dataIndex: 'key',\n          title: 'Field',\n          render: renderHighlightValue(record),\n        },\n        {\n          dataIndex: 'value',\n          title: 'Value',\n          render: renderHighlightValue(record),\n        },\n      ];\n\n      return (\n        <Table\n          className=\"responsiveTable no-left-margin nested-table xs-column\"\n          rowClassName={index % 2 ? classes.responsiveTablEven : classes.responsiveTablOdd}\n          rowKey={(record: any, index) => `${record.key}__${index}`}\n          showHeader={false}\n          columns={nestedColumns}\n          tableLayout=\"auto\" // Use auto layout for nested table as well\n          dataSource={nestedTableData as object[]} // Ensure dataSource does not contain null values\n          pagination={false}\n        />\n      );\n    },\n    responsive: ['xs' as Breakpoint],\n  };\n\n  const tableColumns = columns\n    .map((column, index) => ({\n      ...column,\n      title: column.title,\n      dataIndex: (column as ColumnType<Type>).dataIndex,\n      responsive: ['sm' as Breakpoint],\n      render: (value: any, record: Type, index: number) =>\n        highlightValue(column.render ? column.render(value, record, index) : value, record.isHighlight),\n      children: (column as GroupColumnType<Type>).children?.map((child) => ({\n        render: (value: any, record: Type) => highlightValue(value, record.isHighlight),\n        ...child,\n      })),\n      width: column.key === 'yourSpecificKey' ? columnWidths[index] : undefined, // Set width dynamically for a specific column\n    }))\n    .concat(expandableColumn as any);\n\n  const { className = '' } = restProps;\n\n  return (\n    <Table<Type>\n      bordered\n      size=\"small\"\n      scroll={{ x: true }}\n      rowKey={(record: any) => record.key || `${record.dataIndex}__`}\n      pagination={false}\n      columns={tableColumns}\n      dataSource={data}\n      rowClassName={(record: Type, index: number) => (index % 2 ? classes.responsiveTablEven : classes.responsiveTablOdd)}\n      {...restProps}\n      className={`responsiveTable no-left-margin nested-table xs-column text-nowrap ${className}`}\n      tableLayout=\"auto\" // Ensure layout is auto for dynamic column sizing\n    />\n  );\n}\n\nexport default ResponsiveTable;","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\ninterface StickyContainerProps {\n  centered?: boolean;\n  children: React.ReactNode;\n}\n\nconst StickyContainer: React.FC<StickyContainerProps> = ({ centered, children }) => (\n  <div className={styles.flexWrapper}>\n    <div className={classNames(styles.container, centered ? styles['container--centered'] : '')}>\n      {children}\n    </div>\n  </div >\n);\n\nexport default StickyContainer;","import React from 'react';\nimport { Tooltip } from 'antd';\n\nimport { TermDescription } from '@/terms';\n\nimport style from './styles.module.scss';\n\ntype TermProps = {\n  term: string;\n  description?: any;\n  className?: string;\n};\n\ntype TermFormatter = (term: string) => string;\n\nexport const termFactory = (termDescription: TermDescription = {}, termFormatter?: TermFormatter) => {\n  const Term: React.FC<TermProps> = ({ className, term, description }) => {\n    const currentDescription = description || termDescription[term];\n    const formattedTerm = termFormatter\n      ? termFormatter(term)\n      : term;\n\n    if (!currentDescription) {\n      return (<span className={className}>{formattedTerm}</span>);\n    }\n\n    return (\n      <Tooltip title={currentDescription} destroyTooltipOnHide={true}>\n        <span className={`${style.container} ${className ?? ''}`}>{formattedTerm}</span>\n      </Tooltip>\n    );\n  };\n\n  return Term;\n};\n","import React, { useState, useEffect } from 'react';\nimport ResponsiveTable from '@/components/ResponsiveTable';\nimport NumberFormat from '@/components/NumberFormat';\nimport TextWithRefs from '@/components/TextWithRefs';\nimport { downloadAsJson } from '@/utils';\nimport { mtypeDescription } from '@/terms';\nimport { termFactory } from '@/components/Term';\nimport DownloadButton from '@/components/DownloadButton';\nimport { dataPath } from '@/config';\n\ntype TableEntry = {\n  from: string;\n  to: string;\n  mean: number;\n  sd?: number;\n  sem?: number;\n  species: string;\n  age: string;\n  weight?: string;\n  region: string;\n  nCells?: number;\n  ref: string;\n  ref_link?: string;\n};\n\ntype DOIIndex = {\n  [key: string]: string;\n};\n\nconst Term = termFactory(mtypeDescription);\n\nconst ReversalPotentialColumns = [\n  {\n    title: 'From',\n    dataIndex: 'from' as keyof TableEntry,\n    render: from => (<Term term={from} />),\n  },\n  {\n    title: 'To',\n    dataIndex: 'to' as keyof TableEntry,\n    render: to => (<Term term={to} />),\n  },\n  {\n    title: 'Mean, mV',\n    dataIndex: 'mean' as keyof TableEntry,\n    render: (mean) => <NumberFormat value={mean} />\n  },\n  {\n    title: 'Species',\n    dataIndex: 'species' as keyof TableEntry,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age' as keyof TableEntry,\n  },\n  {\n    title: 'Weight',\n    dataIndex: 'weight' as keyof TableEntry,\n  },\n  {\n    title: 'Region',\n    dataIndex: 'region' as keyof TableEntry,\n  },\n  {\n    title: (<span>Reference<sup>*</sup></span>),\n    dataIndex: 'ref' as keyof TableEntry,\n    render: (text, record) =>\n      record.ref_link ? (\n        <a href={record.ref_link} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>\n      ) : (\n        text\n      ),\n  },\n];\n\nconst PSPAmplitudeColumns = [\n  {\n    title: 'From',\n    dataIndex: 'from' as keyof TableEntry,\n    render: from => (<Term term={from} />),\n  },\n  {\n    title: 'To',\n    dataIndex: 'to' as keyof TableEntry,\n    render: to => (<Term term={to} />),\n  },\n  {\n    title: 'Mean, mV',\n    dataIndex: 'mean' as keyof TableEntry,\n    render: (mean) => <NumberFormat value={mean} />\n  },\n  {\n    title: 'SD, mV',\n    dataIndex: 'sd' as keyof TableEntry,\n    render: (sd) => <NumberFormat value={sd} />\n  },\n  {\n    title: 'SEM, mV',\n    dataIndex: 'sem' as keyof TableEntry,\n    render: (sem) => <NumberFormat value={sem} />\n  },\n  {\n    title: 'Species',\n    dataIndex: 'species' as keyof TableEntry,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age' as keyof TableEntry,\n  },\n  {\n    title: 'Weight',\n    dataIndex: 'weight' as keyof TableEntry,\n  },\n  {\n    title: 'Region',\n    dataIndex: 'region' as keyof TableEntry,\n  },\n  {\n    title: 'N cells',\n    dataIndex: 'nCells' as keyof TableEntry,\n  },\n  {\n    title: 'Reference',\n    dataIndex: 'ref' as keyof TableEntry,\n    render: (text, record) =>\n      record.ref_link ? (\n        <a href={record.ref_link} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>\n      ) : (\n        text\n      ),\n  },\n];\n\nconst PSCAmplitudeColumns = [\n  {\n    title: 'From',\n    dataIndex: 'from' as keyof TableEntry,\n    render: from => (<Term term={from} />),\n  },\n  {\n    title: 'To',\n    dataIndex: 'to' as keyof TableEntry,\n    render: to => (<Term term={to} />),\n  },\n  {\n    title: 'Mean, pA',\n    dataIndex: 'mean' as keyof TableEntry,\n    render: (mean) => <NumberFormat value={mean} />\n  },\n  {\n    title: 'SD, pA',\n    dataIndex: 'sd' as keyof TableEntry,\n    render: (sd) => <NumberFormat value={sd} />\n  },\n  {\n    title: 'SEM, pA',\n    dataIndex: 'sem' as keyof TableEntry,\n    render: (sem) => <NumberFormat value={sem} />\n  },\n  {\n    title: 'Species',\n    dataIndex: 'species' as keyof TableEntry,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age' as keyof TableEntry,\n  },\n  {\n    title: 'Weight',\n    dataIndex: 'weight' as keyof TableEntry,\n  },\n  {\n    title: 'Region',\n    dataIndex: 'region' as keyof TableEntry,\n  },\n  {\n    title: 'N cells',\n    dataIndex: 'nCells' as keyof TableEntry,\n  },\n  {\n    title: 'Reference',\n    dataIndex: 'ref' as keyof TableEntry,\n    render: (text, record) =>\n      record.ref_link ? (\n        <a href={record.ref_link} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>\n      ) : (\n        text\n      ),\n  },\n];\n\ntype ConductanceModelSectionProps = {\n  theme?: number;\n}\n\nconst ConductanceModelSection: React.FC<ConductanceModelSectionProps> = ({ theme }) => {\n  const [reversalPotentialData, setReversalPotentialData] = useState<TableEntry[]>([]);\n  const [PSPAmplitudeData, setPSPAmplitudeData] = useState<TableEntry[]>([]);\n  const [PSCAmplitudeData, setPSCAmplitudeData] = useState<TableEntry[]>([]);\n\n  useEffect(() => {\n    fetch(`${dataPath}/1_experimental-data/connection-physiology/conductance_model_-_reversal_potential.json`)\n      .then(response => response.json())\n      .then(data => setReversalPotentialData(data));\n\n    fetch(`${dataPath}/1_experimental-data/connection-physiology/conductance_model_-_psp_amplitude.json`)\n      .then(response => response.json())\n      .then(data => setPSPAmplitudeData(data));\n\n    fetch(`${dataPath}/1_experimental-data/connection-physiology/conductance_model_-_psc_amplitude.json`)\n      .then(response => response.json())\n      .then(data => setPSCAmplitudeData(data));\n  }, []);\n\n  return (\n    <>\n      <h3 className=\"text-lg mb-2 mt-4\">Reversal potential</h3>\n      <ResponsiveTable<TableEntry>\n        data={reversalPotentialData}\n        columns={ReversalPotentialColumns}\n        rowKey={({ from, to, mean }) => `${from}_${to}_${mean}`}\n      />\n      <div className=\"mt-3\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(reversalPotentialData, `Reversal-Potential-Data.json`)}\n        >\n          Reversal potential Data\n        </DownloadButton>\n      </div>\n\n      <h2 className=\"text-lg mb-2 mt-12\">PSP amplitude</h2>\n      <ResponsiveTable<TableEntry>\n        data={PSPAmplitudeData}\n        columns={PSPAmplitudeColumns}\n        rowKey={({ from, to, mean }) => `${from}_${to}_${mean}`}\n      />\n      <div className=\"mt-4\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(PSPAmplitudeData, `PSP-Amplitude-Data.json`)}\n        >\n          PSP amplitude\n        </DownloadButton>\n      </div>\n\n      <h3 className=\"text-lg mb-2 mt-12\">PSC amplitude</h3>\n      <ResponsiveTable<TableEntry>\n        data={PSCAmplitudeData}\n        columns={PSCAmplitudeColumns}\n        rowKey={({ from, to, mean }) => `${from}_${to}_${mean}`}\n      />\n      <div className=\"mt-4\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(PSCAmplitudeData, `PSC-Amplitude-Data.json`)}\n        >\n          PSC amplitude\n        </DownloadButton>\n      </div>\n    </>\n  );\n};\n\nexport default ConductanceModelSection;","import React, { useState, useEffect } from 'react';\nimport ResponsiveTable from '@/components/ResponsiveTable';\nimport NumberFormat from '@/components/NumberFormat';\nimport TextWithRefs from '@/components/TextWithRefs';\nimport { downloadAsJson } from '@/utils';\nimport { mtypeDescription } from '@/terms';\nimport { termFactory } from '@/components/Term';\nimport DownloadButton from '@/components/DownloadButton';\nimport { dataPath } from '@/config';\n\ntype TableEntry = {\n  from: string;\n  to: string;\n  mean: number;\n  sd: number;\n  sem: number;\n  species: string;\n  age: string;\n  weight: string;\n  region: string;\n  nCells: number;\n  ref: string;\n  ref_link?: string;\n};\n\ntype DOIIndex = {\n  [key: string]: string;\n};\n\nconst Term = termFactory(mtypeDescription);\n\nconst PSCRiseTimeColumns = [\n  {\n    title: 'From',\n    dataIndex: 'from' as keyof TableEntry,\n    render: from => (<Term term={from} />),\n  },\n  {\n    title: 'To',\n    dataIndex: 'to' as keyof TableEntry,\n    render: to => (<Term term={to} />),\n  },\n  {\n    title: 'Mean, ms',\n    dataIndex: 'mean' as keyof TableEntry,\n    render: (mean) => <NumberFormat value={mean} />\n  },\n  {\n    title: 'SD, ms',\n    dataIndex: 'sd' as keyof TableEntry,\n    render: (sd) => <NumberFormat value={sd} />\n  },\n  {\n    title: 'SEM, ms',\n    dataIndex: 'sem' as keyof TableEntry,\n    render: (sem) => <NumberFormat value={sem} />\n  },\n  {\n    title: 'Species',\n    dataIndex: 'species' as keyof TableEntry,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age' as keyof TableEntry,\n  },\n  {\n    title: 'Weight',\n    dataIndex: 'weight' as keyof TableEntry,\n  },\n  {\n    title: 'Region',\n    dataIndex: 'region' as keyof TableEntry,\n  },\n  {\n    title: 'N cells',\n    dataIndex: 'nCells' as keyof TableEntry,\n  },\n  {\n    title: 'Reference',\n    dataIndex: 'ref' as keyof TableEntry,\n    render: (reference: string, record: TableEntry) =>\n      record.ref_link ? (\n        <a href={record.ref_link} target=\"_blank\" rel=\"noopener noreferrer\">{reference}</a>\n      ) : (\n        reference\n      ),\n  },\n];\n\nconst PSCTauDecayColumns = [\n  {\n    title: 'From',\n    dataIndex: 'from' as keyof TableEntry,\n    render: from => (<Term term={from} />),\n  },\n  {\n    title: 'To',\n    dataIndex: 'to' as keyof TableEntry,\n    render: to => (<Term term={to} />),\n  },\n  {\n    title: 'Mean, ms',\n    dataIndex: 'mean' as keyof TableEntry,\n    render: (mean) => <NumberFormat value={mean} />\n  },\n  {\n    title: 'SD, ms',\n    dataIndex: 'sd' as keyof TableEntry,\n    render: (sd) => <NumberFormat value={sd} />\n  },\n  {\n    title: 'SEM, ms',\n    dataIndex: 'sem' as keyof TableEntry,\n    render: (sem) => <NumberFormat value={sem} />\n  },\n  {\n    title: 'Species',\n    dataIndex: 'species' as keyof TableEntry,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age' as keyof TableEntry,\n  },\n  {\n    title: 'Weight',\n    dataIndex: 'weight' as keyof TableEntry,\n  },\n  {\n    title: 'Region',\n    dataIndex: 'region' as keyof TableEntry,\n  },\n  {\n    title: 'N cells',\n    dataIndex: 'nCells' as keyof TableEntry,\n  },\n  {\n    title: 'Reference',\n    dataIndex: 'ref' as keyof TableEntry,\n    render: (reference: string, record: TableEntry) =>\n      record.ref_link ? (\n        <a href={record.ref_link} target=\"_blank\" rel=\"noopener noreferrer\">{reference}</a>\n      ) : (\n        reference\n      ),\n  },\n];\n\ntype AMPAKineticsSectionProps = {\n  theme?: number;\n};\n\nconst AMPAKineticsSection: React.FC<AMPAKineticsSectionProps> = ({ theme }) => {\n  const [PSCRiseTimeData, setPSCRiseTimeData] = useState<TableEntry[]>([]);\n  const [PSCTauDecayData, setPSCTauDecayData] = useState<TableEntry[]>([]);\n\n  useEffect(() => {\n    fetch(`${dataPath}/1_experimental-data/connection-physiology/ampa_kinetics_-_psc_rise_time.json`)\n      .then(response => response.json())\n      .then(data => setPSCRiseTimeData(data));\n\n    fetch(`${dataPath}/1_experimental-data/connection-physiology/ampa_kinetics_-_psc_tau_decay.json`)\n      .then(response => response.json())\n      .then(data => setPSCTauDecayData(data));\n  }, []);\n\n  return (\n    <>\n      <h3 className=\"text-lg mb-2 mt-4\">PSC rise time</h3>\n      <ResponsiveTable<TableEntry>\n        data={PSCRiseTimeData}\n        columns={PSCRiseTimeColumns}\n        rowKey={({ from, to, mean }) => `${from}_${to}_${mean}`}\n      />\n      <div className=\"mt-2\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(PSCRiseTimeData, `PSC-Rise-Time-Data.json`)}\n        >\n          PSC rise time\n        </DownloadButton>\n      </div>\n\n      <h3 className=\"text-lg mb-2 mt-12\">PSC tau decay</h3>\n      <ResponsiveTable<TableEntry>\n        data={PSCTauDecayData}\n        columns={PSCTauDecayColumns}\n        rowKey={({ from, to, mean }) => `${from}_${to}_${mean}`}\n      />\n      <div className=\"mt-2\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(PSCTauDecayData, `PSC-Tau-Decay-Data.json`)}\n        >\n          PSC tau decay\n        </DownloadButton>\n      </div>\n    </>\n  );\n};\n\nexport default AMPAKineticsSection;","import React, { useState, useEffect } from 'react';\nimport ResponsiveTable from '@/components/ResponsiveTable';\nimport NumberFormat from '@/components/NumberFormat';\nimport TextWithRefs from '@/components/TextWithRefs';\nimport { downloadAsJson } from '@/utils';\nimport { mtypeDescription } from '@/terms';\nimport { termFactory } from '@/components/Term';\nimport DownloadButton from '@/components/DownloadButton';\nimport { dataPath } from '@/config';\n\ntype TableEntry = {\n  from: string;\n  to: string;\n  mean: number;\n  sd?: number;\n  sem?: number;\n  species: string;\n  age: string;\n  weight?: string;\n  region: string;\n  nAnimals?: number;\n  nCells?: number;\n  ref: string;\n};\n\ntype DOIIndex = {\n  [key: string]: string;\n};\n\nconst Term = termFactory(mtypeDescription);\n\nconst RatioColumns = [\n  {\n    title: 'From',\n    dataIndex: 'from' as keyof TableEntry,\n    render: from => (<Term term={from} />),\n  },\n  {\n    title: 'To',\n    className: 'text-nowrap',\n    dataIndex: 'to' as keyof TableEntry,\n    render: to => (<Term term={to} />),\n  },\n  {\n    title: 'Mean',\n    dataIndex: 'mean' as keyof TableEntry,\n    render: (mean) => <NumberFormat value={mean} />\n  },\n  {\n    title: 'SD',\n    className: 'text-nowrap',\n    dataIndex: 'sd' as keyof TableEntry,\n    render: (sd) => <NumberFormat value={sd} />\n  },\n  {\n    title: 'SEM',\n    dataIndex: 'sem' as keyof TableEntry,\n    render: (sem) => <NumberFormat value={sem} />\n  },\n  {\n    title: 'Species',\n    className: 'text-nowrap',\n    dataIndex: 'species' as keyof TableEntry,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age' as keyof TableEntry,\n  },\n  {\n    title: 'Region',\n    dataIndex: 'region' as keyof TableEntry,\n  },\n  {\n    title: 'N Animals',\n    className: 'text-nowrap',\n    dataIndex: 'nAnimals' as keyof TableEntry,\n  },\n  {\n    title: 'N cells',\n    className: 'text-nowrap',\n    dataIndex: 'nCells' as keyof TableEntry,\n  },\n  {\n    title: 'Reference',\n    dataIndex: 'ref' as keyof TableEntry,\n    render: (text, record) =>\n      record.ref_link ? (\n        <a href={record.ref_link} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>\n      ) : (\n        text\n      ),\n  },\n];\n\nconst TauDecayColumns = [\n  {\n    title: 'From',\n    dataIndex: 'from' as keyof TableEntry,\n    render: from => (<Term term={from} />),\n  },\n  {\n    title: 'To',\n    dataIndex: 'to' as keyof TableEntry,\n    render: to => (<Term term={to} />),\n  },\n  {\n    title: 'Mean, ms',\n    dataIndex: 'mean' as keyof TableEntry,\n    render: (mean) => <NumberFormat value={mean} />\n  },\n  {\n    title: 'Species',\n    dataIndex: 'species' as keyof TableEntry,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age' as keyof TableEntry,\n  },\n  {\n    title: 'Region',\n    dataIndex: 'region' as keyof TableEntry,\n  },\n  {\n    title: 'N Animals',\n    dataIndex: 'nAnimals' as keyof TableEntry,\n  },\n  {\n    title: 'N cells',\n    dataIndex: 'nCells' as keyof TableEntry,\n  },\n  {\n    title: 'Reference',\n    dataIndex: 'ref' as keyof TableEntry,\n    render: (text, record) =>\n      record.ref_link ? (\n        <a href={record.ref_link} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>\n      ) : (\n        text\n      ),\n  },\n];\n\nconst TauRiseColumns = [\n  {\n    title: 'From',\n    dataIndex: 'from' as keyof TableEntry,\n    render: from => (<Term term={from} />),\n  },\n  {\n    title: 'To',\n    dataIndex: 'to' as keyof TableEntry,\n    render: to => (<Term term={to} />),\n  },\n  {\n    title: 'Mean, ms',\n    dataIndex: 'mean' as keyof TableEntry,\n    render: (mean) => <NumberFormat value={mean} />\n  },\n  {\n    title: 'Species',\n    dataIndex: 'species' as keyof TableEntry,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age' as keyof TableEntry,\n  },\n  {\n    title: 'Region',\n    dataIndex: 'region' as keyof TableEntry,\n  },\n  {\n    title: 'N cells',\n    dataIndex: 'nCells' as keyof TableEntry,\n  },\n  {\n    title: 'Reference',\n    dataIndex: 'ref' as keyof TableEntry,\n    render: (text, record) =>\n      record.ref_link ? (\n        <a href={record.ref_link} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>\n      ) : (\n        text\n      ),\n  },\n];\n\ntype NMDAKineticsSectionProps = {\n  theme?: number;\n}\n\nconst NMDAKineticsSection: React.FC<NMDAKineticsSectionProps> = ({ theme }) => {\n  const [RatioData, setRatioData] = useState<TableEntry[]>([]);\n  const [TauDecayData, setTauDecayData] = useState<TableEntry[]>([]);\n  const [TauRiseData, setTauRiseData] = useState<TableEntry[]>([]);\n  const [doiIndex, setDoiIndex] = useState<DOIIndex>({});\n\n  useEffect(() => {\n    fetch(`${dataPath}/1_experimental-data/connection-physiology/nmda_kinetics_-_nmda_ratio.json`)\n      .then(response => response.json())\n      .then(data => setRatioData(data));\n\n    fetch(`${dataPath}/1_experimental-data/connection-physiology/nmda_kinetics_-_nmda_tau_decay.json`)\n      .then(response => response.json())\n      .then(data => setTauDecayData(data));\n\n    fetch(`${dataPath}/1_experimental-data/connection-physiology/nmda_kinetics_-_nmda_tau_rise.json`)\n      .then(response => response.json())\n      .then(data => setTauRiseData(data));\n\n    fetch(`${dataPath}/1_experimental-data/connection-physiology/ref-doi.json`)\n      .then(response => response.json())\n      .then(data => setDoiIndex(data));\n  }, []);\n\n  return (\n    <>\n      <h3 className='text-lg mb-2'>NMDA/AMPA ratio</h3>\n      <ResponsiveTable<TableEntry>\n        data={RatioData}\n        columns={RatioColumns}\n        rowKey={({ from, to, mean }) => `${from}_${to}_${mean}`}\n      />\n      <div className=\"mt-4\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(RatioData, `NMDAAMPA-Ratio-Data.json`)}\n        >\n          NMDA/AMPA ratio Data\n        </DownloadButton>\n      </div>\n\n      <h3 className='text-lg mb-2 mt-12'>NMDA tau decay</h3>\n      <ResponsiveTable<TableEntry>\n        data={TauDecayData}\n        columns={TauDecayColumns}\n        rowKey={({ from, to, mean }) => `${from}_${to}_${mean}`}\n      />\n      <div className=\"mt-4\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(TauDecayData, `NMDA-Tau-Decay-Data.json`)}\n        >\n          NMDA tau decay Data\n        </DownloadButton>\n      </div>\n\n      <h3 className=\"text-lg mt-12\">NMDA tau rise</h3>\n      <ResponsiveTable<TableEntry>\n        data={TauRiseData}\n        columns={TauRiseColumns}\n        rowKey={({ from, to, mean }) => `${from}_${to}_${mean}`}\n      />\n      <div className=\"mt-4\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(TauRiseData, `NMDA-Tau-Rise.json`)}\n        >\n          NMDA tau rise Data\n        </DownloadButton>\n      </div>\n    </>\n  );\n};\n\nexport default NMDAKineticsSection;","import React from 'react';\n\n// Component Imports\nimport Filters from '@/layouts/Filters';\nimport StickyContainer from '@/components/StickyContainer';\nimport Title from '@/components/Title';\nimport InfoBox from '@/components/InfoBox';\nimport DataContainer from '@/components/DataContainer';\nimport Collapsible from '@/components/Collapsible';\n\n// Section Component Imports\nimport ConductanceModelSection from './connection-physiology/ConductanceModelSection';\nimport AMPAKineticsSection from './connection-physiology/AMPAKineticsSection';\nimport NMDAKineticsSection from './connection-physiology/NMDAKineticsSection';\n\n// Config Import\nimport { colorName } from './config';\n\nconst ConnectionPhysiologyView: React.FC = () => {\n  const theme = 1;\n\n  return (\n    <>\n      {/* Filters Section */}\n      <Filters theme={theme} hasData={true}>\n        <div className=\"flex flex-col lg:flex-row w-full lg:items-center mt-40 lg:mt-0\">\n          <div className=\"w-full md:flex-none mb-8 md:mb-8 lg:pr-0\">\n            <StickyContainer>\n              <Title\n                primaryColor={colorName}\n                title=\"Connection Physiology\"\n                subtitle=\"Experimental Data\"\n                theme={theme}\n              />\n              <div role=\"information\">\n                <InfoBox>\n                  <p>\n                    Each synapse between pairs of pre- and postsynaptic morphological types (m-types)\n                    shows unique properties in terms of strength and kinetics. We used data from\n                    literature to estimate the postsynaptic potential (PSP) and postsynaptic current (PSC),\n                    and the kinetics of the postsynaptic receptor (i.e. AMPA, NMDA, GABAA. Please note\n                    that GABAB was not included in our dataset).\n                  </p>\n                </InfoBox>\n              </div>\n            </StickyContainer>\n          </div>\n        </div>\n      </Filters>\n\n      {/* Data Container Section */}\n      <DataContainer\n        theme={theme}\n        navItems={[\n          { id: 'conductanceModelSection', label: 'Conductance Model' },\n          { id: 'AMPAKineticsSection', label: 'PSC kinetics' },\n          { id: 'NMDAKineticsSection', label: 'NMDA Kinetics' },\n        ]}\n      >\n        <Collapsible\n          id=\"conductanceModelSection\"\n          title=\"Conductance Model\"\n        >\n          <p className=\"mb-4\">\n            Basic characterization of a synaptic pathway includes the estimation of specific\n            potentials and currents during synaptic activity. In particular, we collect data on\n            the reversal potential of a synapse, the voltage at which there is no net flow of ions\n            through the membrane, the peak PSP and PSC, and the coefficient of variation (CV) of the peak PSC.\n          </p>\n          <ConductanceModelSection theme={theme} />\n        </Collapsible>\n\n        <Collapsible\n          id=\"AMPAKineticsSection\"\n          className=\"mt-4\"\n          title=\"PSC kinetics\"\n        >\n          <p className=\"mb-4\">\n            PSC shows a specific rise and decay which depends on the synapse and the set of synaptic\n            receptors. The rise time are usually measured as the time taken by the PSC trace to go\n            from 10% to 90% of its amplitude, while the time constant of the decay (tau decay) is\n            estimated fitting an exponential decay function (e-t/decay) after the PSC peak and\n            identifying its time constant. When slow receptors (i.e. NMDA and GABAB) are inactive\n            or blocked in the experiments, the measures are due to mainly the fast receptors,\n            AMPA or GABAA, respectively for excitatory or inhibitory synapses.\n          </p>\n          <AMPAKineticsSection theme={theme} />\n        </Collapsible>\n\n        <Collapsible\n          id=\"NMDAKineticsSection\"\n          className=\"mt-4\"\n          title=\"NMDA Kinetics\"\n        >\n          <p className=\"mb-4\">\n            Excitatory synapses have two types of ionotropic receptors, AMPA and NMDA. Contribution\n            of NMDA receptors to the synaptic response is expressed as a ratio between peak conductance\n            of NMDA and AMPA (NMDA/AMPA ratio). NMDA has slower kinetics and rise and decay time\n            constants are usually computed by fitting exponential rise (et/rise) and decay (e-t/decay) functions.\n          </p>\n          <NMDAKineticsSection theme={theme} />\n        </Collapsible>\n      </DataContainer>\n    </>\n  );\n};\n\nexport default ConnectionPhysiologyView;","import Head from 'next/head';\nimport ConnectionPhysiologyView from '@/views/1_experimental-data/ConnectionPhysiology';\n\nexport default function ConnectionPhysiologyPage() {\n  const metadata = {\n    title: 'Connection Physiology - Experimental Data | The Hippocampus Hub',\n    description:\n      'Explore detailed data on the physiology of neuronal connections in the hippocampus. Analyze conduction models, PSC (postsynaptic currents), and other physiological properties relevant to neuronal communication.',\n    keywords: [\n      'Connection Physiology',\n      'Conduction Models',\n      'Postsynaptic Currents',\n      'Hippocampus',\n      'Experimental Data',\n      'Neuroscience',\n      'Neuronal Connections',\n      'Blue Brain Project',\n    ],\n    author: 'Blue Brain Project',\n    creator: 'EPFL Blue Brain Project',\n    publisher: 'The Hippocampus Hub',\n  };\n\n  return (\n    <>\n      <Head>\n        <title>{metadata.title}</title>\n        <meta name=\"description\" content={metadata.description} />\n        <meta name=\"keywords\" content={metadata.keywords.join(', ')} />\n        <meta name=\"author\" content={metadata.author} />\n        <meta name=\"creator\" content={metadata.creator} />\n        <meta name=\"publisher\" content={metadata.publisher} />\n      </Head>\n\n      <ConnectionPhysiologyView />\n    </>\n  );\n}","import React from 'react';\n\nexport type TermDescription = Record<string, string>;\n\n\nexport const layerDescription: TermDescription = {\n  SLM: 'Stratum Lacunosum-Moleculare',\n  SR: 'Stratum Radiatum',\n  SP: 'Stratum Pyramidal',\n  SO: 'Stratum Oriens',\n};\n\nexport const mtypeDescription: TermDescription = {\n  PPA: 'Perforant Pathway Associated Cell',\n  SCA: 'Schaffer Collateral Associated Cell',\n  AA: 'Axon Axonic Cell',\n  BS: 'Bistratified Cell',\n  PVBC: 'PV+ Basket Cell',\n  CCKBC: 'CCK+ Basket Cell',\n  PC: 'Pyramidal Cell',\n  BP: 'Back-Projecting Cell',\n  OLM: 'Oriens Lacunosum-Moleculare Cell',\n  Tri: 'Trilaminar Cell',\n  Ivy: 'Ivy Cell',\n};\n\nexport const stypeDescription: TermDescription = {\n  E1: 'Excitatory facilitating',\n  E2: 'Excitatory depressing',\n  I1: 'Inhibitory facilitating',\n  I2: 'Inhibitory depressing',\n  I3: 'Inhibitory pseudo linear',\n};\n\nexport const etypeDescription: TermDescription = {\n  cADpyr: 'continuous Accommodating (Adapting) for pyramidal cells',\n  cAC: 'continuous Accommodating',\n  bAC: 'burst Accommodating',\n  cNAC: 'continuous Non-accommodating',\n  bNAC: 'burst Non-accommodating',\n  dNAC: 'delayed Non-accommodating',\n  cSTUT: 'continuous Stuttering',\n  bSTUT: 'burst Stuttering',\n  dSTUT: 'delayed Stuttering',\n  cIR: 'continuous Irregular',\n  bIR: 'burst Irregular',\n};\n\nexport const pathwayDescription: TermDescription = {\n  gsyn: 'The peak conductance (in nS) for a single synaptic contact',\n  U: 'Utilization of synaptic efficacy - analogous to the transmitter release probability at a single synaptic contact',\n  D: 'Time constant (in ms) for recovery from depression',\n  F: 'Time constant (in ms) for recovery from facilitation',\n};\n\nexport const formattedTerm: Record<string, React.ReactNode> = {\n  gsyn: (<span>g<sub>syn</sub></span>),\n};\n","import { accentColors } from '../../config';\nimport { Color } from '../../types';\n\nexport const sectionTitle = 'Experimental Data';\nexport const colorName: Color = 'blue-2';\nexport const primaryColor = accentColors[colorName];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"responsiveTable\":\"styles_responsiveTable__njQH4\",\"ant-table-cell\":\"styles_ant-table-cell__Fj0OS\",\"ant-table-cell-auto\":\"styles_ant-table-cell-auto__Yw8kj\",\"responsiveTablOdd\":\"styles_responsiveTablOdd__ix6_m\",\"responsiveTablEven\":\"styles_responsiveTablEven__sIcPO\",\"highlightBackground\":\"styles_highlightBackground__eWdTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__31D34\",\"container--center\":\"styles_container--center__Yuntq\",\"flexWrapper\":\"styles_flexWrapper___gDLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__pHcWR\"};"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","value","significantFigures","thousandSeparator","prefix","suffix","param","formatNumber","num","parseFloat","Number","isFinite","formatted","toLocaleString","maximumSignificantDigits","toPrecision","concat","renderHighlightValue","nestedValue","_value","highlightValue","record","isHighlight","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","columns","data","restProps","columnWidths","setColumnWidths","useState","useEffect","newColumnWidths","map","maxTextWidth","reduce","max","dataIndex","column","undefined","text","String","textWidth","calculateTextWidth","font","canvas","document","createElement","context","getContext","measureText","width","Math","min","tableColumns","index","_column_children","title","responsive","render","children","child","key","nestedTableData","childrenValue","jsxs","filter","item","nestedColumns","Table","rowClassName","classes","rowKey","showHeader","tableLayout","dataSource","pagination","bordered","size","scroll","x","centered","styles","classNames","termFactory","termDescription","termFormatter","term","description","currentDescription","formattedTerm","Tooltip","destroyTooltipOnHide","span","style","Term","mtypeDescription","ReversalPotentialColumns","from","jsx_runtime","to","NumberFormat","mean","sup","ref_link","a","href","target","rel","PSPAmplitudeColumns","sd","sem","PSCAmplitudeColumns","connection_physiology_ConductanceModelSection","theme","reversalPotentialData","setReversalPotentialData","PSPAmplitudeData","setPSPAmplitudeData","PSCAmplitudeData","setPSCAmplitudeData","fetch","dataPath","then","response","json","Fragment","h3","ResponsiveTable","DownloadButton","onClick","downloadAsJson","h2","PSCRiseTimeColumns","reference","PSCTauDecayColumns","connection_physiology_AMPAKineticsSection","PSCRiseTimeData","setPSCRiseTimeData","PSCTauDecayData","setPSCTauDecayData","RatioColumns","TauDecayColumns","TauRiseColumns","connection_physiology_NMDAKineticsSection","RatioData","setRatioData","TauDecayData","setTauDecayData","TauRiseData","setTauRiseData","doiIndex","setDoiIndex","ConnectionPhysiology","Filters","hasData","StickyContainer","Title","primaryColor","colorName","subtitle","role","InfoBox","p","DataContainer","navItems","id","label","Collapsible","ConductanceModelSection","AMPAKineticsSection","NMDAKineticsSection","ConnectionPhysiologyPage","metadata","keywords","author","creator","publisher","Head","meta","name","content","join","ConnectionPhysiologyView","layerDescription","SLM","SR","SP","SO","PPA","SCA","AA","BS","PVBC","CCKBC","PC","BP","OLM","Tri","Ivy","stypeDescription","E1","E2","I1","I2","I3","etypeDescription","cADpyr","cAC","bAC","cNAC","bNAC","dNAC","cSTUT","bSTUT","dSTUT","cIR","bIR","pathwayDescription","gsyn","U","D","F","accentColors","module","exports"],"sourceRoot":""}