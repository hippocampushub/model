{"version":3,"file":"static/chunks/pages/experimental-data/schaffer-collaterals-939c23390e6fa901.js","mappings":"4aACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,0CACA,WACA,OAAeC,EAAQ,MACvB,EACA,+CC4BAC,EAAAC,CAAA,CAXkD,OAAC,CACjDC,MAAAA,CAAK,CACLC,mBAAAA,EAAqB,CAAC,CACtBC,kBAAAA,EAAoB,EAAI,CACxBC,OAAAA,EAAS,EAAE,CACXC,OAAAA,EAAS,EAAE,CACZ,CAAAC,EACC,OAAOC,SAnBoBN,CAAK,MAAEC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAqB,EAAGC,EAAAA,CAAAA,CAAAA,UAAAA,MAAAA,CAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,SAAAA,CAAAA,EAAAA,CAA0BC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAS,GAAIC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAS,GACpGG,EAAMC,WAAWR,GAEvB,GAAI,CAACS,OAAOC,QAAQ,CAACH,GAAM,OAAOP,EAElC,IAAMW,EAAYT,EACdK,EAAIK,cAAc,CAAC,KAAM,CAAEC,yBAA0BZ,CAAmB,GACxEM,EAAIO,WAAW,CAACb,GAEpB,MAAO,GAAYU,MAAAA,CAATR,GAAqBC,MAAAA,CAAZO,GAAmBI,MAAA,CAAPX,EACjC,EASsBJ,EAAOC,EAAoBC,EAAmBC,EAAQC,EAC5E,8FCdA,IAAMY,qBAAuB,GAAY,CAACC,EAAaC,IACrDC,eAAeF,EAAaG,EAAOC,WAAW,EAE1CF,eAAiB,CAACF,EAAaI,IACnCA,EAAc,GAAAC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,qBAAaR,IAAqBA,CAqIjEnB,CAAAA,EAAAC,CAAA,CAxHA,SAA0EM,CAI7C,KAJ6C,CACxEqB,QAAAA,CAAO,CACPC,KAAAA,EAAO,EAAE,CACT,GAAGC,EACwB,CAJ6CvB,EAKlE,CAACwB,EAAcC,EAAgB,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAmB,EAAE,EAG7DC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMC,EAAkBP,EAAQQ,GAAG,CAAC,IAClC,IAAMC,EAAeR,EAAKS,MAAM,CAAC,CAACC,EAAKjB,KACrC,IAAMkB,EAAYC,EAA6BD,SAAS,CACxD,GAAIA,GAAalB,KAAsBoB,IAAtBpB,CAAM,CAACkB,EAAU,CAAgB,CAChD,IAAMG,EAAOC,OAAOtB,CAAM,CAACkB,EAAU,EAC/BK,EAAYC,SAxBAH,CAAY,MAAEI,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAe,aACjDC,EAASC,SAASC,aAAa,CAAC,UAChCC,EAAUH,EAAOI,UAAU,CAAC,aAClC,GACED,EAAQJ,IAAI,CAAGA,EACRI,EAAQE,WAAW,CAACV,GAAMW,KAAK,EAEjC,CACT,EAgB+CX,EARhC,cASL,OAAOY,KAAKhB,GAAG,CAACA,EAAKM,EACvB,CACA,OAAON,CACT,EAAG,GACH,OAAOgB,KAAKC,GAAG,CAACnB,EAAe,GAAI,IACrC,GAEAL,EAAgBG,EAClB,EAAG,CAACP,EAASC,EAAK,EA8DlB,IAAM4B,EAAe7B,EAClBQ,GAAG,CAAC,CAACK,EAAQiB,SAOFC,QAPa,CACvB,GAAGlB,CAAM,CACTmB,MAAOnB,EAAOmB,KAAK,CACnBpB,UAAWC,EAA6BD,SAAS,CACjDqB,WAAY,CAAC,KAAmB,CAChCC,OAAQ,CAAC5D,EAAYoB,EAAcoC,IACjCrC,eAAeoB,EAAOqB,MAAM,CAAGrB,EAAOqB,MAAM,CAAC5D,EAAOoB,EAAQoC,GAASxD,EAAOoB,EAAOC,WAAW,EAChGwC,SAAQ,OAAEJ,CAAAA,EAAAlB,EAAkCsB,QAAQ,GAA1CJ,KAAA,IAAAA,EAAA,OAAAA,EAA4CvB,GAAG,CAAC,GAAY,EACpE0B,OAAQ,CAAC5D,EAAYoB,IAAiBD,eAAenB,EAAOoB,EAAOC,WAAW,EAC9E,GAAGyC,CAAK,CACV,GACAV,MAAOb,oBAAAA,EAAOwB,GAAG,CAAyBlC,CAAY,CAAC2B,EAAM,CAAGhB,KAAAA,CAClE,IACCzB,MAAM,CA1EgB,CACvB2C,MAAO,KACPpB,UAAW,KACXsB,OAAQ,CAAC1C,EAAQE,EAAQoC,KACvB,IAAMQ,EAAkBtC,EACrBQ,GAAG,CAAC,IACH,IAAMI,EAAYC,EAA6BD,SAAS,CACxD,GAAIA,EACF,MAAO,CACLyB,IAAKxB,EAAOmB,KAAK,CACjB1D,MAAOoB,CAAM,CAACkB,EAAU,EAI5B,IAAMuB,EAAWtB,EAAkCsB,QAAQ,CAC3D,GAAIA,EAAU,CACZ,IAAMI,EAAgBJ,EAAS3B,GAAG,CAAC,GACjC,GAAAZ,EAAA4C,IAAA,EAAC1C,MAAAA,WACEsC,EAAMJ,KAAK,CAAC,KAAGtC,CAAM,CAAC0C,EAA4BxB,SAAS,CAAC,GADrDwB,EAAMC,GAAG,GAIrB,MAAO,CACLA,IAAKxB,EAAOmB,KAAK,CACjB1D,MAAOiE,CACT,CACF,CAEA,OAAO,IACT,GACCE,MAAM,CAAC,GAAUC,OAAAA,GAEdC,EAAwD,CAC5D,CACE/B,UAAW,MACXoB,MAAO,QACPE,OAAQ5C,qBAAqBI,EAC/B,EACA,CACEkB,UAAW,QACXoB,MAAO,QACPE,OAAQ5C,qBAAqBI,EAC/B,EACD,CAED,MACE,GAAAE,EAAAC,GAAA,EAAC+C,EAAAA,CAAKA,CAAAA,CACJ7C,UAAU,wDACV8C,aAAcf,EAAQ,EAAIgB,IAAAA,kBAAAA,CAA6BA,IAAAA,iBAAAA,CACvDC,OAAQ,CAACrD,EAAaoC,IAAU,GAAkBA,MAAAA,CAAfpC,EAAO2C,GAAG,CAAC,MAAUhD,MAAA,CAANyC,GAClDkB,WAAY,GACZhD,QAAS2C,EACTM,YAAY,OACZC,WAAYZ,EACZa,WAAY,IAGlB,EACAlB,WAAY,CAAC,KAAmB,GAmB5B,CAAElC,UAAAA,EAAY,EAAE,CAAE,CAAGG,EAE3B,MACE,GAAAN,EAAAC,GAAA,EAAC+C,EAAAA,CAAKA,CAAAA,CACJQ,SAAQ,GACRC,KAAK,QACLC,OAAQ,CAAEC,EAAG,EAAK,EAClBR,OAAQ,GAAiBrD,EAAO2C,GAAG,EAAI,GAAoBhD,MAAA,CAAjBK,EAAOkB,SAAS,CAAC,MAC3DuC,WAAY,GACZnD,QAAS6B,EACTqB,WAAYjD,EACZ4C,aAAc,CAACnD,EAAcoC,IAAmBA,EAAQ,EAAIgB,IAAAA,kBAAAA,CAA6BA,IAAAA,iBAAAA,CACxF,GAAG5C,CAAS,CACbH,UAAW,qEAA+EV,MAAA,CAAVU,GAChFkD,YAAY,QAGlB,yGCvIA7E,CAAAA,EAAAC,CAAA,CARwD,OAAC,CAAEmF,SAAAA,CAAQ,CAAErB,SAAAA,CAAQ,CAAE,CAAAxD,QAC7E,GAAAiB,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAW0D,IAAAA,WAAAA,UACd,GAAA7D,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAW2D,IAAWD,IAAAA,SAAAA,CAAkBD,EAAWC,GAAAA,CAAAA,sBAAAA,CAAgC,aACrFtB,KAEC,2ICCD,IAAMwB,YAAc,eAACC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAmC,CAAC,EAAGC,EAAAA,UAAAA,MAAAA,CAAAA,EAAAA,SAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAkBjE,OAjBkC,OAAC,CAAE9D,UAAAA,CAAS,CAAE+D,KAAAA,CAAI,CAAEC,YAAAA,CAAW,CAAE,CAAApF,EAC3DqF,EAAqBD,GAAeH,CAAe,CAACE,EAAK,CACzDG,EAAgBJ,EAClBA,EAAcC,GACdA,SAEJ,EAKE,GAAAlE,EAAAC,GAAA,EAACqE,EAAAA,OAAOA,CAAAA,CAAClC,MAAOgC,EAAoBG,qBAAsB,YACxD,GAAAvE,EAAAC,GAAA,EAACuE,OAAAA,CAAKrE,UAAW,GAAsBA,MAAAA,CAAnBsE,IAAAA,SAAAA,CAAgB,KAAmBhF,MAAA,CAAhBU,MAAAA,EAAAA,EAAa,aAAOkE,MALrD,GAAArE,EAAAC,GAAA,EAACuE,OAAAA,CAAKrE,UAAWA,WAAYkE,GAQzC,CAGF,mSC2GAK,sCA9G0D,OAAC,CAAEC,MAAAA,CAAK,CAAE,CAAA5F,EAC5D,CAAC6F,EAAaC,EAAe,CAAGpE,CAAAA,EAAAA,EAAAA,QAAAA,EAAuB,EAAE,QAE/DC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMoE,UAAY,UAChB,IAAMC,EAAkB,MAAMC,MAAM,GAAYvF,MAAA,CAATwF,EAAAA,EAAQA,CAAC,8DAC1CC,EAAc,MAAMH,EAAgBI,IAAI,GAC9CN,EAAeK,EACjB,EAEAJ,WACF,EAAG,EAAE,EA6EH,GAAAM,EAAAxC,IAAA,EAAAwC,EAAAC,QAAA,YACE,GAAAD,EAAAnF,GAAA,EAACqF,EAAAA,CAAeA,CAAAA,CACdnF,UAAU,OACVE,KAAMuE,EACNxE,QA/EiB,CACrB,CACEgC,MAAO,OACPpB,UAAW,MACb,EACA,CACEoB,MAAO,KACPpB,UAAW,IACb,EACA,CACEoB,MAAO,eACPpB,UAAW,YACb,EACA,CACEoB,MAAO,MACPpB,UAAW,MACXsB,OAAQ,GAAiB,GAAA8C,EAAAnF,GAAA,EAACsF,EAAAA,CAAYA,CAAAA,CAAC7G,MAAOsD,GAChD,EACA,CACEI,MAAO,MACPpB,UAAW,MACXsB,OAAQ,GAAiB,GAAA8C,EAAAnF,GAAA,EAACsF,EAAAA,CAAYA,CAAAA,CAAC7G,MAAOqC,GAChD,EACA,CACEqB,MAAO,OACPpB,UAAW,OACXsB,OAAQ,GAAkB,GAAA8C,EAAAnF,GAAA,EAACsF,EAAAA,CAAYA,CAAAA,CAAC7G,MAAO8G,GACjD,EACA,CACEpD,MAAO,KACPpB,UAAW,KACXsB,OAAQ,GAAyB,GAAA8C,EAAAnF,GAAA,EAACsF,EAAAA,CAAYA,CAAAA,CAAC7G,MAAO+G,GACxD,EACA,CACErD,MAAO,MACPpB,UAAW,MACXsB,OAAQ,GAA0B,GAAA8C,EAAAnF,GAAA,EAACsF,EAAAA,CAAYA,CAAAA,CAAC7G,MAAOgH,GACzD,EACA,CACEtD,MAAO,UACPpB,UAAW,SACb,EACA,CACEoB,MAAO,SACPpB,UAAW,QACb,EACA,CACEoB,MAAO,SACPpB,UAAW,QACb,EACA,CACEoB,MAAO,YACPjC,UAAW,cACXa,UAAW,UACb,EACA,CACEoB,MAAO,aACPjC,UAAW,cACXa,UAAW,WACb,EACA,CACEoB,MAAO,YACPpB,UAAW,MACXsB,OAAQ,CAACnB,EAAcrB,IACrBA,EAAO6F,QAAQ,CACb,GAAAP,EAAAnF,GAAA,EAAC2F,IAAAA,CAAEC,KAAM/F,EAAO6F,QAAQ,CAAEG,OAAO,SAASC,IAAI,+BAC3C5E,IAGHA,CAEN,EACD,CAQKgC,OAAQ,OAAC,CAAE6C,KAAAA,CAAI,CAAEC,GAAAA,CAAE,CAAET,KAAAA,CAAI,CAAE,CAAAzG,QAAK,GAAWkH,MAAAA,CAARD,EAAK,KAASR,MAAAA,CAANS,EAAG,KAAQxG,MAAA,CAAL+F,EAAK,IAExD,GAAAJ,EAAAnF,GAAA,EAACC,MAAAA,CAAIC,UAAU,gBACb,GAAAiF,EAAAnF,GAAA,EAACiG,EAAAA,CAAcA,CAAAA,CACbvB,MAAOA,EACPwB,QAAS,IAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EACbxB,EACC,iCAEJ,wBAMT,EChHAyB,wBAfkD,OAAC,CAAElF,KAAAA,CAAI,CAAEmF,SAAAA,CAAQ,CAAE,CAAAvH,EAC7DwH,EAAOC,OAAOC,IAAI,CAACH,GAEnBI,EAAOH,EAAKzF,MAAM,CAAC,CAAC4F,EAAMC,KAC9B,IAAMC,EAAMN,CAAQ,CAACK,EAAI,CAEzB,OAAOD,EAAKG,UAAU,CAACF,EATlB,4BAA8EG,MAAAA,CAS5CF,EATF,gDAAoDnH,MAAA,CAS7CkH,EAT6C,QAU3F,EAAGxF,GAEH,MACE,GAAAiE,EAAAnF,GAAA,EAACuE,OAAAA,CAAKuC,wBAAyB,CAAEC,OAAQN,CAAK,GAElD,wBCXA,IAAMO,EAAOlD,CAAAA,EAAAA,EAAAA,CAAAA,EAAYmD,EAAAA,EAAkBA,EAgN3C,IAAAC,gDA5K8E,OAAC,CAAExC,MAAAA,CAAK,CAAE,CAAA5F,EAChF,CAACqI,EAAuBC,EAAyB,CAAG5G,CAAAA,EAAAA,EAAAA,QAAAA,EAAuC,MAC3F,CAAC6F,EAAUgB,EAAY,CAAG7G,CAAAA,EAAAA,EAAAA,QAAAA,EAAiC,CAAC,GAElEC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMoE,UAAY,UAChB,IAAMyC,EAA4B,MAAMvC,MAAM,GAAYvF,MAAA,CAATwF,EAAAA,EAAQA,CAAC,0EACpDuC,EAAwB,MAAMD,EAA0BpC,IAAI,GAClEkC,EAAyBG,GAEzB,IAAMC,EAAc,MAAMzC,MAAM,GAAYvF,MAAA,CAATwF,EAAAA,EAAQA,CAAC,2DACtCyC,EAAU,MAAMD,EAAYtC,IAAI,GACtCmC,EAAYI,EACd,EAEA5C,WACF,EAAG,EAAE,EAEL,IAAM6C,EAA2B,CAC/B,CACEvF,MAAO,eACPpB,UAAW,aACXsB,OAAQ,GAAsB,GAAA8C,EAAAnF,GAAA,EAACgH,EAAIA,CAAC/C,KAAM0D,IAC1C9F,MAAO,GACT,EACA,CACEM,MAAO,OACPpB,UAAW,OACXsB,OAAQ,GAAkB,GAAA8C,EAAAnF,GAAA,EAACsF,EAAAA,CAAYA,CAAAA,CAAC7G,MAAO8G,IAC/C1D,MAAO,EACT,EACA,CACEM,MAAO,KACPpB,UAAW,KACXsB,OAAQ,GAAyB,GAAA8C,EAAAnF,GAAA,EAACsF,EAAAA,CAAYA,CAAAA,CAAC7G,MAAO+G,IACtD3D,MAAO,EACT,EACA,CACEM,MAAO,MACPpB,UAAW,MACXsB,OAAQ,GAA0B,GAAA8C,EAAAnF,GAAA,EAACsF,EAAAA,CAAYA,CAAAA,CAAC7G,MAAOgH,IACvD5D,MAAO,EACT,EACA,CACEM,MAAO,OACPpB,UAAW,OACXc,MAAO,EACT,EACA,CACEM,MAAO,UACPpB,UAAW,UACXc,MAAO,GACT,EACA,CACEM,MAAO,MACPpB,UAAW,MACXc,MAAO,GACT,EACA,CACEM,MAAO,SACPpB,UAAW,SACXc,MAAO,GACT,EACA,CACEM,MAAO,SACPpB,UAAW,SACXc,MAAO,EACT,EACA,CACEM,MAAO,UACPjC,UAAW,cACXa,UAAW,SACXc,MAAO,EACT,EACA,CACEM,MAAO,YACPpB,UAAW,MACXsB,OAAQ,GAAkB,GAAA8C,EAAAnF,GAAA,EAAC4H,wBAAYA,CAAC1G,KAAMA,EAAMmF,SAAUA,GAChE,EACD,CAEKwB,EAAmCH,EAAyB9E,MAAM,CAAC5B,GAAUA,WAAAA,EAAOmB,KAAK,EACzF2F,EAAgCJ,EAAyB9E,MAAM,CAAC5B,GAAUA,QAAAA,EAAOmB,KAAK,SAE5F,EAKE,GAAAgD,EAAAxC,IAAA,EAAAwC,EAAAC,QAAA,YACE,GAAAD,EAAAnF,GAAA,EAAC+H,KAAAA,CAAG7H,UAAU,yBAAgB,aAC9B,GAAAiF,EAAAnF,GAAA,EAACgI,KAAAA,CAAG9H,UAAU,8BAAqB,kCACnC,GAAAiF,EAAAnF,GAAA,EAACqF,EAAAA,CAAeA,CAAAA,CACdnF,UAAU,YACVE,KAAM+G,CAAqB,CAAC,SAAS,CAACc,0BAA0B,CAChE9H,QAAS2H,EACT5E,OAAQ,OAAC,CAAEgF,WAAAA,CAAU,CAAE3C,KAAAA,CAAI,CAAE,CAAAzG,QAAK,GAAiByG,MAAAA,CAAd2C,EAAW,KAAQ1I,MAAA,CAAL+F,EAAK,IAG1D,GAAAJ,EAAAnF,GAAA,EAACgI,KAAAA,CAAG9H,UAAU,wBAAe,iBAC7B,GAAAiF,EAAAnF,GAAA,EAACqF,EAAAA,CAAeA,CAAAA,CACdnF,UAAU,YACVE,KAAM+G,CAAqB,CAAC,SAAS,CAACgB,WAAW,CACjDhI,QAAS2H,EACT5E,OAAQ,OAAC,CAAEgF,WAAAA,CAAU,CAAE3C,KAAAA,CAAI,CAAE,CAAAzG,QAAK,GAAiByG,MAAAA,CAAd2C,EAAW,KAAQ1I,MAAA,CAAL+F,EAAK,IAG1D,GAAAJ,EAAAnF,GAAA,EAACgI,KAAAA,CAAG9H,UAAU,wBAAe,kBAC7B,GAAAiF,EAAAnF,GAAA,EAACqF,EAAAA,CAAeA,CAAAA,CACdnF,UAAU,YACVE,KAAM+G,CAAqB,CAAC,SAAS,CAACiB,YAAY,CAClDjI,QAAS0H,EACT3E,OAAQ,OAAC,CAAEgF,WAAAA,CAAU,CAAE3C,KAAAA,CAAI,CAAE,CAAAzG,QAAK,GAAiByG,MAAAA,CAAd2C,EAAW,KAAQ1I,MAAA,CAAL+F,EAAK,IAG1D,GAAAJ,EAAAnF,GAAA,EAACgI,KAAAA,CAAG9H,UAAU,wBAAe,0BAC7B,GAAAiF,EAAAnF,GAAA,EAACqF,EAAAA,CAAeA,CAAAA,CACdnF,UAAU,YACVE,KAAM+G,CAAqB,CAAC,SAAS,CAACkB,mBAAmB,CACzDlI,QAAS0H,EACT3E,OAAQ,OAAC,CAAEgF,WAAAA,CAAU,CAAE3C,KAAAA,CAAI,CAAE,CAAAzG,QAAK,GAAiByG,MAAAA,CAAd2C,EAAW,KAAQ1I,MAAA,CAAL+F,EAAK,IAG1D,GAAAJ,EAAAnF,GAAA,EAAC+H,KAAAA,CAAG7H,UAAU,8BAAqB,aAEnC,GAAAiF,EAAAnF,GAAA,EAACgI,KAAAA,CAAG9H,UAAU,mBAAU,kBACxB,GAAAiF,EAAAnF,GAAA,EAACqF,EAAAA,CAAeA,CAAAA,CACdnF,UAAU,YACVE,KAAM+G,CAAqB,CAAC,SAAS,CAACmB,YAAY,CAClDnI,QAAS0H,EACT3E,OAAQ,OAAC,CAAEgF,WAAAA,CAAU,CAAE3C,KAAAA,CAAI,CAAE,CAAAzG,QAAK,GAAiByG,MAAAA,CAAd2C,EAAW,KAAQ1I,MAAA,CAAL+F,EAAK,IAG1D,GAAAJ,EAAAnF,GAAA,EAACgI,KAAAA,CAAG9H,UAAU,yBAAgB,gBAC9B,GAAAiF,EAAAnF,GAAA,EAACqF,EAAAA,CAAeA,CAAAA,CACdnF,UAAU,YACVE,KAAM+G,CAAqB,CAAC,SAAS,CAACgB,WAAW,CACjDhI,QAAS0H,EACT3E,OAAQ,OAAC,CAAEgF,WAAAA,CAAU,CAAE3C,KAAAA,CAAI,CAAE,CAAAzG,QAAK,GAAiByG,MAAAA,CAAd2C,EAAW,KAAQ1I,MAAA,CAAL+F,EAAK,IAG1D,GAAAJ,EAAAnF,GAAA,EAACgI,KAAAA,CAAG9H,UAAU,yBAAgB,kBAC9B,GAAAiF,EAAAnF,GAAA,EAACqF,EAAAA,CAAeA,CAAAA,CACdnF,UAAU,YACVE,KAAM+G,CAAqB,CAAC,SAAS,CAACiB,YAAY,CAClDjI,QAAS0H,EACT3E,OAAQ,OAAC,CAAEgF,WAAAA,CAAU,CAAE3C,KAAAA,CAAI,CAAE,CAAAzG,QAAK,GAAiByG,MAAAA,CAAd2C,EAAW,KAAQ1I,MAAA,CAAL+F,EAAK,IAG1D,GAAAJ,EAAAnF,GAAA,EAACgI,KAAAA,CAAG9H,UAAU,yBAAgB,0BAC9B,GAAAiF,EAAAnF,GAAA,EAACqF,EAAAA,CAAeA,CAAAA,CACdnF,UAAU,YACVE,KAAM+G,CAAqB,CAAC,SAAS,CAACkB,mBAAmB,CACzDlI,QAAS0H,EACT3E,OAAQ,OAAC,CAAEgF,WAAAA,CAAU,CAAE3C,KAAAA,CAAI,CAAE,CAAAzG,QAAK,GAAiByG,MAAAA,CAAd2C,EAAW,KAAQ1I,MAAA,CAAL+F,EAAK,IAG1D,GAAAJ,EAAAnF,GAAA,EAACC,MAAAA,CAAIC,UAAU,gBACb,GAAAiF,EAAAnF,GAAA,EAACiG,EAAAA,CAAcA,CAAAA,CACbvB,MAAOA,EACPwB,QAAS,IAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EACbgB,EACC,4CAEJ,oCA/EE,GAAAhC,EAAAnF,GAAA,EAACC,MAAAA,UAAI,cAqFhB,ECxIAsI,oBApE0C,IAItC,GAAApD,EAAAxC,IAAA,EAAAwC,EAAAC,QAAA,YAEE,GAAAD,EAAAnF,GAAA,EAACwI,EAAAA,CAAOA,CAAAA,CAAC9D,MALC,EAKa+D,QAAS,YAC9B,GAAAtD,EAAAnF,GAAA,EAACC,MAAAA,CAAIC,UAAU,0EACb,GAAAiF,EAAAnF,GAAA,EAACC,MAAAA,CAAIC,UAAU,oDACb,GAAAiF,EAAAxC,IAAA,EAAC+F,EAAAA,CAAeA,CAAAA,WACd,GAAAvD,EAAAnF,GAAA,EAAC2I,EAAAA,CAAKA,CAAAA,CACJxG,MAAM,uBACNyG,SAAS,oBACTlE,MAZA,IAcF,GAAAS,EAAAnF,GAAA,EAACC,MAAAA,CAAI4I,KAAK,uBACR,GAAA1D,EAAAnF,GAAA,EAAC8I,EAAAA,CAAOA,CAAAA,UACN,GAAA3D,EAAAnF,GAAA,EAAC+I,IAAAA,UAAE,8KAYf,GAAA5D,EAAAxC,IAAA,EAACqG,EAAAA,CAAaA,CAAAA,CACZtE,MA7BQ,EA8BRuE,SAAU,CACR,CAAEC,GAAI,iBAAkBrC,MAAO,SAAU,EACzC,CAAEqC,GAAI,2BAA4BrC,MAAO,oBAAqB,EAC/D,WAED,GAAA1B,EAAAxC,IAAA,EAACwG,EAAAA,CAAWA,CAAAA,CACVD,GAAG,iBACH/G,MAAM,oBAEN,GAAAgD,EAAAnF,GAAA,EAAC+I,IAAAA,CAAE7I,UAAU,gBAAO,kKAIpB,GAAAiF,EAAAnF,GAAA,EAACoJ,sCAAgBA,CAAC1E,MA3CZ,OA8CR,GAAAS,EAAAxC,IAAA,EAACwG,EAAAA,CAAWA,CAAAA,CACVD,GAAG,2BACHhJ,UAAU,OACViC,MAAM,+BAEN,GAAAgD,EAAAxC,IAAA,EAACoG,IAAAA,CAAE7I,UAAU,uBAAa,+QAIT,GAAAiF,EAAAnF,GAAA,EAACqJ,IAAIA,CAACzD,KAAK,qDAA4C,uBAAyB,4NAKjG,GAAAT,EAAAnF,GAAA,EAACsJ,gDAA0BA,CAAC5E,MA5DtB,aCbD,SAAS6E,0BACtB,IAAMC,EAAW,CACfrH,MAAO,iEACP+B,YACE,uQACFuF,SAAU,CACR,uBACA,cACA,oBACA,eACA,wBACA,cACA,QACA,WACA,qBACD,CACDC,OAAQ,qBACRC,QAAS,0BACTC,UAAW,qBACb,EAEA,MACE,GAAAzE,EAAAxC,IAAA,EAAAwC,EAAAC,QAAA,YACE,GAAAD,EAAAxC,IAAA,EAACkH,IAAIA,WACH,GAAA1E,EAAAnF,GAAA,EAACmC,QAAAA,UAAOqH,EAASrH,KAAK,GACtB,GAAAgD,EAAAnF,GAAA,EAAC8J,OAAAA,CAAKC,KAAK,cAAcC,QAASR,EAAStF,WAAW,GACtD,GAAAiB,EAAAnF,GAAA,EAAC8J,OAAAA,CAAKC,KAAK,WAAWC,QAASR,EAASC,QAAQ,CAACQ,IAAI,CAAC,QACtD,GAAA9E,EAAAnF,GAAA,EAAC8J,OAAAA,CAAKC,KAAK,SAASC,QAASR,EAASE,MAAM,GAC5C,GAAAvE,EAAAnF,GAAA,EAAC8J,OAAAA,CAAKC,KAAK,UAAUC,QAASR,EAASG,OAAO,GAC9C,GAAAxE,EAAAnF,GAAA,EAAC8J,OAAAA,CAAKC,KAAK,YAAYC,QAASR,EAASI,SAAS,MAGpD,GAAAzE,EAAAnF,GAAA,EAACkK,oBAAuBA,CAAAA,KAG9B,yLCjCO,IAAMC,EAAoC,CAC/CC,IAAK,+BACLC,GAAI,mBACJC,GAAI,oBACJC,GAAI,gBACN,EAEaC,EAAoC,CAC/CC,IAAK,oCACLC,IAAK,sCACLC,GAAI,mBACJC,GAAI,oBACJC,KAAM,kBACNC,MAAO,mBACPC,GAAI,iBACJC,GAAI,uBACJC,IAAK,mCACLC,IAAK,kBACLC,IAAK,UACP,EAEaC,EAAoC,CAC/CC,GAAI,0BACJC,GAAI,wBACJC,GAAI,0BACJC,GAAI,wBACJC,GAAI,0BACN,EAEaC,EAAoC,CAC/CC,OAAQ,0DACRC,IAAK,2BACLC,IAAK,sBACLC,KAAM,+BACNC,KAAM,0BACNC,KAAM,4BACNC,MAAO,wBACPC,MAAO,mBACPC,MAAO,qBACPC,IAAK,uBACLC,IAAK,iBACP,EAEapF,EAAsC,CACjDqF,KAAM,6DACNC,EAAG,mHACHC,EAAG,qDACHC,EAAG,sDACL,qBCpDAC,EAAAC,OAAA,EAAkB,gVCAlBD,EAAAC,OAAA,EAAkB,sJCAlBD,EAAAC,OAAA,EAAkB","sources":["webpack://_N_E/?a0a4","webpack://_N_E/./src/components/NumberFormat/index.tsx","webpack://_N_E/./src/components/ResponsiveTable/index.tsx","webpack://_N_E/./src/components/StickyContainer/index.tsx","webpack://_N_E/./src/components/Term/index.tsx","webpack://_N_E/./src/views/1_experimental-data/schaffer-collaterals/SCAnatomySection.tsx","webpack://_N_E/./src/components/TextWithRefs/index.tsx","webpack://_N_E/./src/views/1_experimental-data/schaffer-collaterals/SCSynapsePhysiologySection.tsx","webpack://_N_E/./src/views/1_experimental-data/SchafferCollaterals.tsx","webpack://_N_E/./src/pages/experimental-data/schaffer-collaterals.tsx","webpack://_N_E/./src/terms.tsx","webpack://_N_E/./src/components/ResponsiveTable/styles.module.scss","webpack://_N_E/./src/components/StickyContainer/styles.module.scss","webpack://_N_E/./src/components/Term/styles.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/experimental-data/schaffer-collaterals\",\n      function () {\n        return require(\"private-next-pages/experimental-data/schaffer-collaterals.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/experimental-data/schaffer-collaterals\"])\n      });\n    }\n  ","import React from 'react';\n\n\ntype NumberFormatProps = {\n  value?: any;\n  significantFigures?: number;\n  thousandSeparator?: boolean;\n  prefix?: string;\n  suffix?: string;\n};\n\nexport function formatNumber(value, significantFigures = 5, thousandSeparator = true, prefix = '', suffix = '') {\n  const num = parseFloat(value);\n\n  if (!Number.isFinite(num)) return value;\n\n  const formatted = thousandSeparator\n    ? num.toLocaleString('en', { maximumSignificantDigits: significantFigures })\n    : num.toPrecision(significantFigures);\n\n  return `${prefix}${formatted}${suffix}`;\n}\n\nconst NumberFormat: React.FC<NumberFormatProps> = ({\n  value,\n  significantFigures = 5,\n  thousandSeparator = true,\n  prefix = '',\n  suffix = '',\n}) => {\n  return formatNumber(value, significantFigures, thousandSeparator, prefix, suffix);\n}\n\n\nexport default NumberFormat;\n","import React, { useEffect, useState } from 'react';\nimport { Table } from 'antd';\nimport { ColumnType as AntColumnType, ColumnGroupType as AntColumnGroupType, TableProps } from 'antd/lib/table';\nimport { Breakpoint } from 'antd/lib/_util/responsiveObserve';\n\nimport classes from './styles.module.scss';\n\ninterface ColumnType<Type extends object & { isHighlight?: boolean }> extends Omit<AntColumnType<Type>, 'dataIndex'> {\n  dataIndex?: keyof Type;\n}\ninterface GroupColumnType<Type extends object & { isHighlight?: boolean }> extends AntColumnGroupType<Type> { }\n\ninterface ResponsiveTableProps<Type extends object & { isHighlight?: boolean }> extends Omit<TableProps<Type>, 'columns'> {\n  data?: Type[];\n  columns: (ColumnType<Type> | GroupColumnType<Type>)[] | any;\n}\n\nconst renderHighlightValue = (record) => (nestedValue, _value) =>\n  highlightValue(nestedValue, record.isHighlight);\n\nconst highlightValue = (nestedValue, isHighlight) =>\n  isHighlight ? <div className=\"text-bold\">{nestedValue}</div> : nestedValue;\n\n// Utility function to calculate the width of text\nfunction calculateTextWidth(text: string, font: string = '16px Arial'): number {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  if (context) {\n    context.font = font;\n    return context.measureText(text).width;\n  }\n  return 0;\n}\n\nfunction ResponsiveTable<Type extends object & { isHighlight?: boolean }>({\n  columns,\n  data = [], // Provide a default value of an empty array\n  ...restProps\n}: ResponsiveTableProps<Type>) {\n  const [columnWidths, setColumnWidths] = useState<number[]>([]);\n  const font = '14px Arial'; // Set the font to match your table\n\n  useEffect(() => {\n    const newColumnWidths = columns.map((column) => {\n      const maxTextWidth = data.reduce((max, record) => {\n        const dataIndex = (column as ColumnType<Type>).dataIndex;\n        if (dataIndex && record[dataIndex] !== undefined) {\n          const text = String(record[dataIndex]);\n          const textWidth = calculateTextWidth(text, font);\n          return Math.max(max, textWidth);\n        }\n        return max;\n      }, 0);\n      return Math.min(maxTextWidth + 20, 200); // Add some padding and a max limit\n    });\n\n    setColumnWidths(newColumnWidths);\n  }, [columns, data]);\n\n  const expandableColumn = {\n    title: null,\n    dataIndex: null,\n    render: (_value, record, index) => {\n      const nestedTableData = columns\n        .map((column) => {\n          const dataIndex = (column as ColumnType<Type>).dataIndex;\n          if (dataIndex) {\n            return {\n              key: column.title,\n              value: record[dataIndex],\n            };\n          }\n\n          const children = (column as GroupColumnType<Type>).children;\n          if (children) {\n            const childrenValue = children.map((child) => (\n              <div key={child.key}>\n                {child.title}: {record[(child as ColumnType<Type>).dataIndex]}\n              </div>\n            ));\n            return {\n              key: column.title,\n              value: childrenValue,\n            };\n          }\n\n          return null;\n        })\n        .filter((item) => item !== null); // Filter out null values\n\n      const nestedColumns: ColumnType<{ key: any; value: any }>[] = [\n        {\n          dataIndex: 'key',\n          title: 'Field',\n          render: renderHighlightValue(record),\n        },\n        {\n          dataIndex: 'value',\n          title: 'Value',\n          render: renderHighlightValue(record),\n        },\n      ];\n\n      return (\n        <Table\n          className=\"responsiveTable no-left-margin nested-table xs-column\"\n          rowClassName={index % 2 ? classes.responsiveTablEven : classes.responsiveTablOdd}\n          rowKey={(record: any, index) => `${record.key}__${index}`}\n          showHeader={false}\n          columns={nestedColumns}\n          tableLayout=\"auto\" // Use auto layout for nested table as well\n          dataSource={nestedTableData as object[]} // Ensure dataSource does not contain null values\n          pagination={false}\n        />\n      );\n    },\n    responsive: ['xs' as Breakpoint],\n  };\n\n  const tableColumns = columns\n    .map((column, index) => ({\n      ...column,\n      title: column.title,\n      dataIndex: (column as ColumnType<Type>).dataIndex,\n      responsive: ['sm' as Breakpoint],\n      render: (value: any, record: Type, index: number) =>\n        highlightValue(column.render ? column.render(value, record, index) : value, record.isHighlight),\n      children: (column as GroupColumnType<Type>).children?.map((child) => ({\n        render: (value: any, record: Type) => highlightValue(value, record.isHighlight),\n        ...child,\n      })),\n      width: column.key === 'yourSpecificKey' ? columnWidths[index] : undefined, // Set width dynamically for a specific column\n    }))\n    .concat(expandableColumn as any);\n\n  const { className = '' } = restProps;\n\n  return (\n    <Table<Type>\n      bordered\n      size=\"small\"\n      scroll={{ x: true }}\n      rowKey={(record: any) => record.key || `${record.dataIndex}__`}\n      pagination={false}\n      columns={tableColumns}\n      dataSource={data}\n      rowClassName={(record: Type, index: number) => (index % 2 ? classes.responsiveTablEven : classes.responsiveTablOdd)}\n      {...restProps}\n      className={`responsiveTable no-left-margin nested-table xs-column text-nowrap ${className}`}\n      tableLayout=\"auto\" // Ensure layout is auto for dynamic column sizing\n    />\n  );\n}\n\nexport default ResponsiveTable;","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\ninterface StickyContainerProps {\n  centered?: boolean;\n  children: React.ReactNode;\n}\n\nconst StickyContainer: React.FC<StickyContainerProps> = ({ centered, children }) => (\n  <div className={styles.flexWrapper}>\n    <div className={classNames(styles.container, centered ? styles['container--centered'] : '')}>\n      {children}\n    </div>\n  </div >\n);\n\nexport default StickyContainer;","import React from 'react';\nimport { Tooltip } from 'antd';\n\nimport { TermDescription } from '@/terms';\n\nimport style from './styles.module.scss';\n\ntype TermProps = {\n  term: string;\n  description?: any;\n  className?: string;\n};\n\ntype TermFormatter = (term: string) => string;\n\nexport const termFactory = (termDescription: TermDescription = {}, termFormatter?: TermFormatter) => {\n  const Term: React.FC<TermProps> = ({ className, term, description }) => {\n    const currentDescription = description || termDescription[term];\n    const formattedTerm = termFormatter\n      ? termFormatter(term)\n      : term;\n\n    if (!currentDescription) {\n      return (<span className={className}>{formattedTerm}</span>);\n    }\n\n    return (\n      <Tooltip title={currentDescription} destroyTooltipOnHide={true}>\n        <span className={`${style.container} ${className ?? ''}`}>{formattedTerm}</span>\n      </Tooltip>\n    );\n  };\n\n  return Term;\n};\n","import React, { useEffect, useState } from 'react';\nimport { FixedType } from 'rc-table/lib/interface';\n\nimport ResponsiveTable from '@/components/ResponsiveTable';\nimport NumberFormat from '@/components/NumberFormat';\nimport { downloadAsJson } from '@/utils';\nimport DownloadButton from '@/components/DownloadButton';\nimport { dataPath } from '@/config';\n\ntype TableEntry = {\n  from: string;\n  to: string;\n  expFeature: string;\n  min: number;\n  max: number;\n  mean: number;\n  sd: number | string;\n  sem: number | string;\n  species: string;\n  weight: string;\n  region: string;\n  nAnimals: number | string;\n  nSynapses: number | string;\n  ref: string;\n  ref_link: string | null;\n};\n\ntype SCAnatomySectionProps = {\n  theme?: number;\n};\n\nconst SCAnatomySection: React.FC<SCAnatomySectionProps> = ({ theme }) => {\n  const [anatomyData, setAnatomyData] = useState<TableEntry[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const anatomyResponse = await fetch(`${dataPath}/1_experimental-data/schaffer-collaterals/sc-anatomy.json`);\n      const anatomyJson = await anatomyResponse.json();\n      setAnatomyData(anatomyJson);\n    };\n\n    fetchData();\n  }, []);\n\n  const anatomyColumns = [\n    {\n      title: 'From',\n      dataIndex: 'from' as keyof TableEntry,\n    },\n    {\n      title: 'To',\n      dataIndex: 'to' as keyof TableEntry,\n    },\n    {\n      title: 'Exp. feature',\n      dataIndex: 'expFeature' as keyof TableEntry,\n    },\n    {\n      title: 'Min',\n      dataIndex: 'min' as keyof TableEntry,\n      render: (min: number) => <NumberFormat value={min} />\n    },\n    {\n      title: 'Max',\n      dataIndex: 'max' as keyof TableEntry,\n      render: (max: number) => <NumberFormat value={max} />\n    },\n    {\n      title: 'Mean',\n      dataIndex: 'mean' as keyof TableEntry,\n      render: (mean: number) => <NumberFormat value={mean} />\n    },\n    {\n      title: 'SD',\n      dataIndex: 'sd' as keyof TableEntry,\n      render: (sd: number | string) => <NumberFormat value={sd} />\n    },\n    {\n      title: 'SEM',\n      dataIndex: 'sem' as keyof TableEntry,\n      render: (sem: number | string) => <NumberFormat value={sem} />\n    },\n    {\n      title: 'Species',\n      dataIndex: 'species' as keyof TableEntry,\n    },\n    {\n      title: 'Weight',\n      dataIndex: 'weight' as keyof TableEntry,\n    },\n    {\n      title: 'Region',\n      dataIndex: 'region' as keyof TableEntry,\n    },\n    {\n      title: 'N Animals',\n      className: 'text-nowrap',\n      dataIndex: 'nAnimals' as keyof TableEntry,\n    },\n    {\n      title: 'N synapses',\n      className: 'text-nowrap',\n      dataIndex: 'nSynapses' as keyof TableEntry,\n    },\n    {\n      title: 'Reference',\n      dataIndex: 'ref' as keyof TableEntry,\n      render: (text: string, record: TableEntry) =>\n        record.ref_link ? (\n          <a href={record.ref_link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {text}\n          </a>\n        ) : (\n          text\n        ),\n    },\n  ];\n\n  return (\n    <>\n      <ResponsiveTable<TableEntry>\n        className=\"mt-3\"\n        data={anatomyData}\n        columns={anatomyColumns}\n        rowKey={({ from, to, mean }) => `${from}_${to}_${mean}`}\n      />\n      <div className=\"mt-4\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(\n            anatomyData,\n            `SC-Anatomy-Data.json`\n          )}\n        >\n          SC Anatomy Data\n        </DownloadButton>\n      </div>\n    </>\n  );\n};\n\nexport default SCAnatomySection;","import React from 'react';\n\n\ntype TextWithRefsProps = {\n  text: string;\n  doiIndex: Record<string, string>;\n};\n\nfunction createLink(doi, label) {\n  return `<a href=\"https://doi.org/${doi}\" target=\"_blank\" rel=\"noopener noreferrer\">${label}</a>`\n}\n\nconst TextWithRefs: React.FC<TextWithRefsProps> = ({ text, doiIndex }) => {\n  const refs = Object.keys(doiIndex);\n\n  const html = refs.reduce((html, ref) => {\n    const doi = doiIndex[ref];\n\n    return html.replaceAll(ref, createLink(doi, ref));\n  }, text);\n\n  return (\n    <span dangerouslySetInnerHTML={{ __html: html }}  />\n  );\n};\n\n\nexport default TextWithRefs;\n","import React, { useEffect, useState } from 'react';\nimport ResponsiveTable from '@/components/ResponsiveTable';\nimport NumberFormat from '@/components/NumberFormat';\nimport TextWithRefs from '@/components/TextWithRefs';\nimport { downloadAsJson } from '@/utils';\nimport { termFactory } from '@/components/Term';\nimport { pathwayDescription } from '@/terms';\n\nimport { dataPath } from '@/config';\n\n\nimport DownloadButton from '@/components/DownloadButton';\n\nconst Term = termFactory(pathwayDescription);\n\ntype TableEntry = {\n  expFeature: string;\n  mean: number;\n  sd: number | string;\n  sem: number | string;\n  species: string;\n  age?: string;\n  weight?: string;\n  region: string;\n  nAnimals: number | string;\n  nCells: number | string;\n  ref: string;\n  unit: string;\n}\n\ntype SynapsePhysiologyData = {\n  'sc-exc': {\n    PSPMagnitudeAndVariability: TableEntry[];\n    PSPKinetics: TableEntry[];\n    NMDAKinetics: TableEntry[];\n    ShortTermPlasticity: TableEntry[];\n  };\n  'sc-inh': {\n    PSCMagnitude: TableEntry[];\n    PSPKinetics: TableEntry[];\n    NMDAKinetics: TableEntry[];\n    ShortTermPlasticity: TableEntry[];\n  };\n}\n\ntype SCSynapsePhysiologySectionProps = {\n  theme?: number;\n}\n\nconst SCSynapsePhysiologySection: React.FC<SCSynapsePhysiologySectionProps> = ({ theme }) => {\n  const [synapsePhysiologyData, setSynapsePhysiologyData] = useState<SynapsePhysiologyData | null>(null);\n  const [doiIndex, setDoiIndex] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const synapsePhysiologyResponse = await fetch(`${dataPath}/1_experimental-data/schaffer-collaterals/sc-synaptic-physiology.json`);\n      const synapsePhysiologyJson = await synapsePhysiologyResponse.json();\n      setSynapsePhysiologyData(synapsePhysiologyJson);\n\n      const doiResponse = await fetch(`${dataPath}/1_experimental-data/schaffer-collaterals/ref-doi.json`);\n      const doiJson = await doiResponse.json();\n      setDoiIndex(doiJson);\n    };\n\n    fetchData();\n  }, []);\n\n  const synapsePhysiologyColumns = [\n    {\n      title: 'Exp. feature',\n      dataIndex: 'expFeature' as keyof TableEntry,\n      render: (feature: string) => (<Term term={feature} />),\n      width: 180,\n    },\n    {\n      title: 'Mean',\n      dataIndex: 'mean' as keyof TableEntry,\n      render: (mean: number) => <NumberFormat value={mean} />,\n      width: 50,\n    },\n    {\n      title: 'SD',\n      dataIndex: 'sd' as keyof TableEntry,\n      render: (sd: number | string) => <NumberFormat value={sd} />,\n      width: 50,\n    },\n    {\n      title: 'SEM',\n      dataIndex: 'sem' as keyof TableEntry,\n      render: (sem: number | string) => <NumberFormat value={sem} />,\n      width: 50,\n    },\n    {\n      title: 'Unit',\n      dataIndex: 'unit' as keyof TableEntry,\n      width: 50,\n    },\n    {\n      title: 'Species',\n      dataIndex: 'species' as keyof TableEntry,\n      width: 136,\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age' as keyof TableEntry,\n      width: 142,\n    },\n    {\n      title: 'Weight',\n      dataIndex: 'weight' as keyof TableEntry,\n      width: 142,\n    },\n    {\n      title: 'Region',\n      dataIndex: 'region' as keyof TableEntry,\n      width: 50,\n    },\n    {\n      title: 'N cells',\n      className: 'text-nowrap',\n      dataIndex: 'nCells' as keyof TableEntry,\n      width: 50,\n    },\n    {\n      title: 'Reference',\n      dataIndex: 'ref' as keyof TableEntry,\n      render: (text: string) => <TextWithRefs text={text} doiIndex={doiIndex} />\n    },\n  ];\n\n  const synapsePhysiologyWOWeightColumns = synapsePhysiologyColumns.filter(column => column.title !== 'Weight');\n  const synapsePhysiologyWOAgeColumns = synapsePhysiologyColumns.filter(column => column.title !== 'Age');\n\n  if (!synapsePhysiologyData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <h2 className='text-xl mt-12'>SC → Exc</h2>\n      <h3 className=\"mt-3  mb-3 text-lg\">PSP Magnitude and Variability</h3>\n      <ResponsiveTable<TableEntry>\n        className=\"mt-2 mb-3\"\n        data={synapsePhysiologyData['sc-exc'].PSPMagnitudeAndVariability}\n        columns={synapsePhysiologyWOAgeColumns}\n        rowKey={({ expFeature, mean }) => `${expFeature}_${mean}`}\n      />\n\n      <h3 className='mt-3 text-lg'>PSP Kinetics</h3>\n      <ResponsiveTable<TableEntry>\n        className=\"mt-2 mb-3\"\n        data={synapsePhysiologyData['sc-exc'].PSPKinetics}\n        columns={synapsePhysiologyWOAgeColumns}\n        rowKey={({ expFeature, mean }) => `${expFeature}_${mean}`}\n      />\n\n      <h3 className='mt-3 text-lg'>NMDA Kinetics</h3>\n      <ResponsiveTable<TableEntry>\n        className=\"mt-2 mb-3\"\n        data={synapsePhysiologyData['sc-exc'].NMDAKinetics}\n        columns={synapsePhysiologyWOWeightColumns}\n        rowKey={({ expFeature, mean }) => `${expFeature}_${mean}`}\n      />\n\n      <h3 className='mt-3 text-lg'>Short Term Plasticity</h3>\n      <ResponsiveTable<TableEntry>\n        className=\"mt-2 mb-3\"\n        data={synapsePhysiologyData['sc-exc'].ShortTermPlasticity}\n        columns={synapsePhysiologyWOWeightColumns}\n        rowKey={({ expFeature, mean }) => `${expFeature}_${mean}`}\n      />\n\n      <h2 className='text-xl mt-12 mb-3'>SC → Inh</h2>\n\n      <h3 className='text-xl'>PSC Magnitude</h3>\n      <ResponsiveTable<TableEntry>\n        className=\"mt-2 mb-3\"\n        data={synapsePhysiologyData['sc-inh'].PSCMagnitude}\n        columns={synapsePhysiologyWOWeightColumns}\n        rowKey={({ expFeature, mean }) => `${expFeature}_${mean}`}\n      />\n\n      <h3 className='text-lg mt-10'>SP Kinetics</h3>\n      <ResponsiveTable<TableEntry>\n        className=\"mt-2 mb-3\"\n        data={synapsePhysiologyData['sc-inh'].PSPKinetics}\n        columns={synapsePhysiologyWOWeightColumns}\n        rowKey={({ expFeature, mean }) => `${expFeature}_${mean}`}\n      />\n\n      <h3 className='text-lg mt-10'>NMDA Kinetics</h3>\n      <ResponsiveTable<TableEntry>\n        className=\"mt-2 mb-3\"\n        data={synapsePhysiologyData['sc-inh'].NMDAKinetics}\n        columns={synapsePhysiologyWOWeightColumns}\n        rowKey={({ expFeature, mean }) => `${expFeature}_${mean}`}\n      />\n\n      <h3 className='text-lg mt-10'>Short Term Plasticity</h3>\n      <ResponsiveTable<TableEntry>\n        className=\"mt-2 mb-3\"\n        data={synapsePhysiologyData['sc-inh'].ShortTermPlasticity}\n        columns={synapsePhysiologyWOWeightColumns}\n        rowKey={({ expFeature, mean }) => `${expFeature}_${mean}`}\n      />\n\n      <div className=\"mt-4\">\n        <DownloadButton\n          theme={theme}\n          onClick={() => downloadAsJson(\n            synapsePhysiologyData,\n            `SC-Synapse-Physiology-Data.json`\n          )}\n        >\n          SC Synapse Physiology Data\n        </DownloadButton>\n      </div>\n    </>\n  );\n};\n\nexport default SCSynapsePhysiologySection;","import React from 'react';\nimport Link from 'next/link';\n\n// Component Imports\nimport Filters from '@/layouts/Filters';\nimport StickyContainer from '@/components/StickyContainer';\nimport Title from '@/components/Title';\nimport InfoBox from '@/components/InfoBox';\nimport DataContainer from '@/components/DataContainer';\nimport Collapsible from '@/components/Collapsible';\n\n// Section Component Imports\nimport SCAnatomySection from './schaffer-collaterals/SCAnatomySection';\nimport SCSynapsePhysiologySection from './schaffer-collaterals/SCSynapsePhysiologySection';\n\nconst SchafferCollateralsView: React.FC = () => {\n  const theme = 1;\n\n  return (\n    <>\n      {/* Filters Section */}\n      <Filters theme={theme} hasData={true}>\n        <div className=\"flex flex-col lg:flex-row w-full lg:items-center mt-40 lg:mt-0\">\n          <div className=\"w-full md:flex-none mb-8 md:mb-8 lg:pr-0\">\n            <StickyContainer>\n              <Title\n                title=\"Schaffer Collaterals\"\n                subtitle=\"Experimental Data\"\n                theme={theme}\n              />\n              <div role=\"information\">\n                <InfoBox>\n                  <p>\n                    Schaffer collaterals are axons that arise from the CA3 pyramidal neurons\n                    and create synapses onto the CA1 neurons. They represent the main input to the CA1.\n                  </p>\n                </InfoBox>\n              </div>\n            </StickyContainer>\n          </div>\n        </div>\n      </Filters>\n\n      {/* Data Container Section */}\n      <DataContainer\n        theme={theme}\n        navItems={[\n          { id: 'anatomySection', label: 'Anatomy' },\n          { id: 'synapsePhysiologySection', label: 'Synapse physiology' },\n        ]}\n      >\n        <Collapsible\n          id=\"anatomySection\"\n          title=\"Anatomy\"\n        >\n          <p className=\"mb-4\">\n            Here we report the anatomical measurements on the connectivity established by\n            Schaffer collaterals with excitatory (Exc) and inhibitory (Inh) neurons in CA1.\n          </p>\n          <SCAnatomySection theme={theme} />\n        </Collapsible>\n\n        <Collapsible\n          id=\"synapsePhysiologySection\"\n          className=\"mt-3\"\n          title=\"Synapse physiology\"\n        >\n          <p className='text--base'>\n            Data about synapse physiology are divided into two main groups: one where we report\n            data on connections between Schaffer collaterals and excitatory neurons (SC→Exc) and\n            the other, between Schaffer collaterals and inhibitory neurons (SC→Inh). Similar to\n            the connection <Link href=\"/experimental-data/connection-physiology/\">physiology section</Link>,\n            data consists of postsynaptic potentials and currents, and receptors properties.\n            The dataset also includes the EPSP-IPSP latency, which is particularly important to\n            reproduce the feedforward inhibition of the SC.\n          </p>\n          <SCSynapsePhysiologySection theme={theme} />\n        </Collapsible>\n      </DataContainer>\n    </>\n  );\n};\n\nexport default SchafferCollateralsView;","import Head from 'next/head';\nimport SchafferCollateralsView from '@/views/1_experimental-data/SchafferCollaterals';\n\nexport default function SchafferCollateralsPage() {\n  const metadata = {\n    title: 'Schaffer Collaterals - Experimental Data | The Hippocampus Hub',\n    description:\n      'Explore detailed experimental data on Schaffer collaterals, including anatomical and physiological properties. Schaffer collaterals are axons that arise from CA3 pyramidal neurons and form synapses with CA1 neurons, providing critical input to the hippocampus.',\n    keywords: [\n      'Schaffer Collaterals',\n      'Hippocampus',\n      'Experimental Data',\n      'Neuroscience',\n      'CA3 Pyramidal Neurons',\n      'CA1 Neurons',\n      'Axons',\n      'Synapses',\n      'Blue Brain Project',\n    ],\n    author: 'Blue Brain Project',\n    creator: 'EPFL Blue Brain Project',\n    publisher: 'The Hippocampus Hub',\n  };\n\n  return (\n    <>\n      <Head>\n        <title>{metadata.title}</title>\n        <meta name=\"description\" content={metadata.description} />\n        <meta name=\"keywords\" content={metadata.keywords.join(', ')} />\n        <meta name=\"author\" content={metadata.author} />\n        <meta name=\"creator\" content={metadata.creator} />\n        <meta name=\"publisher\" content={metadata.publisher} />\n      </Head>\n\n      <SchafferCollateralsView />\n    </>\n  );\n}","import React from 'react';\n\nexport type TermDescription = Record<string, string>;\n\n\nexport const layerDescription: TermDescription = {\n  SLM: 'Stratum Lacunosum-Moleculare',\n  SR: 'Stratum Radiatum',\n  SP: 'Stratum Pyramidal',\n  SO: 'Stratum Oriens',\n};\n\nexport const mtypeDescription: TermDescription = {\n  PPA: 'Perforant Pathway Associated Cell',\n  SCA: 'Schaffer Collateral Associated Cell',\n  AA: 'Axon Axonic Cell',\n  BS: 'Bistratified Cell',\n  PVBC: 'PV+ Basket Cell',\n  CCKBC: 'CCK+ Basket Cell',\n  PC: 'Pyramidal Cell',\n  BP: 'Back-Projecting Cell',\n  OLM: 'Oriens Lacunosum-Moleculare Cell',\n  Tri: 'Trilaminar Cell',\n  Ivy: 'Ivy Cell',\n};\n\nexport const stypeDescription: TermDescription = {\n  E1: 'Excitatory facilitating',\n  E2: 'Excitatory depressing',\n  I1: 'Inhibitory facilitating',\n  I2: 'Inhibitory depressing',\n  I3: 'Inhibitory pseudo linear',\n};\n\nexport const etypeDescription: TermDescription = {\n  cADpyr: 'continuous Accommodating (Adapting) for pyramidal cells',\n  cAC: 'continuous Accommodating',\n  bAC: 'burst Accommodating',\n  cNAC: 'continuous Non-accommodating',\n  bNAC: 'burst Non-accommodating',\n  dNAC: 'delayed Non-accommodating',\n  cSTUT: 'continuous Stuttering',\n  bSTUT: 'burst Stuttering',\n  dSTUT: 'delayed Stuttering',\n  cIR: 'continuous Irregular',\n  bIR: 'burst Irregular',\n};\n\nexport const pathwayDescription: TermDescription = {\n  gsyn: 'The peak conductance (in nS) for a single synaptic contact',\n  U: 'Utilization of synaptic efficacy - analogous to the transmitter release probability at a single synaptic contact',\n  D: 'Time constant (in ms) for recovery from depression',\n  F: 'Time constant (in ms) for recovery from facilitation',\n};\n\nexport const formattedTerm: Record<string, React.ReactNode> = {\n  gsyn: (<span>g<sub>syn</sub></span>),\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"responsiveTable\":\"styles_responsiveTable__njQH4\",\"ant-table-cell\":\"styles_ant-table-cell__Fj0OS\",\"ant-table-cell-auto\":\"styles_ant-table-cell-auto__Yw8kj\",\"responsiveTablOdd\":\"styles_responsiveTablOdd__ix6_m\",\"responsiveTablEven\":\"styles_responsiveTablEven__sIcPO\",\"highlightBackground\":\"styles_highlightBackground__eWdTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__31D34\",\"container--center\":\"styles_container--center__Yuntq\",\"flexWrapper\":\"styles_flexWrapper___gDLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__pHcWR\"};"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","value","significantFigures","thousandSeparator","prefix","suffix","param","formatNumber","num","parseFloat","Number","isFinite","formatted","toLocaleString","maximumSignificantDigits","toPrecision","concat","renderHighlightValue","nestedValue","_value","highlightValue","record","isHighlight","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","columns","data","restProps","columnWidths","setColumnWidths","useState","useEffect","newColumnWidths","map","maxTextWidth","reduce","max","dataIndex","column","undefined","text","String","textWidth","calculateTextWidth","font","canvas","document","createElement","context","getContext","measureText","width","Math","min","tableColumns","index","_column_children","title","responsive","render","children","child","key","nestedTableData","childrenValue","jsxs","filter","item","nestedColumns","Table","rowClassName","classes","rowKey","showHeader","tableLayout","dataSource","pagination","bordered","size","scroll","x","centered","styles","classNames","termFactory","termDescription","termFormatter","term","description","currentDescription","formattedTerm","Tooltip","destroyTooltipOnHide","span","style","schaffer_collaterals_SCAnatomySection","theme","anatomyData","setAnatomyData","fetchData","anatomyResponse","fetch","dataPath","anatomyJson","json","jsx_runtime","Fragment","ResponsiveTable","NumberFormat","mean","sd","sem","ref_link","a","href","target","rel","from","to","DownloadButton","onClick","downloadAsJson","components_TextWithRefs","doiIndex","refs","Object","keys","html","ref","doi","replaceAll","label","dangerouslySetInnerHTML","__html","Term","pathwayDescription","schaffer_collaterals_SCSynapsePhysiologySection","synapsePhysiologyData","setSynapsePhysiologyData","setDoiIndex","synapsePhysiologyResponse","synapsePhysiologyJson","doiResponse","doiJson","synapsePhysiologyColumns","feature","TextWithRefs","synapsePhysiologyWOWeightColumns","synapsePhysiologyWOAgeColumns","h2","h3","PSPMagnitudeAndVariability","expFeature","PSPKinetics","NMDAKinetics","ShortTermPlasticity","PSCMagnitude","SchafferCollaterals","Filters","hasData","StickyContainer","Title","subtitle","role","InfoBox","p","DataContainer","navItems","id","Collapsible","SCAnatomySection","Link","SCSynapsePhysiologySection","SchafferCollateralsPage","metadata","keywords","author","creator","publisher","Head","meta","name","content","join","SchafferCollateralsView","layerDescription","SLM","SR","SP","SO","mtypeDescription","PPA","SCA","AA","BS","PVBC","CCKBC","PC","BP","OLM","Tri","Ivy","stypeDescription","E1","E2","I1","I2","I3","etypeDescription","cADpyr","cAC","bAC","cNAC","bNAC","dNAC","cSTUT","bSTUT","dSTUT","cIR","bIR","gsyn","U","D","F","module","exports"],"sourceRoot":""}