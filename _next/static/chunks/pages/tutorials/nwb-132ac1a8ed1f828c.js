(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4751],{82885:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorials/nwb",function(){return s(15011)}])},78433:function(e,t,s){"use strict";var n=s(85893),i=s(67294);t.Z=e=>{let{title:t,subtitle:s,theme:a=1,primary:o,isDark:l=!1}=e,[r,d]=(0,i.useState)(!1);return(0,i.useEffect)(()=>{console.log("isDark:",l),d(!0)},[l]),(0,n.jsxs)("div",{className:"".concat("title__","basis ").concat(o?"primary":""," theme-").concat(a),children:[s&&!o&&(0,n.jsx)("h4",{className:"text-xl text-theme-".concat(a," m duration-1000 delay-200 transition-opacity transform ").concat(r?"opacity-100 translate-y-0":"opacity-0 translate-y-10"),children:s}),t&&(0,n.jsx)("h2",{role:"title",className:"text-3xl border-theme-".concat(a," transition-transform duration-1000 ").concat(r?"translate-y-0":"translate-y-20"," ").concat(l?"text-black":"text-white"),children:t})]})}},8324:function(e,t,s){"use strict";var n=s(85893);s(67294),t.Z=e=>{let{children:t}=e;return(0,n.jsx)("div",{className:"".concat("full-page__","basis"),children:t})}},15011:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return Glossary}});var n=s(85893);s(67294);var i=s(9008),a=s.n(i),o=s(41664),l=s.n(o),r=s(25675),d=s.n(r),c=s(33881),h=s(6375),p=s(17931),m=s(78433),u=s(8324),x=s(60038),j=s.n(x);let Code=e=>{let{code:t,language:s,wrapLongLines:i}=e;return(0,n.jsx)(c.Z,{language:s,style:h.Z,wrapLongLines:i,customStyle:{fontSize:"14px"},children:t})},PythonCode=e=>{let{code:t}=e;return(0,n.jsx)(Code,{language:"python",code:t})},BashCode=e=>{let{code:t}=e;return(0,n.jsx)(Code,{language:"bash",code:t})},MatlabCode=e=>{let{code:t}=e;return(0,n.jsx)(Code,{language:"matlab",code:t})},PlaintextCode=e=>{let{code:t,wrapLongLines:s}=e;return(0,n.jsx)(Code,{language:"plaintext",code:t,wrapLongLines:s})};var Nwb=()=>(0,n.jsx)(u.Z,{children:(0,n.jsxs)("div",{className:j().container,children:[(0,n.jsx)(m.Z,{title:"How to read NWB files tutorial",primaryColor:"grey-1"}),(0,n.jsx)("h2",{children:"Introduction"}),(0,n.jsx)("p",{children:"NWB files can be read in the following ways:"}),(0,n.jsxs)("ul",{children:[(0,n.jsxs)("li",{children:[(0,n.jsx)(l(),{href:"#pynwb-api",children:"Method 1"}),": Read NWB files in Python with ",(0,n.jsx)("a",{href:"https://github.com/NeurodataWithoutBorders/pynwb/",target:"_blank",rel:"noopener noreferrer",children:"PyNWB"})," (",(0,n.jsx)("a",{href:"https://pynwb.readthedocs.io/en/stable/tutorials/index.html",target:"_blank",rel:"noopener noreferrer",children:"official tutorial"}),")"]}),(0,n.jsxs)("li",{children:[(0,n.jsx)(l(),{href:"#matlab",children:"Method 2"}),": Read NWB files in Matlab with ",(0,n.jsx)("a",{href:"https://github.com/NeurodataWithoutBorders/matnwb/",target:"_blank",rel:"noopener noreferrer",children:"MatNWB"})," (",(0,n.jsx)("a",{href:"https://github.com/NeurodataWithoutBorders/matnwb#tutorials",target:"_blank",rel:"noopener noreferrer",children:"official tutorial"}),")"]})]}),(0,n.jsx)("h2",{children:"Installation instructions for PyNWB"}),(0,n.jsxs)("ol",{children:[(0,n.jsxs)("li",{children:["Install the latest version of ",(0,n.jsx)("a",{href:"https://conda.io/projects/conda/en/latest/user-guide/install/index.html",target:"_blank",rel:"noopener noreferrer",children:"Miniconda with Python 3"}),"."]}),(0,n.jsxs)("li",{children:["Create an environment and install ",(0,n.jsx)("code",{children:"pynwb"}),":",(0,n.jsx)(BashCode,{code:"conda create --name nwb python=3\nconda activate nwb\npip install pynwb==2"})]}),(0,n.jsxs)("li",{children:["If you want to explore these tutorials install ",(0,n.jsx)("code",{children:"jupyter"})," and ",(0,n.jsx)("code",{children:"matplotlib"}),":",(0,n.jsx)(BashCode,{code:"pip install jupyter matplotlib\njupyter notebook"})]})]}),(0,n.jsx)("h2",{id:"pynwb-api",children:"Method 1: Read NWB files with PyNWB API"}),(0,n.jsxs)("div",{className:j().section,children:[(0,n.jsx)("small",{children:"In [1]:"}),(0,n.jsx)(PythonCode,{code:"import numpy as np\nfrom pynwb import NWBHDF5IO\nimport matplotlib.pyplot as plt"}),(0,n.jsx)("p",{children:"Import and define convenience functions."}),(0,n.jsx)("small",{children:"In [2]:"}),(0,n.jsx)(PythonCode,{code:"from hdmf.common.hierarchicaltable import to_hierarchical_dataframe, flatten_column_index\n\ndef getNWBTimestamps(PatchClampSeries, absolute_time = False):\n    '''Generate timestamps for any PatchClampSeries object.\n    '''\n    data_shape = PatchClampSeries.data.shape\n    rate = PatchClampSeries.rate\n    starting_time = PatchClampSeries.starting_time\n\n    assert len(data_shape) == 1, 'Too many dimensions'\n    if absolute_time == False:\n        starting_time = 0.0\n    nsamples = data_shape[0]\n    timestamps = starting_time + np.linspace(0, nsamples/rate, nsamples)\n    return timestamps"}),(0,n.jsx)("h3",{children:"Load NWB file"}),(0,n.jsx)("small",{children:"In [3]:"}),(0,n.jsx)(PythonCode,{code:"filepath = '001_140709EXP_A1.nwb'"}),(0,n.jsx)("small",{children:"In [4]:"}),(0,n.jsx)(PythonCode,{code:"io = NWBHDF5IO(filepath, 'r', load_namespaces = True)\nnwbfile = io.read()"}),(0,n.jsx)("h3",{children:"Load all tables into memory"}),(0,n.jsx)("p",{children:"The easiest way to work with the data is to retrieve and combine all icephys tables in a single pandas DataFrame. This step can take some time."}),(0,n.jsxs)("p",{children:["For more details, please refer to the ",(0,n.jsx)("a",{href:"https://pynwb.readthedocs.io/en/stable/tutorials/domain/plot_icephys.html#sphx-glr-tutorials-domain-plot-icephys-py",target:"_blank",rel:"noopener noreferrer",children:"pynwb documentation"}),"."]}),(0,n.jsx)("small",{children:"In [5]:"}),(0,n.jsx)(PythonCode,{code:"# Consider using nwbfile.get_icephys_meta_parent_table() or nwbfile.icephys_experimental_conditions\n# instead of nwbfile.icephys_repetitions\ndf = to_hierarchical_dataframe(nwbfile.icephys_repetitions).reset_index()\ndf = flatten_column_index(df, max_levels = 2)"}),(0,n.jsx)("h3",{children:"Retrieve stimulus types"}),(0,n.jsxs)("p",{children:["Stimulus types (also known as protocols, patterns, sequential recordings, or just stimuli) are stored in a dedicated column (",(0,n.jsx)("code",{children:"stimulus_type"}),") in the ",(0,n.jsx)("code",{children:"sequential_recordings"})," table."]}),(0,n.jsx)("small",{children:"In [6]:"}),(0,n.jsx)(PythonCode,{code:"stimulus_types = sorted(df[('sequential_recordings','stimulus_type')].unique().tolist())"}),(0,n.jsx)("small",{children:"In [7]:"}),(0,n.jsx)(PythonCode,{code:"print(stimulus_types)"}),(0,n.jsx)(PlaintextCode,{wrapLongLines:!0,code:"['APWaveform', 'DeHyperPol', 'Delta', 'ElecCal', 'FirePattern', 'HyperDePol', 'IDRest', 'IDThres', 'IV', 'NegCheops', 'PosCheops', 'RPip', 'RSealClose', 'RSealOpen', 'Rac', 'ResetITC', 'SetAmpl', 'SetISI', 'SineSpec', 'SponHold3', 'SponHold30', 'SponNoHold30', 'StartHold', 'StartNoHold', 'TestAmpl', 'TestRheo', 'sAHP']"}),(0,n.jsx)("h3",{children:"Plot one stimulus-response pair"}),(0,n.jsx)("small",{children:"In [8]:"}),(0,n.jsx)(PythonCode,{code:"# Get stimulus and response traces\ntrace_no = 60\nS = df[('stimuli','stimulus')][trace_no][2] # \"2\" refers to an implementation detail\nR = df[('responses','response')][trace_no][2]"}),(0,n.jsx)("small",{children:"In [9]:"}),(0,n.jsx)(PythonCode,{code:"# Plot stimulus\nplt.plot(getNWBTimestamps(S), S.data[:] * S.conversion,'r')\nplt.xlabel('seconds')\n_ = plt.ylabel(S.unit)"}),(0,n.jsx)("div",{className:"mt-1 mb-1",children:(0,n.jsx)(d(),{src:"".concat(p.sb,"/assets/images/tutorials/nwb/stimulus.png"),width:"400",height:"273",alt:"Stimulus plot",className:"bg-almost-white"})}),(0,n.jsx)("small",{children:"In [10]:"}),(0,n.jsx)(PythonCode,{code:"# Plot response\nplt.plot(getNWBTimestamps(S), R.data[:] * R.conversion,'k')\nplt.xlabel('seconds')\n_ = plt.ylabel(R.unit)"}),(0,n.jsx)("div",{className:"mt-1 mb-1",children:(0,n.jsx)(d(),{src:"".concat(p.sb,"/assets/images/tutorials/nwb/response.png"),width:"400",height:"262",alt:"Response plot",className:"bg-almost-white"})}),(0,n.jsx)("h3",{children:"Retrieve and plot all traces of a given stimulus type (i.e. repetitions)"}),(0,n.jsx)("p",{children:"Choose one stimulus type from the list printed above."}),(0,n.jsx)("small",{children:"In [11]:"}),(0,n.jsx)(PythonCode,{code:"st = stimulus_types[0]"}),(0,n.jsx)("small",{children:"In [12]:"}),(0,n.jsx)(PythonCode,{code:"df_st = df[df[('sequential_recordings','stimulus_type')] == st]\nrepetitions = df_st[('repetitions','id')].unique().tolist()\n\nprint(f'Stimulus {st}, repetitions {repetitions}')"}),(0,n.jsx)(PythonCode,{code:"Stimulus APWaveform, repetitions [1, 2]"}),(0,n.jsx)("p",{children:"Plot traces for each repetition."}),(0,n.jsxs)("p",{children:["(Please note that in the code below it is assumed that for each stimulus there is a response, and vice versa. The tuple ",(0,n.jsx)("code",{children:"(start_index, index_count, PatchClampSeries)"}),"will only contain ",(0,n.jsx)("code",{children:"None"}),"'s if a trace does not exist.)"]}),(0,n.jsx)("small",{children:"In [13]:"}),(0,n.jsx)(PythonCode,{code:"fig, axs = plt.subplots(2, len(repetitions), figsize = (12,8), sharex = 'col', sharey = 'row', squeeze = False)\n\nfor idx, rep in enumerate(repetitions):\n\n    df_st_rep = df[(df[('sequential_recordings','stimulus_type')] == st) &\n                   (df[('repetitions','id')] == rep)]\n    stimuli = df_st_rep[('stimuli','stimulus')]\n    responses = df_st_rep[('responses','response')]\n\n    # S and R below are tuples: (start_index, index_count, PatchClampSeries)\n    for S in stimuli:\n        axs[0, idx].plot(getNWBTimestamps(S[2]), S[2].data[:] * S[2].conversion,'r')\n        axs[0, idx].set_ylabel(S[2].unit)\n        axs[0, idx].set_title(f'stimuli in repetition {idx+1}')\n\n    for R in responses:\n        axs[1, idx].plot(getNWBTimestamps(R[2]), R[2].data[:] * R[2].conversion,'k')\n        axs[1, idx].set_ylabel(R[2].unit)\n        axs[1, idx].set_title(f'responses in repetition {idx+1}')\n        axs[1, idx].set_xlabel('seconds')"}),(0,n.jsx)("div",{className:"mt-1",children:(0,n.jsx)(d(),{src:"".concat(p.sb,"/assets/images/tutorials/nwb/all-traces.png"),width:"735",height:"496",alt:"All trace plots",className:"bg-almost-white"})})]}),(0,n.jsx)("h2",{id:"matlab",children:"Method 2: Read NWB files in Matlab"}),(0,n.jsxs)("div",{className:j().section,children:[(0,n.jsx)("h3",{children:"Installation instructions"}),(0,n.jsx)("p",{children:"First download MatNWB. In a terminal type:"}),(0,n.jsx)(BashCode,{code:"git clone https://github.com/NeurodataWithoutBorders/matnwb.git"}),(0,n.jsxs)("p",{children:["This script has been tested on the commit ",(0,n.jsx)("code",{children:"276e462"})," implementing NWB schema v2.4.0, so you might want to check out to it:"]}),(0,n.jsx)(BashCode,{code:"cd matnwb\ngit checkout 276e462"}),(0,n.jsx)("p",{children:"In Matlab, add the matnwb folder and its subfolders to Path and generate the core classes:"}),(0,n.jsx)(MatlabCode,{code:"cd matnwb\naddpath(genpath(pwd));\ngenerateCore()"}),(0,n.jsx)("p",{children:"Then you can run this script."}),(0,n.jsxs)("p",{children:["For the full documentation visit ",(0,n.jsx)("a",{className:"word-break-all",href:"https://github.com/NeurodataWithoutBorders/matnwb#matnwb",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/NeurodataWithoutBorders/matnwb#matnwb"}),"."]}),(0,n.jsx)("h3",{children:"Read NWB file"}),(0,n.jsx)(MatlabCode,{code:"filename = '001_140709EXP_A1.nwb';\n\n% Read file.\nnwb = nwbRead(filename);"})]})]})});function Glossary(){return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a(),{children:[(0,n.jsx)("title",{children:"Tutorials - How to read NWB files / Hippocampus Hub Explore"}),(0,n.jsx)("meta",{name:"description",content:"How to read NWB files tutorial."})]}),(0,n.jsx)(Nwb,{})]})}},60038:function(e){e.exports={section:"nwb_section__rGI1_",container:"nwb_container__XY0bZ"}}},function(e){e.O(0,[5675,429,9774,2888,179],function(){return e(e.s=82885)}),_N_E=e.O()}]);