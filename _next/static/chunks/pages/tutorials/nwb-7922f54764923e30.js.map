{"version":3,"file":"static/chunks/pages/tutorials/nwb-7922f54764923e30.js","mappings":"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","sources":["webpack://_N_E/?f717","webpack://_N_E/./src/components/Title/index.tsx","webpack://_N_E/./src/layouts/FullPage/index.tsx","webpack://_N_E/./src/views/tutorials/nwb-code.ts","webpack://_N_E/./src/views/tutorials/Nwb.tsx","webpack://_N_E/./src/pages/tutorials/nwb.tsx","webpack://_N_E/./src/views/tutorials/nwb.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/tutorials/nwb\",\n      function () {\n        return require(\"private-next-pages/tutorials/nwb.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/tutorials/nwb\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport { Color } from '../../types';\n\nconst classPrefix = 'title__';\n\ntype TitleProps = {\n  title?: React.ReactChild;\n  subtitle?: string;\n  primaryColor?: Color;\n  theme?: number | null;\n  hint?: string;\n  primary?: boolean;\n  isDark?: boolean;\n};\n\nconst Title: React.FC<TitleProps> = ({\n  title,\n  subtitle,\n  theme = 1,\n  primary,\n  isDark = false,\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    console.log('isDark:', isDark); // Debugging statement\n    setIsVisible(true);\n  }, [isDark]);\n\n  return (\n    <div\n      className={`${classPrefix}basis ${primary ? 'primary' : ''} theme-${theme}`}\n    >\n      {subtitle && !primary && (\n        <h4\n          className={`text-xl text-theme-${theme} m duration-1000 delay-200 transition-opacity transform ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}\n        >\n          {subtitle}\n        </h4>\n      )}\n      {title && (\n        <h2\n          role=\"title\"\n          className={`text-3xl border-theme-${theme} transition-transform duration-1000 ${isVisible ? 'translate-y-0' : 'translate-y-20'} ${isDark ? 'text-black' : 'text-white'}`}\n        >\n          {title}\n        </h2>\n      )}\n    </div>\n  );\n};\n\nexport default Title;","import React, { ReactChild, ReactFragment } from 'react';\n\n// import './style.scss';\n\nconst classPrefix = 'full-page__';\n\ntype FullPageProps = {\n  children?: ReactChild | ReactFragment;\n};\n\nconst FullPage: React.FC<FullPageProps> = ({ children }) => {\n  return <div className={`${classPrefix}basis`}>{children}</div>;\n};\n\nexport default FullPage;\n","\nconst pynwbInstallCode = `conda create --name nwb python=3\nconda activate nwb\npip install pynwb==2`;\n\nconst jupyterInstallCode = `pip install jupyter matplotlib\njupyter notebook`;\n\nconst nwbApi1 = `import numpy as np\nfrom pynwb import NWBHDF5IO\nimport matplotlib.pyplot as plt`;\n\nconst nwbApi2 = `from hdmf.common.hierarchicaltable import to_hierarchical_dataframe, flatten_column_index\n\ndef getNWBTimestamps(PatchClampSeries, absolute_time = False):\n    '''Generate timestamps for any PatchClampSeries object.\n    '''\n    data_shape = PatchClampSeries.data.shape\n    rate = PatchClampSeries.rate\n    starting_time = PatchClampSeries.starting_time\n\n    assert len(data_shape) == 1, 'Too many dimensions'\n    if absolute_time == False:\n        starting_time = 0.0\n    nsamples = data_shape[0]\n    timestamps = starting_time + np.linspace(0, nsamples/rate, nsamples)\n    return timestamps`;\n\nconst nwbApi3 = `filepath = '001_140709EXP_A1.nwb'`;\n\nconst nwbApi4 = `io = NWBHDF5IO(filepath, 'r', load_namespaces = True)\nnwbfile = io.read()`;\n\nconst nwbApi5 = `# Consider using nwbfile.get_icephys_meta_parent_table() or nwbfile.icephys_experimental_conditions\n# instead of nwbfile.icephys_repetitions\ndf = to_hierarchical_dataframe(nwbfile.icephys_repetitions).reset_index()\ndf = flatten_column_index(df, max_levels = 2)`;\n\nconst nwbApi6 = `stimulus_types = sorted(df[('sequential_recordings','stimulus_type')].unique().tolist())`;\n\nconst nwbApi7_1 = `print(stimulus_types)`;\nconst nwbApi7_2 = `['APWaveform', 'DeHyperPol', 'Delta', 'ElecCal', 'FirePattern', 'HyperDePol', 'IDRest', 'IDThres', 'IV', 'NegCheops', 'PosCheops', 'RPip', 'RSealClose', 'RSealOpen', 'Rac', 'ResetITC', 'SetAmpl', 'SetISI', 'SineSpec', 'SponHold3', 'SponHold30', 'SponNoHold30', 'StartHold', 'StartNoHold', 'TestAmpl', 'TestRheo', 'sAHP']`;\n\nconst nwbApi8 = `# Get stimulus and response traces\ntrace_no = 60\nS = df[('stimuli','stimulus')][trace_no][2] # \"2\" refers to an implementation detail\nR = df[('responses','response')][trace_no][2]`;\n\nconst nwbApi9 = `# Plot stimulus\nplt.plot(getNWBTimestamps(S), S.data[:] * S.conversion,'r')\nplt.xlabel('seconds')\n_ = plt.ylabel(S.unit)`;\n\nconst nwbApi10 = `# Plot response\nplt.plot(getNWBTimestamps(S), R.data[:] * R.conversion,'k')\nplt.xlabel('seconds')\n_ = plt.ylabel(R.unit)`;\n\nconst nwbApi11 = `st = stimulus_types[0]`;\n\nconst nwbApi12_1 = `df_st = df[df[('sequential_recordings','stimulus_type')] == st]\nrepetitions = df_st[('repetitions','id')].unique().tolist()\n\nprint(f'Stimulus {st}, repetitions {repetitions}')`;\n\nconst nwbApi12_2 = `Stimulus APWaveform, repetitions [1, 2]`;\n\nconst nwbApi13 = `fig, axs = plt.subplots(2, len(repetitions), figsize = (12,8), sharex = 'col', sharey = 'row', squeeze = False)\n\nfor idx, rep in enumerate(repetitions):\n\n    df_st_rep = df[(df[('sequential_recordings','stimulus_type')] == st) &\n                   (df[('repetitions','id')] == rep)]\n    stimuli = df_st_rep[('stimuli','stimulus')]\n    responses = df_st_rep[('responses','response')]\n\n    # S and R below are tuples: (start_index, index_count, PatchClampSeries)\n    for S in stimuli:\n        axs[0, idx].plot(getNWBTimestamps(S[2]), S[2].data[:] * S[2].conversion,'r')\n        axs[0, idx].set_ylabel(S[2].unit)\n        axs[0, idx].set_title(f'stimuli in repetition {idx+1}')\n\n    for R in responses:\n        axs[1, idx].plot(getNWBTimestamps(R[2]), R[2].data[:] * R[2].conversion,'k')\n        axs[1, idx].set_ylabel(R[2].unit)\n        axs[1, idx].set_title(f'responses in repetition {idx+1}')\n        axs[1, idx].set_xlabel('seconds')`;\n\nconst matlabInstall1 = `git clone https://github.com/NeurodataWithoutBorders/matnwb.git`;\n\nconst matlabInstall2 = `cd matnwb\ngit checkout 276e462`;\n\nconst matlabInstall3 = `cd matnwb\naddpath(genpath(pwd));\ngenerateCore()`;\n\nconst matlab1 = `filename = '001_140709EXP_A1.nwb';\n\n% Read file.\nnwb = nwbRead(filename);`;\n\nconst nwbCode = {\n  pynwbInstallCode,\n  jupyterInstallCode,\n\n  nwbApi1,\n  nwbApi2,\n  nwbApi3,\n  nwbApi4,\n  nwbApi5,\n  nwbApi6,\n  nwbApi7_1,\n  nwbApi7_2,\n  nwbApi8,\n  nwbApi9,\n  nwbApi10,\n  nwbApi11,\n  nwbApi12_1,\n  nwbApi12_2,\n  nwbApi13,\n\n  matlabInstall1,\n  matlabInstall2,\n  matlabInstall3,\n\n  matlab1,\n};\n\nexport default nwbCode;\n","import React from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { LightAsync as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport solarizedDark from 'react-syntax-highlighter/dist/cjs/styles/hljs/solarized-dark';\n\nimport { basePath } from '../../config';\nimport Title from '../../components/Title';\nimport FullPage from '../../layouts/FullPage';\nimport { Color } from '../../types';\n\nimport code from './nwb-code';\n\nimport styles from './nwb.module.scss';\n\n\ntype CodeProps = {\n  code: string;\n  language: string;\n  wrapLongLines?: Boolean;\n};\n\nconst Code: React.FC<CodeProps> = ({ code, language, wrapLongLines })=> (\n  <SyntaxHighlighter\n    language={language}\n    style={solarizedDark}\n    wrapLongLines={wrapLongLines}\n    customStyle={{ fontSize: '14px' }}\n  >\n    {code}\n  </SyntaxHighlighter>\n);\n\nconst PythonCode = ({ code }) => (<Code language=\"python\" code={code} />);\nconst BashCode = ({ code }) => (<Code language=\"bash\" code={code} />);\nconst MatlabCode = ({ code }) => (<Code language=\"matlab\" code={code} />);\nconst PlaintextCode:React.FC<{ code: string, wrapLongLines?: Boolean }> = ({ code, wrapLongLines }) => (\n  <Code\n    language=\"plaintext\"\n    code={code}\n    wrapLongLines={wrapLongLines}\n  />\n);\n\nconst NwbTutorialView: React.FC = () => {\n  return (\n    <FullPage>\n      <div className={styles.container}>\n        <Title title=\"How to read NWB files tutorial\" primaryColor=\"grey-1\" />\n\n        <h2>Introduction</h2>\n\n        <p>NWB files can be read in the following ways:</p>\n\n        <ul>\n          <li>\n            <Link href=\"#pynwb-api\">Method 1</Link>: Read NWB files in Python with <a\n              href=\"https://github.com/NeurodataWithoutBorders/pynwb/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >PyNWB</a> (<a\n              href=\"https://pynwb.readthedocs.io/en/stable/tutorials/index.html\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >official tutorial</a>)\n          </li>\n          <li>\n            <Link href=\"#matlab\">Method 2</Link>: Read NWB files in Matlab with <a\n              href=\"https://github.com/NeurodataWithoutBorders/matnwb/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >MatNWB</a> (<a\n              href=\"https://github.com/NeurodataWithoutBorders/matnwb#tutorials\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >official tutorial</a>)\n            </li>\n        </ul>\n\n        <h2>Installation instructions for PyNWB</h2>\n\n        <ol>\n          <li>\n            Install the latest version of <a\n              href=\"https://conda.io/projects/conda/en/latest/user-guide/install/index.html\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >Miniconda with Python 3</a>.\n          </li>\n          <li>\n            Create an environment and install <code>pynwb</code>:\n            <BashCode code={code.pynwbInstallCode} />\n          </li>\n          <li>\n            If you want to explore these tutorials install <code>jupyter</code> and <code>matplotlib</code>:\n            <BashCode code={code.jupyterInstallCode} />\n          </li>\n        </ol>\n\n\n        <h2 id=\"pynwb-api\">Method 1: Read NWB files with PyNWB API</h2>\n\n        <div className={styles.section}>\n          <small>In [1]:</small>\n          <PythonCode code={code.nwbApi1} />\n\n          <p>Import and define convenience functions.</p>\n\n          <small>In [2]:</small>\n          <PythonCode code={code.nwbApi2} />\n\n          <h3>Load NWB file</h3>\n\n          <small>In [3]:</small>\n          <PythonCode code={code.nwbApi3} />\n\n          <small>In [4]:</small>\n          <PythonCode code={code.nwbApi4} />\n\n          <h3>Load all tables into memory</h3>\n\n          <p>\n            The easiest way to work with the data is to retrieve and combine all icephys tables\n            in a single pandas DataFrame. This step can take some time.\n          </p>\n\n          <p>\n            For more details, please refer to the <a\n              href=\"https://pynwb.readthedocs.io/en/stable/tutorials/domain/plot_icephys.html#sphx-glr-tutorials-domain-plot-icephys-py\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >pynwb documentation</a>.\n          </p>\n\n          <small>In [5]:</small>\n          <PythonCode code={code.nwbApi5} />\n\n          <h3>Retrieve stimulus types</h3>\n\n          <p>\n            Stimulus types (also known as protocols, patterns, sequential recordings, or just stimuli)\n            are stored in a dedicated column (<code>stimulus_type</code>)\n            in the <code>sequential_recordings</code> table.\n          </p>\n\n          <small>In [6]:</small>\n          <PythonCode code={code.nwbApi6} />\n\n          <small>In [7]:</small>\n\n          <PythonCode code={code.nwbApi7_1} />\n          <PlaintextCode wrapLongLines={true} code={code.nwbApi7_2} />\n\n          <h3>Plot one stimulus-response pair</h3>\n\n          <small>In [8]:</small>\n          <PythonCode code={code.nwbApi8} />\n\n          <small>In [9]:</small>\n          <PythonCode code={code.nwbApi9} />\n\n          <div className=\"mt-1 mb-1\">\n            <Image\n              src={`${basePath}/assets/images/tutorials/nwb/stimulus.png`}\n              width=\"400\"\n              height=\"273\"\n              alt=\"Stimulus plot\"\n              className=\"bg-almost-white\"\n            />\n          </div>\n\n          <small>In [10]:</small>\n          <PythonCode code={code.nwbApi10} />\n\n          <div className=\"mt-1 mb-1\">\n            <Image\n              src={`${basePath}/assets/images/tutorials/nwb/response.png`}\n              width=\"400\"\n              height=\"262\"\n              alt=\"Response plot\"\n              className=\"bg-almost-white\"\n            />\n          </div>\n\n          <h3>Retrieve and plot all traces of a given stimulus type (i.e. repetitions)</h3>\n\n          <p>Choose one stimulus type from the list printed above.</p>\n\n          <small>In [11]:</small>\n          <PythonCode code={code.nwbApi11} />\n\n          <small>In [12]:</small>\n          <PythonCode code={code.nwbApi12_1} />\n          <PythonCode code={code.nwbApi12_2} />\n\n          <p>Plot traces for each repetition.</p>\n\n          <p>\n            (Please note that in the code below it is assumed that for each stimulus there is a response,\n            and vice versa. The tuple <code>(start_index, index_count, PatchClampSeries)</code>\n            will only contain <code>None</code>&apos;s if a trace does not exist.)\n          </p>\n\n          <small>In [13]:</small>\n          <PythonCode code={code.nwbApi13} />\n\n          <div className=\"mt-1\">\n            <Image\n              src={`${basePath}/assets/images/tutorials/nwb/all-traces.png`}\n              width=\"735\"\n              height=\"496\"\n              alt=\"All trace plots\"\n              className=\"bg-almost-white\"\n            />\n          </div>\n        </div>\n\n        <h2 id=\"matlab\">Method 2: Read NWB files in Matlab</h2>\n\n        <div className={styles.section}>\n          <h3>Installation instructions</h3>\n\n          <p>First download MatNWB. In a terminal type:</p>\n          <BashCode code={code.matlabInstall1} />\n\n          <p>\n            This script has been tested on the commit <code>276e462</code> implementing\n            NWB schema v2.4.0, so you might want to check out to it:\n          </p>\n          <BashCode code={code.matlabInstall2} />\n\n          <p>In Matlab, add the matnwb folder and its subfolders to Path and generate the core classes:</p>\n          <MatlabCode code={code.matlabInstall3} />\n\n          <p>Then you can run this script.</p>\n\n          <p>\n            For the full documentation visit <a\n              className=\"word-break-all\"\n              href=\"https://github.com/NeurodataWithoutBorders/matnwb#matnwb\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >https://github.com/NeurodataWithoutBorders/matnwb#matnwb</a>.\n          </p>\n\n          <h3>Read NWB file</h3>\n\n          <MatlabCode code={code.matlab1} />\n        </div>\n      </div>\n    </FullPage>\n  );\n};\n\n\nexport default NwbTutorialView;\n","import React from 'react';\nimport Head from 'next/head';\n\nimport NwbTutorialView from '../../views/tutorials/Nwb';\n\n\nexport default function Glossary() {\n  return (\n    <>\n      <Head>\n        <title>Tutorials - How to read NWB files / Hippocampus Hub Explore</title>\n        <meta\n          name=\"description\"\n          content=\"How to read NWB files tutorial.\"\n        />\n      </Head>\n\n      <NwbTutorialView />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"nwb_section__rGI1_\",\"container\":\"nwb_container__XY0bZ\"};"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","title","subtitle","theme","primary","isDark","param","isVisible","setIsVisible","useState","useEffect","console","log","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","concat","jsx","h4","h2","role","children","Code","code","language","wrapLongLines","jsx_runtime","SyntaxHighlighter","style","solarizedDark","customStyle","fontSize","PythonCode","BashCode","MatlabCode","PlaintextCode","Nwb","FullPage","styles","Title","primaryColor","p","ul","li","Link","href","a","target","rel","ol","id","small","h3","Image","src","basePath","width","height","alt","Glossary","Fragment","Head","meta","name","content","NwbTutorialView","module","exports"],"sourceRoot":""}