{"version":3,"file":"static/chunks/pages/validations/connection-anatomy-3ed46b3db752fa94.js","mappings":"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","sources":["webpack://_N_E/?d17a","webpack://_N_E/./src/components/StickyContainer/index.tsx","webpack://_N_E/./src/constants.ts","webpack://_N_E/./src/views/4_validations/connection-anatomy/BoutonDensityValidation.tsx","webpack://_N_E/./src/views/4_validations/connection-anatomy/ConnectionProbability.tsx","webpack://_N_E/./src/views/4_validations/connection-anatomy/DivergenceValidation.tsx","webpack://_N_E/./src/views/4_validations/connection-anatomy/ConvergenceValidation.tsx","webpack://_N_E/./src/views/4_validations/connection-anatomy/LaminarDistributionOfSynapses.tsx","webpack://_N_E/./src/views/4_validations/connection-anatomy/NbOfSynapsesPConnection.tsx","webpack://_N_E/./src/views/4_validations/connection-anatomy/SynapticDivergencePercentages.tsx","webpack://_N_E/./src/views/4_validations/ConnnectionAnatomy.tsx","webpack://_N_E/./src/pages/validations/connection-anatomy.tsx","webpack://_N_E/./src/components/StickyContainer/styles.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/validations/connection-anatomy\",\n      function () {\n        return require(\"private-next-pages/validations/connection-anatomy.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/validations/connection-anatomy\"])\n      });\n    }\n  ","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\ninterface StickyContainerProps {\n  centered?: boolean;\n  children: React.ReactNode;\n}\n\nconst StickyContainer: React.FC<StickyContainerProps> = ({ centered, children }) => (\n  <div className={styles.flexWrapper}>\n    <div className={classNames(styles.container, centered ? styles['container--centered'] : '')}>\n      {children}\n    </div>\n  </div >\n);\n\nexport default StickyContainer;","import { Layer, NeuriteType, VolumeSection, AchConcentration, CellGroup, Theme, GraphTheme, ThemeColors } from './types';\nimport NeuronModelLibrary from './views/2_reconstruction-data/NeuronModelLibrary';\nimport AcetylcholineView from './views/4_validations/Acetylcholine';\n\nexport const layers: Layer[] = [\n  'SLM',\n  'SR',\n  'SP',\n  'SO',\n];\n\nexport const theme: Theme = {\n  1: { default: 0x44405B, hover: 0x7D656F, selected: 0xB68983, selectedEdges: 0xEFAE97 },\n  2: { default: 0x44405B, hover: 0x7B5B6A, selected: 0xB37579, selectedEdges: 0xEA9088 },\n  3: { default: 0x44405B, hover: 0x715970, selected: 0x9F7184, selectedEdges: 0xCC8A99 },\n  4: { default: 0x44405B, hover: 0x625D77, selected: 0x807B92, selectedEdges: 0x9E98AE },\n  5: { default: 0x393D5E, hover: 0x595D79, selected: 0x6E7B97, selectedEdges: 0x8398B5 },\n};\n\nexport const graphTheme: GraphTheme = {\n  red: \"#C46785\",\n  blue: \"#3b4165\",\n  green: \"#7FD982\",\n  purple: \"#7F5482\",\n  yellow: \"#f9f871\",\n};\n\nexport const themeColors: ThemeColors = {\n  experimental_data: \"#EFAE97\",\n  reconstruction_data: \"#EA9088\",\n  digital_reconstruction: \"#CC8A99\",\n  validations: \"#9E98AE\",\n  predictions: \"#8398B5\",\n};\n\n\n\nexport const neuriteTypes: NeuriteType[] = [\n  'all',\n  'axon',\n  'apical',\n  'basal',\n  'dendrite',\n  'soma',\n\n];\n\nexport const volumeSections: VolumeSection[] = [\n  'region',\n  'slice',\n  'cylinder',\n];\n\n\nexport const achConcentrations: AchConcentration[] = [\n  '0um',\n  '10um',\n  '100um'\n];\n\nexport const cellGroup: CellGroup[] = [\n  'All',\n  'Excitatory',\n  'Inhibitory',\n  'SLM_PPA',\n  'SO_BP',\n  'SO_BS',\n  'SO_OLM',\n  'SO_Tri',\n  'SP_AA',\n  'SP_BS',\n  'SP_CCKBC',\n  'SP_Ivy',\n  'SP_PC',\n  'SP_PVBC',\n  'SR_SCA'\n]\n\nexport const defaultSelection = {\n  experimentalData: {\n    layerAnatomy: {\n      layer: 'SLM',\n    },\n    neuronMorphology: {\n      layer: 'SLM',\n      mtype: 'SLM_PPA',\n      instance: '011127HP1',\n    },\n    neuronElectrophysiology: {\n      etype: 'bAC',\n      etype_instance: '95810035',\n    },\n  },\n  reconstructionData: {\n    volume: {\n      volume_section: 'region',\n    },\n    cellComposition: {\n      volume_section: 'region',\n    },\n    neurons: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      instance: 'CA1_int_bAC_011127HP1_20190329115610',\n    },\n  },\n  digitalReconstruction: {\n    region: {\n      volume_section: 'region',\n    },\n    morphologyLibrary: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      morphology: '011127HP1',\n    },\n    schafferCollateral: {\n      volume_section: 'region',\n      prelayer: 'SC',\n      postlayer: 'All'\n    },\n    connectionAnatomy: {\n      volume_section: 'region',\n      prelayer: 'All',\n      postlayer: 'All'\n    },\n    connectionPhysiology: {\n      volume_section: 'region',\n      prelayer: 'all',\n      postlayer: 'all'\n    },\n    acetylcholineEffectsOnCell: {\n      morphology: \"450290\",\n      etype: \"cNAC\",\n      mtype: \"SO_BP\"\n    },\n    acetylcholineEffectsOnSynapses: {\n      ach_concentration: '0um',\n      prelayer: 'Excitatory',\n      postlayer: 'Excitatory'\n    },\n\n    neurons: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      instance: '011127HP1',\n    },\n    NeuronModelLibrary: {\n      mtype: 'SO_BP',\n      etype: 'cNAC',\n      morphology: '980120A_-_Scale_x1.000_y0.900_z1.000'\n    },\n    synapticPathways: {\n      volume_section: 'slice',\n      prelayer: 'All',\n      postlayer: 'All',\n    },\n    acetylcholine: {\n      ach_concentration: '0um',\n      prelayer: 'Excitatory',\n      postlayer: 'Excitatory',\n    },\n  },\n\n};\n\nexport const neuriteColor: Record<NeuriteType, string> = {\n  all: '#1fcf1f',\n  axon: '#1111ff',\n  apical: '#f442ad',\n  basal: '#ff1111',\n  dendrite: '#ff1111',\n  soma: '#000',\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n    Chart,\n    ScatterController,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Title,\n    Legend,\n} from 'chart.js';\nimport { downloadAsJson } from '@/utils';\nimport DownloadButton from '@/components/DownloadButton';\nimport { dataPath } from '@/config';\nimport { graphTheme } from '@/constants';\n\nChart.register(\n    ScatterController,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Title,\n    Legend\n);\n\nexport type BoutonDensityValidationProps = {\n    theme?: number;\n};\n\n// Define the interface for the data structure\ninterface BoutonDensityValidationData {\n    value_map: {\n        mtype: { [key: number]: string };\n        model_mean: { [key: number]: number };\n        model_std: { [key: number]: number };\n        exp_mean: { [key: number]: number };\n    };\n}\n\nconst BoutonDensityValidationGraph: React.FC<BoutonDensityValidationProps> = ({ theme }) => {\n    const chartRef = useRef<HTMLCanvasElement | null>(null);\n    const [chart, setChart] = useState<Chart | null>(null);\n    const [data, setData] = useState<BoutonDensityValidationData | null>(null);\n\n    useEffect(() => {\n        fetch(dataPath + '/4_validations/connection-anatomy/bouton-density-validation.json')\n            .then((response) => response.json())\n            .then((data) => setData(data as BoutonDensityValidationData))\n            .catch((error) => console.error('Error fetching bouton density validation data:', error));\n    }, []);\n\n    const createChart = () => {\n        if (chartRef.current && data) {\n            const ctx = chartRef.current.getContext('2d');\n            if (ctx) {\n                // Define the error bar plugin\n                const errorBarPlugin = {\n                    id: 'errorBar',\n                    afterDatasetsDraw(chart: any, args: any, options: any) {\n                        const { ctx, data, scales: { x, y } } = chart;\n\n                        ctx.save();\n                        data.datasets.forEach((dataset: any) => {\n                            if (dataset.label === 'Model') {\n                                dataset.data.forEach((datapoint: any) => {\n                                    if (datapoint.yMin !== undefined && datapoint.yMax !== undefined) {\n                                        const xPos = x.getPixelForValue(datapoint.x);\n                                        const yPosMin = y.getPixelForValue(datapoint.yMin);\n                                        const yPosMax = y.getPixelForValue(datapoint.yMax);\n\n                                        ctx.strokeStyle = dataset.borderColor;\n                                        ctx.lineWidth = 2;\n\n                                        // Draw vertical line\n                                        ctx.beginPath();\n                                        ctx.moveTo(xPos, yPosMin);\n                                        ctx.lineTo(xPos, yPosMax);\n                                        ctx.stroke();\n\n                                        // Draw horizontal lines\n                                        const horizontalLength = 5;\n                                        ctx.beginPath();\n                                        ctx.moveTo(xPos - horizontalLength, yPosMin);\n                                        ctx.lineTo(xPos + horizontalLength, yPosMin);\n                                        ctx.moveTo(xPos - horizontalLength, yPosMax);\n                                        ctx.lineTo(xPos + horizontalLength, yPosMax);\n                                        ctx.stroke();\n                                    }\n                                });\n                            }\n                        });\n                        ctx.restore();\n                    }\n                };\n\n                // Create the chart with the plugin included\n                // In the chart configuration, remove the errorBar property from plugins\n                const newChart = new Chart(ctx, {\n                    type: 'scatter',\n                    data: {\n                        labels: Object.values(data.value_map.mtype),\n                        datasets: [\n                            {\n                                label: 'Model',\n                                data: Object.values(data.value_map.mtype).map((_, index) => ({\n                                    x: index,\n                                    y: data.value_map.model_mean[index],\n                                    yMin: data.value_map.model_mean[index] - data.value_map.model_std[index],\n                                    yMax: data.value_map.model_mean[index] + data.value_map.model_std[index],\n                                })),\n                                backgroundColor: 'black',\n                                borderColor: 'black',\n                                pointStyle: 'circle',\n                                pointRadius: 3,\n                                showLine: false,\n                            },\n                            {\n                                label: 'Experiment',\n                                data: Object.values(data.value_map.mtype).map((_, index) => ({\n                                    x: index,\n                                    y: data.value_map.exp_mean[index],\n                                })),\n                                backgroundColor: graphTheme.red,\n                                borderColor: graphTheme.red,\n                                pointStyle: 'circle',\n                                pointRadius: 3,\n                                showLine: false,\n                            },\n                        ],\n                    },\n                    options: {\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                            x: {\n                                type: 'category',\n                                title: {\n                                    display: true,\n                                    text: 'mtype',\n                                },\n                            },\n                            y: {\n                                title: {\n                                    display: true,\n                                    text: 'bouton density (um⁻¹)',\n                                },\n                                min: 0,\n                                max: 0.5,\n                            },\n                        },\n                        plugins: {\n                            legend: {\n                                position: 'top',\n                                align: 'end',\n                                labels: {\n                                    usePointStyle: true,\n                                    pointStyle: 'circle',\n                                    boxWidth: 6,\n                                    boxHeight: 6,\n                                    padding: 20,\n                                    font: {\n                                        size: 11,\n                                        weight: 'normal',\n                                    },\n                                },\n                                onClick: () => { }, // Disable legend item click\n                            },\n                            title: {\n                                display: false, // Remove the title\n                            },\n                        },\n                    },\n                    plugins: [errorBarPlugin], // Add the custom plugin here\n                });\n\n                setChart(newChart);\n            }\n        }\n    };\n\n    useEffect(() => {\n        createChart();\n\n        const handleResize = () => {\n            if (chart) {\n                chart.resize();\n            }\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            if (chart) {\n                chart.destroy();\n            }\n        };\n    }, [data]);\n\n    return (\n        <div>\n            <div className=\"graph\" style={{ height: \"500px\" }}>\n                <canvas ref={chartRef} />\n            </div>\n            <div className=\"mt-4\">\n                <DownloadButton theme={theme} onClick={() => downloadAsJson(data, `Bouton-Density-Validation-Data.json`)}>\n                    Bouton density\n                </DownloadButton>\n            </div>\n        </div>\n    );\n};\n\nexport default BoutonDensityValidationGraph;","import React, { useEffect, useRef, useState } from 'react';\nimport {\n    Chart,\n    ScatterController,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Legend,\n    ChartData,\n    ChartOptions,\n} from 'chart.js';\nimport { GraphTheme } from '@/types';\nimport { downloadAsJson } from '@/utils';\nimport DownloadButton from '@/components/DownloadButton';\nimport { dataPath } from '@/config';\nimport { graphTheme } from '@/constants';\n\nChart.register(\n    ScatterController,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Legend\n);\n\nexport type ConnectionProbabilityProps = {\n    theme?: number;\n};\n\ninterface ConnectionProbabilityData {\n    value_map: {\n        exp_mean: { [key: string]: number };\n        model_mean: { [key: string]: number };\n        connection_class: { [key: string]: string };\n    };\n}\n\nconst ConnectionProbabilityGraph: React.FC<ConnectionProbabilityProps> = ({ theme }) => {\n    const chartRef = useRef<HTMLCanvasElement | null>(null);\n    const [chart, setChart] = useState<Chart | null>(null);\n    const [data, setData] = useState<ConnectionProbabilityData | null>(null);\n\n    useEffect(() => {\n        fetch(dataPath + '/4_validations/connection-anatomy/connection-probability.json')\n            .then((response) => response.json())\n            .then((fetchedData: ConnectionProbabilityData) => setData(fetchedData));\n    }, []);\n\n    const createChart = () => {\n        if (chartRef.current && data) {\n            const ctx = chartRef.current.getContext('2d');\n            if (ctx) {\n                // Prepare rawChartData\n                const rawChartData = Object.keys(data.value_map.exp_mean).map(key => ({\n                    x: data.value_map.exp_mean[key],\n                    y: data.value_map.model_mean[key],\n                    connectionClass: data.value_map.connection_class[key]\n                }));\n\n                // Define custom plugin for diagonal line\n                const customPlugin = {\n                    id: 'customPlugin',\n                    afterDraw: (chart: Chart) => {\n                        const { ctx, chartArea: { top, bottom, left, right }, scales: { x, y } } = chart;\n\n                        // Draw diagonal line\n                        ctx.save();\n                        ctx.strokeStyle = 'rgba(200, 200, 200, 0.5)';\n                        ctx.setLineDash([5, 5]);\n                        ctx.beginPath();\n                        ctx.moveTo(left, bottom);\n                        ctx.lineTo(right, top);\n                        ctx.stroke();\n                        ctx.restore();\n                    }\n                };\n\n                const chartData: ChartData<'scatter'> = {\n                    datasets: [\n                        {\n                            label: 'EE',\n                            data: rawChartData.filter(d => d.connectionClass === 'EE'),\n                            backgroundColor: graphTheme.red,\n                            pointStyle: 'circle',\n                            //radius: 6,\n                        },\n                        {\n                            label: 'EI',\n                            data: rawChartData.filter(d => d.connectionClass === 'EI'),\n                            backgroundColor: graphTheme.green,\n                            pointStyle: 'circle',\n                            //radius: 6,\n                        },\n                        {\n                            label: 'IE',\n                            data: rawChartData.filter(d => d.connectionClass === 'IE'),\n                            backgroundColor: graphTheme.blue,\n                            pointStyle: 'circle',\n                            // radius: 6,\n                        },\n                        {\n                            label: 'II',\n                            data: rawChartData.filter(d => d.connectionClass === 'II'),\n                            backgroundColor: graphTheme.purple,\n                            pointStyle: 'circle',\n                            // radius: 6,\n                        }\n                    ]\n                };\n\n                const chartOptions: ChartOptions<'scatter'> = {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                        x: {\n                            type: 'linear',\n                            position: 'bottom',\n                            title: {\n                                display: true,\n                                text: 'Connection probability Experiment',\n                            },\n                            min: 0,\n                            max: 0.5,\n                            ticks: {\n                                color: 'black',\n                                font: {\n                                    size: 12,\n                                },\n                            },\n                            grid: {\n                                color: 'rgba(0, 0, 0, 0.1)',\n                            },\n                        },\n                        y: {\n                            type: 'linear',\n                            position: 'left',\n                            title: {\n                                display: true,\n                                text: 'Connection probability Model',\n                            },\n                            min: 0,\n                            max: 0.5,\n                            ticks: {\n                                font: {\n                                    size: 12,\n                                },\n                            },\n                            grid: {\n                                color: 'rgba(0, 0, 0, 0.1)',\n                            },\n                        }\n                    },\n                    plugins: {\n                        legend: {\n                            position: 'top',\n                            align: 'end',\n                            labels: {\n                                usePointStyle: true,\n                                pointStyle: 'circle',\n                                boxWidth: 6,\n                                boxHeight: 6,\n                                padding: 15,\n                                font: {\n                                    size: 12,\n                                },\n                            }\n                        },\n                        tooltip: {\n                            callbacks: {\n                                label: (context) => {\n                                    return `${context.dataset.label}: (${context.parsed.x.toFixed(3)}, ${context.parsed.y.toFixed(3)})`;\n                                }\n                            }\n                        }\n                    }\n                };\n\n                const newChart = new Chart(ctx, {\n                    type: 'scatter',\n                    data: chartData,\n                    options: chartOptions,\n                    plugins: [customPlugin]\n                });\n\n                setChart(newChart);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (data) {\n            createChart();\n        }\n\n        const handleResize = () => {\n            if (chart) {\n                chart.resize();\n            }\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            if (chart) {\n                chart.destroy();\n            }\n        };\n    }, [data]);\n\n    if (!data) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <div className=\"graph graph--rect\" style={{ height: \"500px\" }}>\n                <canvas ref={chartRef} />\n            </div>\n            <div className=\"mt-4\">\n                <DownloadButton theme={theme} onClick={() => downloadAsJson(data, `Connection-Probability-Data.json`)}>\n                    Connection probability\n                </DownloadButton>\n            </div>\n        </div>\n    );\n};\n\nexport default ConnectionProbabilityGraph;","import React, { useEffect, useRef, useState } from 'react';\nimport {\n    Chart,\n    LineController,\n    BarController,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Title,\n    Legend,\n} from 'chart.js';\nimport { downloadAsJson } from '@/utils';\nimport DownloadButton from '@/components/DownloadButton';\n\nimport { graphTheme } from '@/constants';\nimport { dataPath } from '@/config';\n\nChart.register(\n    LineController,\n    BarController,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Title,\n    Legend\n);\n\nexport type DivergenceValidationProps = {\n    theme?: number;\n};\n\nconst DivergenceValidationGraph: React.FC<DivergenceValidationProps> = ({ theme }) => {\n    const chartRef = useRef<HTMLCanvasElement | null>(null);\n    const [chart, setChart] = useState<Chart | null>(null);\n    const [data, setData] = useState<any>(null);\n\n    useEffect(() => {\n        fetch(dataPath + '/4_validations/connection-anatomy/divergence-validation.json')\n            .then((response) => response.json())\n            .then((fetchedData) => {\n                setData(fetchedData);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (data && chartRef.current) {\n            createChart();\n        }\n    }, [data]);\n\n    const createChart = () => {\n        if (!data || !chartRef.current) return;\n\n        const ctx = chartRef.current.getContext('2d');\n        if (!ctx) return;\n\n        const modelData = Object.keys(data.value_map.mtype).map(key => ({\n            x: data.value_map.mtype[key],\n            y: data.value_map.model_mean[key],\n            yMin: data.value_map.model_mean[key] - data.value_map.model_std[key],\n            yMax: data.value_map.model_mean[key] + data.value_map.model_std[key],\n        }));\n\n        const experimentData = Object.keys(data.value_map.mtype).map(key => ({\n            x: data.value_map.mtype[key],\n            y: data.value_map.exp_mean[key],\n            yMin: data.value_map.exp_mean[key] - (data.value_map.exp_std[key] || 0),\n            yMax: data.value_map.exp_mean[key] + (data.value_map.exp_std[key] || 0),\n        })).filter(d => d.y !== null);\n\n        const customPlugin = {\n            id: 'customPlugin',\n            afterDraw: (chart) => {\n                const { ctx, scales: { x, y } } = chart;\n                ctx.save();\n                ctx.lineWidth = 2;\n\n                // Draw error bars for model data\n                modelData.forEach((point) => {\n                    const xPixel = x.getPixelForValue(point.x);\n                    const yMinPixel = y.getPixelForValue(point.yMin);\n                    const yMaxPixel = y.getPixelForValue(point.yMax);\n\n                    ctx.strokeStyle = 'black';\n                    ctx.beginPath();\n                    ctx.moveTo(xPixel, yMinPixel);\n                    ctx.lineTo(xPixel, yMaxPixel);\n                    ctx.stroke();\n\n                    // Horizontal caps\n                    const capLength = 5;\n                    ctx.beginPath();\n                    ctx.moveTo(xPixel - capLength, yMinPixel);\n                    ctx.lineTo(xPixel + capLength, yMinPixel);\n                    ctx.moveTo(xPixel - capLength, yMaxPixel);\n                    ctx.lineTo(xPixel + capLength, yMaxPixel);\n                    ctx.stroke();\n                });\n\n                // Draw error bars for experiment data\n                experimentData.forEach((point) => {\n                    const xPixel = x.getPixelForValue(point.x);\n                    const yMinPixel = y.getPixelForValue(point.yMin);\n                    const yMaxPixel = y.getPixelForValue(point.yMax);\n\n                    ctx.strokeStyle = graphTheme.red;\n                    ctx.beginPath();\n                    ctx.moveTo(xPixel, yMinPixel);\n                    ctx.lineTo(xPixel, yMaxPixel);\n                    ctx.stroke();\n\n                    // Horizontal caps\n                    const capLength = 5;\n                    ctx.beginPath();\n                    ctx.moveTo(xPixel - capLength, yMinPixel);\n                    ctx.lineTo(xPixel + capLength, yMinPixel);\n                    ctx.moveTo(xPixel - capLength, yMaxPixel);\n                    ctx.lineTo(xPixel + capLength, yMaxPixel);\n                    ctx.stroke();\n                });\n\n                ctx.restore();\n            }\n        };\n\n        const newChart = new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: Object.values(data.value_map.mtype),\n                datasets: [\n                    {\n                        type: 'scatter',\n                        label: 'Model',\n                        data: modelData,\n                        backgroundColor: 'black',\n                        pointStyle: 'circle',\n                        //radius: 5,\n                        borderColor: 'black',\n                        borderWidth: 1,\n                    },\n                    {\n                        type: 'scatter',\n                        label: 'Experiment',\n                        data: experimentData,\n                        backgroundColor: graphTheme.red,\n                        pointStyle: 'circle',\n                        //radius: 5,\n                        borderColor: graphTheme.red,\n                        borderWidth: 1,\n                    }\n                ]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    x: {\n                        type: 'category',\n                        position: 'bottom',\n                        title: {\n                            display: true,\n                            text: 'mtype',\n                        },\n                    },\n                    y: {\n                        type: 'linear',\n                        position: 'left',\n                        title: {\n                            display: true,\n                            text: 'Divergence (synapses)',\n                        },\n                        min: 0,\n                        max: 25000,\n                    }\n                },\n                plugins: {\n                    legend: {\n                        position: 'top',\n                        align: 'end',\n                        labels: {\n                            usePointStyle: true,\n                            pointStyle: 'circle',\n                            boxWidth: 6,\n                            boxHeight: 6,\n                            padding: 20,\n                        }\n                    },\n                    tooltip: {\n                        callbacks: {\n                            label: (context) => {\n                                const label = context.dataset.label;\n                                const value = context.parsed.y.toFixed(2);\n                                return `${label}: ${value}`;\n                            }\n                        }\n                    }\n                }\n            },\n            plugins: [customPlugin]\n        });\n\n        setChart(newChart);\n    };\n\n    useEffect(() => {\n        const handleResize = () => {\n            if (chart) {\n                chart.resize();\n            }\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            if (chart) {\n                chart.destroy();\n            }\n        };\n    }, [chart]);\n\n    return (\n        <div>\n            <div className=\"graph\" style={{ height: \"500px\" }}>\n                <canvas ref={chartRef} />\n            </div>\n            {data && (\n                <div className=\"mt-4\">\n                    <DownloadButton theme={theme} onClick={() => downloadAsJson(data, `Divergence-Validation-Data.json`)}>\n                        Divergence validation\n                    </DownloadButton>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default DivergenceValidationGraph;","import React, { useEffect, useRef, useState } from 'react';\nimport { Chart, ScatterController, LinearScale, PointElement, LineElement, Tooltip, Legend, CategoryScale } from 'chart.js';\nimport { downloadAsJson } from '@/utils';\nimport DownloadButton from '@/components/DownloadButton';\nimport { graphTheme } from '@/constants';\n\nChart.register(ScatterController, LinearScale, PointElement, LineElement, Tooltip, Legend, CategoryScale);\n\nconst errorBarPlugin = {\n    id: 'errorBar',\n    afterDatasetsDraw(chart, args, options) {\n        const { ctx, data, chartArea: { top, bottom, left, right }, scales: { x, y } } = chart;\n\n        ctx.save();\n        data.datasets.forEach((dataset, i) => {\n            dataset.data.forEach((datapoint, index) => {\n                if (datapoint.yMin !== undefined && datapoint.yMax !== undefined) {\n                    const xScale = x.getPixelForValue(datapoint.x);\n                    const yScale = y.getPixelForValue(datapoint.y);\n                    const yScaleMin = y.getPixelForValue(datapoint.yMin);\n                    const yScaleMax = y.getPixelForValue(datapoint.yMax);\n\n                    // Adjust x position for potential offset\n                    const xPos = Math.max(left, Math.min(xScale, right));\n\n                    ctx.strokeStyle = dataset.borderColor;\n                    ctx.lineWidth = 2;\n\n                    // Draw vertical line\n                    ctx.beginPath();\n                    ctx.moveTo(xPos, yScaleMin);\n                    ctx.lineTo(xPos, yScaleMax);\n                    ctx.stroke();\n\n                    // Draw horizontal lines\n                    const horizontalLength = 5;\n                    ctx.beginPath();\n                    ctx.moveTo(xPos - horizontalLength, yScaleMin);\n                    ctx.lineTo(xPos + horizontalLength, yScaleMin);\n                    ctx.moveTo(xPos - horizontalLength, yScaleMax);\n                    ctx.lineTo(xPos + horizontalLength, yScaleMax);\n                    ctx.stroke();\n                }\n            });\n        });\n        ctx.restore();\n    }\n};\n\nconst ConvergenceValidationGraph = ({ theme, data }) => {\n    const chartRef = useRef<HTMLCanvasElement>(null);\n    const [chart, setChart] = useState<Chart | null>(null);\n\n    const createChart = () => {\n        if (chartRef.current) {\n            const ctx = chartRef.current.getContext('2d');\n\n            if (ctx) {\n                // Calculate suggested max value\n                const maxValue = data.data.reduce((max, d) => {\n                    const yMax = Math.max(d[4] + (d[5] || 0), d[2] + (d[3] || 0));\n                    return yMax > max ? yMax : max;\n                }, 0);\n                const suggestedMax = maxValue * 1.1;\n\n                const newChart = new Chart(ctx, {\n                    type: 'scatter',\n                    data: {\n                        datasets: [\n                            {\n                                label: 'Inhibitory',\n                                data: data.data.filter(d => d[1] === 'inh').map(d => ({\n                                    x: d[0],\n                                    y: d[4],\n                                    yMin: Math.max(0, d[4] - d[5]),\n                                    yMax: d[4] + d[5]\n                                })),\n                                backgroundColor: graphTheme.blue,\n                                borderColor: graphTheme.blue,\n                            },\n                            {\n                                label: 'Excitatory',\n                                data: data.data.filter(d => d[1] === 'exc').map(d => ({\n                                    x: d[0],\n                                    y: d[4],\n                                    yMin: Math.max(0, d[4] - d[5]),\n                                    yMax: d[4] + d[5]\n                                })),\n                                backgroundColor: graphTheme.green,\n                                borderColor: graphTheme.green,\n                            },\n                            {\n                                label: 'Experimental',\n                                data: data.data.map(d => ({\n                                    x: d[0],\n                                    y: d[2],\n                                    yMin: Math.max(0, d[2] - d[3]),\n                                    yMax: d[2] + d[3]\n                                })),\n                                backgroundColor: graphTheme.red,\n                                borderColor: graphTheme.red,\n                            }\n                        ]\n                    },\n                    options: {\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                            x: {\n                                type: 'category',\n                                position: 'bottom',\n                                title: {\n                                    display: false,\n                                    text: 'Region'\n                                },\n                                offset: true,\n                                ticks: {\n                                    padding: 10\n                                },\n                                grid: {\n                                    display: false,\n                                    offset: true\n                                }\n                            },\n                            y: {\n                                type: 'linear',\n                                position: 'left',\n                                title: {\n                                    display: true,\n                                    text: 'Number of synapses'\n                                },\n                                min: 0,\n                                suggestedMax: suggestedMax, // Use the pre-calculated suggestedMax here\n                            }\n                        },\n                        plugins: {\n                            legend: {\n                                display: true,\n                                position: 'top',\n                                align: 'end',\n                                labels: {\n                                    usePointStyle: true,\n                                    pointStyle: 'circle',\n                                    boxWidth: 6,\n                                    boxHeight: 6\n                                }\n                            },\n                            tooltip: {\n                                enabled: true,\n                            },\n                        },\n                        layout: {\n                            padding: {\n                                left: 10,\n                                right: 10,\n                                top: 10,\n                                bottom: 10\n                            }\n                        }\n                    },\n                    plugins: [errorBarPlugin],\n                });\n\n                setChart(newChart);\n            }\n        }\n    };\n\n    useEffect(() => {\n        createChart();\n\n        const handleResize = () => {\n            if (chart) {\n                chart.resize();\n            }\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            if (chart) {\n                chart.destroy();\n            }\n        };\n    }, [data]);\n\n    return (\n        <div className=\"w-full\">\n            <div className=\"graph no-margin\" style={{ height: \"500px\" }}>\n                <canvas ref={chartRef} />\n            </div>\n            <div className=\"mt-4\">\n                <DownloadButton theme={theme} onClick={() => downloadAsJson(data, data.name)}>\n                    Convergence validation\n                </DownloadButton>\n            </div>\n        </div>\n    );\n};\n\nexport default ConvergenceValidationGraph;","import React, { useEffect, useRef } from 'react';\nimport * as echarts from 'echarts';\nimport { downloadAsJson } from '@/utils';\nimport DownloadButton from '@/components/DownloadButton';\nimport { graphTheme } from '@/constants';\n\nconst LaminarDistributionOfSynapsesGraph = ({ theme }) => {\n    const chartRef = useRef(null);\n\n    const data = [\n        { name: 'SLM_PPA', SO: [0, 0], SP: [0, 0], SR: [35.48, 37.7], SLM: [64.18, 62.3], out: [0.34, null] },\n        { name: 'SR_SCA', SO: [26.65, 0], SP: [14.45, 0.2], SR: [56.15, 97.4], SLM: [1.88, 2.4], out: [0.86, null] },\n        { name: 'SP_AA', SO: [5.52, null], SP: [89.96, null], SR: [4.52, null], SLM: [0, null], out: [0, null] },\n        { name: 'SP_BS', SO: [32.64, 47.6], SP: [20.86, 9.85], SR: [45.85, 42.55], SLM: [0.20, 0], out: [0.46, null] },\n        { name: 'SP_CCKBC', SO: [34.76, 29.4], SP: [43.95, 62.85], SR: [21.03, 7.75], SLM: [0.03, 0], out: [0.24, null] },\n        { name: 'SP_Ivy', SO: [34.40, null], SP: [36.26, null], SR: [29.12, null], SLM: [0.02, null], out: [0.20, null] },\n        { name: 'SP_PC', SO: [77.47, null], SP: [11.48, null], SR: [3.34, null], SLM: [0.02, null], out: [7.68, null] },\n        { name: 'SP_PVBC', SO: [33.10, null], SP: [43.00, null], SR: [23.58, null], SLM: [0.05, null], out: [0.27, null] },\n        { name: 'SO_BP', SO: [31.11, null], SP: [24.54, null], SR: [40.36, null], SLM: [3.56, null], out: [0.43, null] },\n        { name: 'SO_BS', SO: [33.11, 48.1], SP: [17.90, 12.4], SR: [47.46, 39.5], SLM: [0.90, 0], out: [0.64, null] },\n        { name: 'SO_OLM', SO: [0.39, null], SP: [0.55, null], SR: [31.28, null], SLM: [65.60, null], out: [2.18, null] },\n        { name: 'SO_Tri', SO: [57.41, 58.12], SP: [27.02, 18.11], SR: [14.39, 23.77], SLM: [0.13, 0], out: [1.06, null] },\n    ];\n\n    useEffect(() => {\n        const chart = echarts.init(chartRef.current);\n\n        const option = {\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'shadow'\n                }\n            },\n            legend: {\n                data: ['SO (Model)', 'SP (Model)', 'SR (Model)', 'SLM (Model)', 'out (Model)',\n                    'SO (Exp)', 'SP (Exp)', 'SR (Exp)', 'SLM (Exp)']\n            },\n            xAxis: {\n                type: 'category',\n                data: data.map(item => item.name),\n                axisLabel: {\n                    interval: 0,\n                    rotate: 45,\n                    align: 'right',\n                    margin: 10\n                },\n                name: 'mtype',\n                nameLocation: 'middle',\n                nameGap: 50\n            },\n            yAxis: {\n                type: 'value',\n                name: 'Synapses (%)',\n                max: 100,\n                nameLocation: 'middle',\n                nameGap: 50,\n                nameRotate: 90\n            },\n            grid: {\n                bottom: '15%',\n                left: '10%'\n            },\n            series: [\n                {\n                    name: 'SO (Model)',\n                    type: 'bar',\n                    stack: 'Model',\n                    emphasis: { focus: 'series' },\n                    data: data.map(item => item.SO[0]),\n                    color: graphTheme.blue\n                },\n                {\n                    name: 'SP (Model)',\n                    type: 'bar',\n                    stack: 'Model',\n                    emphasis: { focus: 'series' },\n                    data: data.map(item => item.SP[0]),\n                    color: graphTheme.yellow\n                },\n                {\n                    name: 'SR (Model)',\n                    type: 'bar',\n                    stack: 'Model',\n                    emphasis: { focus: 'series' },\n                    data: data.map(item => item.SR[0]),\n                    color: graphTheme.green\n                },\n                {\n                    name: 'SLM (Model)',\n                    type: 'bar',\n                    stack: 'Model',\n                    emphasis: { focus: 'series' },\n                    data: data.map(item => item.SLM[0]),\n                    color: graphTheme.red\n                },\n                {\n                    name: 'out (Model)',\n                    type: 'bar',\n                    stack: 'Model',\n                    emphasis: { focus: 'series' },\n                    data: data.map(item => item.out[0]),\n                    color: graphTheme.purple\n                },\n                {\n                    name: 'SO (Exp)',\n                    type: 'bar',\n                    stack: 'Exp',\n                    emphasis: { focus: 'series' },\n                    data: data.map(item => item.SO[1]),\n                    color: graphTheme.blue,\n                    itemStyle: {\n                        decal: {\n                            symbol: 'rect',\n                            symbolSize: 1,\n                            rotation: Math.PI / 4,\n                            dashArrayX: [1, 0],\n                            dashArrayY: [2, 5],\n                            color: 'white'\n                        }\n                    }\n                },\n                {\n                    name: 'SP (Exp)',\n                    type: 'bar',\n                    stack: 'Exp',\n                    emphasis: { focus: 'series' },\n                    data: data.map(item => item.SP[1]),\n                    color: graphTheme.yellow,\n                    itemStyle: {\n                        decal: {\n                            symbol: 'rect',\n                            symbolSize: 1,\n                            rotation: Math.PI / 4,\n                            dashArrayX: [1, 0],\n                            dashArrayY: [2, 5],\n                            color: 'white'\n                        }\n                    }\n                },\n                {\n                    name: 'SR (Exp)',\n                    type: 'bar',\n                    stack: 'Exp',\n                    emphasis: { focus: 'series' },\n                    data: data.map(item => item.SR[1]),\n                    color: graphTheme.green,\n                    itemStyle: {\n                        decal: {\n                            symbol: 'rect',\n                            symbolSize: 1,\n                            rotation: Math.PI / 4,\n                            dashArrayX: [1, 0],\n                            dashArrayY: [2, 5],\n                            color: 'white'\n                        }\n                    }\n                },\n                {\n                    name: 'SLM (Exp)',\n                    type: 'bar',\n                    stack: 'Exp',\n                    emphasis: { focus: 'series' },\n                    data: data.map(item => item.SLM[1]),\n                    color: graphTheme.red,\n                    itemStyle: {\n                        decal: {\n                            symbol: 'rect',\n                            symbolSize: 1,\n                            rotation: Math.PI / 4,\n                            dashArrayX: [1, 0],\n                            dashArrayY: [2, 5],\n                            color: 'white'\n                        }\n                    }\n                }\n            ]\n        };\n\n        chart.setOption(option);\n\n        return () => {\n            chart.dispose();\n        };\n    }, []);\n\n    return (\n        <div>\n            <div className=\"graph\">\n                <div ref={chartRef} style={{ width: '100%', height: '500px' }} />\n            </div>\n            <div className=\"mt-4\">\n                <DownloadButton theme={theme} onClick={() => downloadAsJson(data, `Laminar-Distribution-Of-Synapses-Data.json`)}>\n                    Laminar distribution of synapse\n                </DownloadButton>\n            </div>\n        </div>\n    );\n};\n\nexport default LaminarDistributionOfSynapsesGraph;","import React, { useEffect, useRef, useState } from 'react';\nimport {\n    Chart,\n    LineController,\n    ScatterController,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Title,\n    Legend,\n} from 'chart.js';\nimport { downloadAsJson } from '@/utils';\nimport DownloadButton from '@/components/DownloadButton';\nimport { graphTheme } from '@/constants';\nimport { dataPath } from '@/config';\n\nChart.register(\n    LineController,\n    ScatterController,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Title,\n    Legend\n);\n\nexport type NbOfSynapsesPConnectionProps = {\n    theme?: number;\n};\n\nconst NbOfSynapsesPConnectionGraph: React.FC<NbOfSynapsesPConnectionProps> = ({ theme }) => {\n    const chartRef = useRef<HTMLCanvasElement | null>(null);\n    const [chart, setChart] = useState<Chart | null>(null);\n    const [chartData, setChartData] = useState<any>(null);\n\n    useEffect(() => {\n        fetch(`${dataPath}/4_validations/connection-anatomy/nb-of-synapses-p-connection.json`)\n            .then((response) => response.json())\n            .then((data) => setChartData(data));\n    }, []);\n\n    const createChart = () => {\n        if (chartRef.current && chartData) {\n            const ctx = chartRef.current.getContext('2d');\n            if (ctx) {\n                // Prepare data\n                const dataPoints = Object.keys(chartData.value_map.exp_mean).map(key => ({\n                    x: chartData.value_map.exp_mean[key],\n                    y: chartData.value_map.model_mean[key],\n                    xError: chartData.value_map.exp_std[key] || 0,\n                    yError: chartData.value_map.model_std[key],\n                }));\n\n                // Custom plugin for error bars, diagonal line, and points\n                const customPlugin = {\n                    id: 'customPlugin',\n                    beforeDatasetsDraw(chart, args, options) {\n                        const { ctx, chartArea: { top, bottom, left, right }, scales: { x, y } } = chart;\n\n                        ctx.save();\n\n                        // Draw diagonal line\n                        ctx.strokeStyle = 'rgba(200, 200, 200, 0.5)';\n                        ctx.setLineDash([5, 5]);\n                        ctx.beginPath();\n                        ctx.moveTo(left, bottom);\n                        ctx.lineTo(right, top);\n                        ctx.stroke();\n\n                        // Draw error bars\n                        ctx.setLineDash([]);\n                        dataPoints.forEach((datapoint) => {\n                            const xPixel = x.getPixelForValue(datapoint.x);\n                            const yPixel = y.getPixelForValue(datapoint.y);\n\n                            // X error bars\n                            ctx.strokeStyle = graphTheme.red;\n                            ctx.lineWidth = 2;\n                            const xErrorPixels = Math.abs(x.getPixelForValue(datapoint.x + datapoint.xError) - x.getPixelForValue(datapoint.x));\n                            ctx.beginPath();\n                            ctx.moveTo(xPixel - xErrorPixels, yPixel);\n                            ctx.lineTo(xPixel + xErrorPixels, yPixel);\n                            ctx.stroke();\n\n                            // Small vertical lines at the ends of X error bars\n                            const smallLineLength = 3;\n                            ctx.beginPath();\n                            ctx.moveTo(xPixel - xErrorPixels, yPixel - smallLineLength);\n                            ctx.lineTo(xPixel - xErrorPixels, yPixel + smallLineLength);\n                            ctx.moveTo(xPixel + xErrorPixels, yPixel - smallLineLength);\n                            ctx.lineTo(xPixel + xErrorPixels, yPixel + smallLineLength);\n                            ctx.stroke();\n\n                            // Y error bars\n                            ctx.strokeStyle = graphTheme.blue;\n                            const yErrorPixels = Math.abs(y.getPixelForValue(datapoint.y + datapoint.yError) - y.getPixelForValue(datapoint.y));\n                            ctx.beginPath();\n                            ctx.moveTo(xPixel, yPixel - yErrorPixels);\n                            ctx.lineTo(xPixel, yPixel + yErrorPixels);\n                            ctx.stroke();\n\n                            // Small horizontal lines at the ends of Y error bars\n                            ctx.beginPath();\n                            ctx.moveTo(xPixel - smallLineLength, yPixel - yErrorPixels);\n                            ctx.lineTo(xPixel + smallLineLength, yPixel - yErrorPixels);\n                            ctx.moveTo(xPixel - smallLineLength, yPixel + yErrorPixels);\n                            ctx.lineTo(xPixel + smallLineLength, yPixel + yErrorPixels);\n                            ctx.stroke();\n                        });\n\n                        ctx.restore();\n                    }\n                };\n\n                const newChart = new Chart(ctx, {\n                    type: 'scatter',\n                    data: {\n                        datasets: [{\n                            label: 'Model (Mean)',\n                            data: dataPoints,\n                            backgroundColor: graphTheme.blue,\n                            pointStyle: 'circle',\n                            borderColor: graphTheme.blue,\n                            borderWidth: 1,\n                        }]\n                    },\n                    options: {\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                            x: {\n                                title: {\n                                    display: true,\n                                    text: 'Experiment',\n                                },\n                                type: 'linear',\n                                position: 'bottom',\n                                min: 0,\n                                max: 15,\n                                display: true,\n                            },\n                            y: {\n                                type: 'linear',\n                                position: 'left',\n                                title: {\n                                    display: true,\n                                    text: 'Model',\n                                },\n                                min: 0,\n                                max: 18,\n                                ticks: {\n                                    font: {\n                                        size: 12,\n                                    },\n                                }\n                            }\n                        },\n                        plugins: {\n                            legend: {\n                                position: 'top',\n                                align: 'end',\n                                labels: {\n                                    usePointStyle: true,\n                                    pointStyle: 'circle',\n                                    boxWidth: 6,\n                                    boxHeight: 6,\n                                    padding: 20,\n                                },\n                                title: {\n                                    padding: {\n                                        top: 10,\n                                        bottom: 10\n                                    }\n                                }\n                            },\n                            tooltip: {\n                                callbacks: {\n                                    label: (context) => {\n                                        const dataIndex = context.dataIndex;\n                                        const pre = chartData.value_map.pre[dataIndex];\n                                        const post = chartData.value_map.post[dataIndex];\n                                        return `${pre} -> ${post}: (${context.parsed.x.toFixed(2)}, ${context.parsed.y.toFixed(2)})`;\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    plugins: [customPlugin]\n                });\n\n                setChart(newChart);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (chartData) {\n            createChart();\n        }\n    }, [chartData]);\n\n    useEffect(() => {\n        const handleResize = () => {\n            if (chart) {\n                chart.resize();\n            }\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            if (chart) {\n                chart.destroy();\n            }\n        };\n    }, [chart]);\n\n    return (\n        <div>\n            <div className=\"graph graph--rect\" style={{ height: \"500px\" }}>\n                <canvas ref={chartRef} />\n            </div>\n            <div className=\"mt-4\">\n                <DownloadButton theme={theme} onClick={() => downloadAsJson(chartData, `Nb-Of-Synapses-Per-Connection-Data.json`)}>\n                    Number of synapses per connection\n                </DownloadButton>\n            </div>\n        </div>\n    );\n};\n\nexport default NbOfSynapsesPConnectionGraph;","import React, { useEffect, useRef, useState } from 'react';\nimport * as echarts from 'echarts';\nimport { downloadAsJson } from '@/utils';\nimport DownloadButton from '@/components/DownloadButton';\nimport { graphTheme } from '@/constants';\nimport { dataPath } from '@/config';\n\nexport type SynapticDivergencePercentagesProps = {\n    theme?: number;\n};\n\nconst SynapticDivergencePercentagesGraph: React.FC<SynapticDivergencePercentagesProps> = ({ theme }) => {\n    const chartRef = useRef<HTMLDivElement | null>(null);\n    const [data, setData] = useState<any>(null);\n\n    useEffect(() => {\n        fetch(dataPath + '/4_validations/connection-anatomy/synaptic-divergence-percentages.json')\n            .then((response) => response.json())\n            .then((data) => setData(data));\n    }, []);\n\n    useEffect(() => {\n        if (data && chartRef.current) {\n            const chart = echarts.init(chartRef.current);\n            const mtypes = Object.values(data.value_map.mtype);\n            const spPcIndex = mtypes.indexOf('SP_PC');\n\n            const option = {\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'shadow'\n                    },\n                    formatter: function (params) {\n                        let tooltip = params[0].axisValue + '<br/>';\n                        params.forEach(param => {\n                            tooltip += `${param.seriesName}: ${param.value.toFixed(2)}%<br/>`;\n                        });\n                        return tooltip;\n                    }\n                },\n                legend: {\n                    data: [\n                        {\n                            name: 'E-E',\n                            itemStyle: { color: graphTheme.red }\n                        },\n                        {\n                            name: 'E-I',\n                            itemStyle: { color: graphTheme.green }\n                        },\n                        {\n                            name: 'I-E',\n                            itemStyle: { color: graphTheme.blue }\n                        },\n                        {\n                            name: 'I-I',\n                            itemStyle: { color: graphTheme.purple }\n                        },\n\n\n                    ],\n                    right: 10,\n                    top: 'center',\n                    orient: 'vertical',\n                    selectedMode: false,\n                },\n                xAxis: {\n                    type: 'category',\n                    data: mtypes,\n                    axisLabel: {\n                        interval: 0,\n                        rotate: 45,\n                        align: 'right',\n                        margin: 10\n                    },\n                    name: 'mtype',\n                    nameLocation: 'middle',\n                    nameGap: 50\n                },\n                yAxis: {\n                    type: 'value',\n                    name: 'Divergence (%)',\n                    nameLocation: 'middle',\n                    nameGap: 40,\n                    min: 0,\n                    max: 100\n                },\n                grid: {\n                    bottom: '15%',\n                    right: '15%'\n                },\n                series: [\n                    {\n                        name: 'I-E',\n                        type: 'bar',\n                        stack: 'Model',\n                        emphasis: { focus: 'series' },\n                        data: mtypes.map((_, index) => ({\n                            value: data.value_map.model_PC[index],\n                            itemStyle: {\n                                color: index === spPcIndex ? graphTheme.red : graphTheme.blue\n                            }\n                        }))\n                    },\n                    {\n                        name: 'I-I',\n                        type: 'bar',\n                        stack: 'Model',\n                        emphasis: { focus: 'series' },\n                        data: mtypes.map((_, index) => ({\n                            value: data.value_map.model_INT[index],\n                            itemStyle: {\n                                color: index === spPcIndex ? graphTheme.green : graphTheme.purple\n                            }\n                        }))\n                    },\n                    {\n                        name: 'E-E',\n                        type: 'bar',\n                        stack: 'Exp',\n                        emphasis: { focus: 'series' },\n                        data: mtypes.map((_, index) => ({\n                            value: data.value_map.exp_PC[index] || 0,\n                            itemStyle: {\n                                color: index === 6 ? graphTheme.red : graphTheme.blue,\n                                decal: {\n                                    symbol: 'rect',\n                                    symbolSize: 1,\n                                    rotation: Math.PI / 4,\n                                    dashArrayX: [1, 0],\n                                    dashArrayY: [2, 5],\n                                    color: 'white'\n                                }\n                            }\n                        }))\n                    },\n                    {\n                        name: 'E-I',\n                        type: 'bar',\n                        stack: 'Exp',\n                        emphasis: { focus: 'series' },\n                        data: mtypes.map((_, index) => ({\n                            value: data.value_map.exp_INT[index] || 0,\n                            itemStyle: {\n                                color: index === 6 ? graphTheme.green : graphTheme.purple,\n                                decal: {\n                                    symbol: 'rect',\n                                    symbolSize: 1,\n                                    rotation: Math.PI / 4,\n                                    dashArrayX: [1, 0],\n                                    dashArrayY: [2, 5],\n                                    color: 'white'\n                                }\n                            }\n                        }))\n                    }\n                ]\n            };\n\n            chart.setOption(option);\n\n            const handleResize = () => {\n                chart.resize();\n            };\n\n            window.addEventListener('resize', handleResize);\n\n            return () => {\n                window.removeEventListener('resize', handleResize);\n                chart.dispose();\n            };\n        }\n    }, [data]);\n\n    return (\n        <div>\n            <div className=\"graph\" style={{ height: \"500px\" }} ref={chartRef} />\n            <div className=\"mt-4\">\n                <DownloadButton theme={theme} onClick={() => downloadAsJson(data, `Synaptic-Divergence-Percentages-Data.json`)}>\n                    Synaptic divergence percentages\n                </DownloadButton>\n            </div>\n        </div>\n    );\n};\n\nexport default SynapticDivergencePercentagesGraph;","import React, { useEffect, useState } from 'react';\nimport Link from 'next/link';\n\nimport Filters from '@/layouts/Filters';\nimport StickyContainer from '@/components/StickyContainer';\n\nimport Title from '@/components/Title';\nimport InfoBox from '@/components/InfoBox';\nimport DataContainer from '@/components/DataContainer';\nimport Collapsible from '@/components/Collapsible';\n\nimport BoutonDensityValidation from './connection-anatomy/BoutonDensityValidation';\nimport ConnectionProbability from './connection-anatomy/ConnectionProbability';\nimport DivergenceValidation from './connection-anatomy/DivergenceValidation';\n\nimport ConvergenceValidation from './connection-anatomy/ConvergenceValidation';\n\nimport LaminarDistributionOfDynapses from './connection-anatomy/LaminarDistributionOfSynapses';\nimport NbOfSynapsesPConnection from './connection-anatomy/NbOfSynapsesPConnection';\nimport SynapticDivergencePercentages from './connection-anatomy/SynapticDivergencePercentages';\n\nimport { dataPath } from '@/config';\n\nconst ConnectionAnatomyView: React.FC = () => {\n\n    const theme = 4;\n\n    const [convergenceValidaton, setConvergenceValidaton] = useState(null);\n\n    useEffect(() => {\n        fetch(dataPath + '/4_validations/connection-anatomy/convergence-validation.json')\n            .then((response) => response.json())\n            .then((data) => setConvergenceValidaton(data));\n\n    }, []);\n\n    return (\n        <>\n            <Filters theme={theme} hasData={true}>\n                <div className=\"flex flex-col lg:flex-row w-full lg:items-center mt-40 lg:mt-0\">\n                    <div className=\"w-full md:flex-none mb-8 md:mb-8 lg:pr-0\">\n                        <StickyContainer>\n                            <Title\n                                title=\"Connection Anatomy\"\n                                subtitle=\"Validations\"\n                                theme={theme}\n                            />\n                            <div role=\"information\">\n                                <InfoBox>\n                                    <p>\n                                        We validated the <Link className={`link theme-${theme}`} href={'#'}>connectome</Link> with a series of <Link className={`link theme-${theme}`} href={'#'}>experimental data</Link> not used to constrain it. These data include bouton density, number of synapses per connection, connection probability, convergence, and divergence.\n                                    </p>\n                                </InfoBox>\n                            </div>\n                        </StickyContainer>\n                    </div>\n                </div>\n            </Filters>\n            <DataContainer theme={theme}\n                navItems={[\n                    { id: 'BoutonDensityValidationSection', label: 'Bouton density validation' },\n                    { id: 'ConnectionProbabilitySection', label: 'Connection probabilites validation' },\n                    { id: 'ConvergenceValidationSection', label: 'Convergence validation' },\n                    { id: 'DivergenceValidationSection', label: 'Divergence validation' },\n                    { id: 'NbOfSynapsesPConnectionSection', label: 'Nb. of synapse p.connection validation' },\n                    { id: 'SynapticDivergencePercentagesSection', label: 'Synaptic divergence percentages' },\n                    { id: 'ModelLaminarDistributionOfDynapsesSection', label: 'Model laminar distribution of synapses' },\n                ]}>\n\n                <Collapsible id=\"BoutonDensityValidationSection\" title={`Bouton density validation`}>\n                    <BoutonDensityValidation theme={theme} />\n                </Collapsible>\n\n                <Collapsible id=\"ConnectionProbabilitySection\" title={`Connection probabilites validation`}>\n                    <ConnectionProbability theme={theme} />\n                </Collapsible>\n\n                <Collapsible id=\"ConvergenceValidationSection\" title={`Convergence validation`}>\n\n                    <div className=\"flex flex-col gap-8\">\n                        {convergenceValidaton && (\n                            <ConvergenceValidation data={convergenceValidaton} theme={theme} />\n                        )}\n                    </div>\n\n                </Collapsible>\n\n                <Collapsible id=\"DivergenceValidationSection\" title={`Divergence validation`}>\n                    <DivergenceValidation theme={theme} />\n                </Collapsible>\n\n                <Collapsible id=\"NbOfSynapsesPConnectionSection\" title={`Number of synapse per connection validation`}>\n                    <NbOfSynapsesPConnection theme={theme} />\n                </Collapsible>\n\n                <Collapsible id=\"SynapticDivergencePercentagesSection\" title={`Synaptic divergence percentages`}>\n                    <SynapticDivergencePercentages theme={theme} />\n                </Collapsible>\n\n\n                <Collapsible id=\"ModelLaminarDistributionOfDynapsesSection\" title={`Model laminar distribution of synapses`}>\n                    <LaminarDistributionOfDynapses theme={theme} />\n                </Collapsible>\n\n\n\n            </DataContainer >\n        </>\n    );\n};\n\n\nexport default ConnectionAnatomyView;\n","import Head from 'next/head';\nimport ConnectionAnatomyView from '../../views/4_validations/ConnnectionAnatomy';\n\nexport default function ConnectionAnatomyPage() {\n  const metadata = {\n    title: 'Pathway Anatomy - Validation | The Hippocampus Hub',\n    description:\n      'We validated pathway anatomy with experimental data, including synaptic connection densities, bouton densities, and synapse divergence and convergence ratios.',\n    keywords: [\n      'Pathway Anatomy',\n      'Synapse Density',\n      'Bouton Density',\n      'Divergence Ratios',\n      'Convergence Ratios',\n      'Validation Data',\n      'Hippocampus',\n      'Neuroscience',\n      'Blue Brain Project',\n    ],\n    author: 'Blue Brain Project',\n    creator: 'EPFL Blue Brain Project',\n    publisher: 'The Hippocampus Hub',\n  };\n\n  return (\n    <>\n      <Head>\n        <title>{metadata.title}</title>\n        <meta name=\"description\" content={metadata.description} />\n        <meta name=\"keywords\" content={metadata.keywords.join(', ')} />\n        <meta name=\"author\" content={metadata.author} />\n        <meta name=\"creator\" content={metadata.creator} />\n        <meta name=\"publisher\" content={metadata.publisher} />\n      </Head>\n\n      <ConnectionAnatomyView />\n    </>\n  );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__31D34\",\"container--center\":\"styles_container--center__Yuntq\",\"flexWrapper\":\"styles_flexWrapper___gDLe\"};"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","centered","children","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","styles","classNames","layers","theme","default","hover","selected","selectedEdges","graphTheme","red","blue","green","purple","yellow","themeColors","experimental_data","reconstruction_data","digital_reconstruction","validations","predictions","neuriteTypes","volumeSections","achConcentrations","cellGroup","defaultSelection","experimentalData","layerAnatomy","layer","neuronMorphology","mtype","instance","neuronElectrophysiology","etype","etype_instance","reconstructionData","volume","volume_section","cellComposition","neurons","digitalReconstruction","region","morphologyLibrary","morphology","schafferCollateral","prelayer","postlayer","connectionAnatomy","connectionPhysiology","acetylcholineEffectsOnCell","acetylcholineEffectsOnSynapses","ach_concentration","NeuronModelLibrary","synapticPathways","acetylcholine","neuriteColor","all","axon","apical","basal","dendrite","soma","Chart","register","ScatterController","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Title","Legend","BoutonDensityValidation","chartRef","useRef","chart","setChart","useState","data","setData","useEffect","fetch","dataPath","then","response","json","catch","console","error","createChart","current","ctx","getContext","newChart","type","labels","Object","values","value_map","datasets","label","map","_","index","x","y","model_mean","yMin","model_std","yMax","backgroundColor","borderColor","pointStyle","pointRadius","showLine","exp_mean","options","responsive","maintainAspectRatio","scales","title","display","text","min","max","plugins","legend","position","align","usePointStyle","boxWidth","boxHeight","padding","font","size","weight","onClick","id","afterDatasetsDraw","args","save","forEach","dataset","datapoint","undefined","xPos","getPixelForValue","yPosMin","yPosMax","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","restore","handleResize","resize","addEventListener","removeEventListener","destroy","jsx_runtime","jsxs","style","height","canvas","ref","DownloadButton","downloadAsJson","ConnectionProbability","fetchedData","rawChartData","keys","key","connectionClass","connection_class","chartData","filter","d","ticks","color","grid","tooltip","callbacks","context","parsed","toFixed","concat","afterDraw","chartArea","top","bottom","left","right","setLineDash","LineController","BarController","DivergenceValidation","modelData","experimentData","exp_std","borderWidth","value","xPixel","point","yMinPixel","yMaxPixel","errorBarPlugin","i","xScale","yScaleMin","yScaleMax","Math","ConvergenceValidation","maxValue","reduce","offset","suggestedMax","enabled","layout","name","LaminarDistributionOfSynapses","SO","SP","SR","SLM","out","echarts","option","trigger","axisPointer","xAxis","item","axisLabel","interval","rotate","margin","nameLocation","nameGap","yAxis","nameRotate","series","stack","emphasis","focus","itemStyle","decal","symbol","symbolSize","rotation","PI","dashArrayX","dashArrayY","setOption","dispose","width","NbOfSynapsesPConnection","setChartData","dataPoints","xError","yError","dataIndex","pre","post","beforeDatasetsDraw","yPixel","xErrorPixels","abs","yErrorPixels","SynapticDivergencePercentages","mtypes","spPcIndex","indexOf","formatter","params","axisValue","seriesName","orient","selectedMode","model_PC","model_INT","exp_PC","exp_INT","ConnnectionAnatomy","convergenceValidaton","setConvergenceValidaton","Fragment","Filters","hasData","StickyContainer","subtitle","role","InfoBox","p","Link","href","DataContainer","navItems","Collapsible","LaminarDistributionOfDynapses","ConnectionAnatomyPage","metadata","description","keywords","author","creator","publisher","Head","meta","content","join","ConnectionAnatomyView","module","exports"],"sourceRoot":""}