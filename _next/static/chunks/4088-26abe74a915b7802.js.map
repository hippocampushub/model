{"version":3,"file":"static/chunks/4088-26abe74a915b7802.js","mappings":"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","sources":["webpack://_N_E/./src/components/List/index.tsx","webpack://_N_E/./src/constants.ts","webpack://_N_E/./src/views/MorphoViewer/tools/for-each-line.ts","webpack://_N_E/./src/views/MorphoViewer/tools/parser.ts","webpack://_N_E/./src/views/MorphoViewer/tools/segments.ts","webpack://_N_E/./src/views/MorphoViewer/tools/nodes-to-segments.ts","webpack://_N_E/./src/views/MorphoViewer/gizmo/painter/tips.ts","webpack://_N_E/./src/views/MorphoViewer/gizmo/gizmo-canvas.ts","webpack://_N_E/./src/views/MorphoViewer/gizmo/index.ts","webpack://_N_E/./src/views/MorphoViewer/tools/interpolate-camera.ts","webpack://_N_E/./src/views/MorphoViewer/Scalebar/compute-scalebar.ts","webpack://_N_E/./src/views/MorphoViewer/Scalebar/Scalebar.tsx","webpack://_N_E/./src/views/MorphoViewer/Scalebar/index.ts","webpack://_N_E/./src/views/MorphoViewer/Scalebar/pixel-scale-watcher.ts","webpack://_N_E/./src/views/MorphoViewer/SwcViewer/Legend/Legend.tsx","webpack://_N_E/./src/views/MorphoViewer/SwcViewer/SwcViewer.tsx","webpack://_N_E/./src/views/MorphoViewer/SwcViewer/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/math/mat3.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/camera/camera.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/camera/camera-orthographic.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/camera/camera-perspective.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/camera/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/dataset/dataset.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/dataset/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/debug.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/event/event.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/buffer/buffer.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/input/keyboard.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/input/pointer.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/input/inputs.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/resource/resource.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/program/program.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/resource/program.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/loader/image.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/utils/action/camera.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/utils/action/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/utils/canvas.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/utils/ease-func/ease-func.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/utils/ease-func/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/utils/fullscreen.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/utils/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/texture/texture2d.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/texture/textureCube.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/texture/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/resource/texture2d.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/resource/textureCube.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/resource/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/vao/vao.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/group.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/context/animation/animation-manager.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/context/context.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/context/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/controller/camera/orbit.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/controller/camera/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/controller/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/event/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/math/mat4.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/math/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/math/vec4.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/math/quat.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/math/transfo.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/math/vec3.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/axis/axis.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/axis/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/background/background.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/background/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/clear.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/depth.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/node.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/segments/segments.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/segments/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/skybox/skybox.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/skybox/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/index.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/painter/painter.ts","webpack://_N_E/./src/views/MorphoViewer/tgd/utils/math.ts","webpack://_N_E/./src/views/MorphoViewer/tools/nodes.ts","webpack://_N_E/./src/views/MorphoViewer/types.ts","webpack://_N_E/./src/views/MorphoViewer/Scalebar/scalebar.module.css","webpack://_N_E/./src/views/MorphoViewer/SwcViewer/Legend/legend.module.css","webpack://_N_E/./src/views/MorphoViewer/SwcViewer/swc-viewer.module.css","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\n\nimport { Color } from '../../types';\n\n\nconst classPrefixList = 'list__';\nconst classPrefixListElement = 'list-element__';\n\ntype ListProps = {\n  title?: string;\n  list: string[];\n  value?: string;\n  onSelect?: (s: string) => void;\n  color?: Color;\n  anchor?: string;\n  block?: boolean;\n  className?: string;\n  theme?: number;\n  grow?: boolean\n};\n\nconst List: React.FC<ListProps> = ({\n  title,\n  list,\n  value,\n  onSelect = () => { },\n  color,\n  theme = 1,\n  className = '',\n  block = false,\n  grow\n}) => {\n  const handleSelectedElement = (element: string) => onSelect(element);\n\n  return (\n    <div\n      className={`${classPrefixList}basis  ${grow && 'flex-1 !flex flex-col'} set-accent-color--${color} selected theme-${theme} ${className} ${block ? 'block' : ''}`}\n      role=\"radiogroup\"\n    >\n      {title && <p className={`theme-${theme}`}>{title}</p>}\n      <div className={`elements ${grow && 'flex-grow'}`}>\n        {list.map(element => (\n          <div\n            key={element}\n            role=\"radio\"\n            aria-checked={value === element}\n            tabIndex={0}\n            className={`${classPrefixListElement}basis theme-${theme} ${value === element ? 'selected ' : ''}`}\n            onClick={() => handleSelectedElement(element)}\n            title={element}\n          >\n            {element}\n          </div>\n\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import { Layer, NeuriteType, VolumeSection, AchConcentration, CellGroup, Theme, GraphTheme, ThemeColors } from './types';\nimport NeuronModelLibrary from './views/2_reconstruction-data/NeuronModelLibrary';\nimport AcetylcholineView from './views/4_validations/Acetylcholine';\n\nexport const layers: Layer[] = [\n  'SLM',\n  'SR',\n  'SP',\n  'SO',\n];\n\nexport const theme: Theme = {\n  1: { default: 0x44405B, hover: 0x7D656F, selected: 0xB68983, selectedEdges: 0xEFAE97 },\n  2: { default: 0x44405B, hover: 0x7B5B6A, selected: 0xB37579, selectedEdges: 0xEA9088 },\n  3: { default: 0x44405B, hover: 0x715970, selected: 0x9F7184, selectedEdges: 0xCC8A99 },\n  4: { default: 0x44405B, hover: 0x625D77, selected: 0x807B92, selectedEdges: 0x9E98AE },\n  5: { default: 0x393D5E, hover: 0x595D79, selected: 0x6E7B97, selectedEdges: 0x8398B5 },\n};\n\nexport const graphTheme: GraphTheme = {\n  red: \"#C46785\",\n  blue: \"#3b4165\",\n  green: \"#7FD982\",\n  purple: \"#7F5482\",\n  yellow: \"#f9f871\",\n};\n\nexport const themeColors: ThemeColors = {\n  experimental_data: \"#EFAE97\",\n  reconstruction_data: \"#EA9088\",\n  digital_reconstruction: \"#CC8A99\",\n  validations: \"#9E98AE\",\n  predictions: \"#8398B5\",\n};\n\n\n\nexport const neuriteTypes: NeuriteType[] = [\n  'all',\n  'axon',\n  'apical',\n  'basal',\n  'dendrite',\n  'soma',\n\n];\n\nexport const volumeSections: VolumeSection[] = [\n  'region',\n  'slice',\n  'cylinder',\n];\n\n\nexport const achConcentrations: AchConcentration[] = [\n  '0um',\n  '10um',\n  '100um'\n];\n\nexport const cellGroup: CellGroup[] = [\n  'All',\n  'Excitatory',\n  'Inhibitory',\n  'SLM_PPA',\n  'SO_BP',\n  'SO_BS',\n  'SO_OLM',\n  'SO_Tri',\n  'SP_AA',\n  'SP_BS',\n  'SP_CCKBC',\n  'SP_Ivy',\n  'SP_PC',\n  'SP_PVBC',\n  'SR_SCA'\n]\n\nexport const defaultSelection = {\n  experimentalData: {\n    layerAnatomy: {\n      layer: 'SLM',\n    },\n    neuronMorphology: {\n      layer: 'SLM',\n      mtype: 'SLM_PPA',\n      instance: '011127HP1',\n    },\n    neuronElectrophysiology: {\n      etype: 'bAC',\n      etype_instance: '95810035',\n    },\n  },\n  reconstructionData: {\n    volume: {\n      volume_section: 'region',\n    },\n    cellComposition: {\n      volume_section: 'region',\n    },\n    neurons: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      instance: 'CA1_int_bAC_011127HP1_20190329115610',\n    },\n  },\n  digitalReconstruction: {\n    region: {\n      volume_section: 'region',\n    },\n    morphologyLibrary: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      morphology: '011127HP1',\n    },\n    schafferCollateral: {\n      volume_section: 'region',\n      prelayer: 'SC',\n      postlayer: 'All'\n    },\n    connectionAnatomy: {\n      volume_section: 'region',\n      prelayer: 'All',\n      postlayer: 'All'\n    },\n    connectionPhysiology: {\n      volume_section: 'region',\n      prelayer: 'all',\n      postlayer: 'all'\n    },\n    acetylcholineEffectsOnCell: {\n      morphology: \"450290\",\n      etype: \"cNAC\",\n      mtype: \"SO_BP\"\n    },\n    acetylcholineEffectsOnSynapses: {\n      ach_concentration: '0um',\n      prelayer: 'Excitatory',\n      postlayer: 'Excitatory'\n    },\n\n    neurons: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      instance: '011127HP1',\n    },\n    NeuronModelLibrary: {\n      mtype: 'SO_BP',\n      etype: 'cNAC',\n      morphology: '980120A_-_Scale_x1.000_y0.900_z1.000'\n    },\n    synapticPathways: {\n      volume_section: 'slice',\n      prelayer: 'All',\n      postlayer: 'All',\n    },\n    acetylcholine: {\n      ach_concentration: '0um',\n      prelayer: 'Excitatory',\n      postlayer: 'Excitatory',\n    },\n  },\n\n};\n\nexport const neuriteColor: Record<NeuriteType, string> = {\n  all: '#1fcf1f',\n  axon: '#1111ff',\n  apical: '#f442ad',\n  basal: '#ff1111',\n  dendrite: '#ff1111',\n  soma: '#000',\n};\n","/**\n * Generator to iterate on each lines of a big string content.\n */\nexport const forEachLine = function* (content: string) {\n    const len = content.length\n    let index = 0\n    let cursor = 0\n    while (index > -1 && index < len) {\n        index = content.indexOf(\"\\n\", cursor)\n        if (index < 0) break\n\n        yield content.substring(cursor, index).trim()\n        cursor = index + 1\n    }\n    return content.substring(cursor).trim()\n}\n","import { CellNode, CellNodeType } from \"../types\";\nimport { forEachLine } from \"./for-each-line\";\nimport { CellNodes } from \"./nodes\";\n\nexport function parseSwc(content: string): CellNodes {\n  const nodes: CellNode[] = [];\n  for (const rawLine of forEachLine(content)) {\n    const line = stripComment(rawLine);\n    const items = line.split(/\\s+/);\n    if (items.length < 7) continue;\n\n    const [index, rawType, x, y, z, radius, parent] = items.map((s) =>\n      Number(s)\n    );\n    const type =\n      rawType > 0 && rawType < 5\n        ? (rawType as CellNodeType)\n        : CellNodeType.Unknown;\n    nodes.push({\n      index,\n      parent,\n      type,\n      x,\n      y,\n      z,\n      radius,\n      u: 0,\n      v: getTextureCoordFromType(type),\n    });\n  }\n  return new CellNodes(nodes);\n}\n\nfunction stripComment(line: string): string {\n  const pos = line.indexOf(\"#\");\n  if (pos < 0) return line;\n\n  return line.substring(0, pos).trim();\n}\n\nfunction getTextureCoordFromType(type: CellNodeType): number {\n  return (getIndexFromType(type) + 0.5) / 5;\n}\n\nfunction getIndexFromType(type: CellNodeType): number {\n  switch (type) {\n    case CellNodeType.Soma:\n      return 0;\n    case CellNodeType.Axon:\n      return 1;\n    case CellNodeType.BasalDendrite:\n      return 2;\n    case CellNodeType.ApicalDendrite:\n      return 3;\n    default:\n      return 4;\n  }\n}\n","import { TgdPainterSegmentsData } from \"@tgd/painter\";\n\nimport { CellNodes } from \"./nodes\";\nimport { CellNodeType } from \"../types\";\n\nexport class Segments {\n  private _data: TgdPainterSegmentsData | null = null;\n  private _count = 0;\n  private readonly nodesXYZR: [\n    x: number,\n    y: number,\n    z: number,\n    radius: number\n  ][] = [];\n  private readonly nodesUV: [u: number, v: number][] = [];\n  private readonly nodesInfluence: number[] = [];\n  private readonly attAxyzr: number[][] = [];\n  private readonly attAuv: number[][] = [];\n  private readonly attAinfluence: number[] = [];\n  private readonly attBxyzr: number[][] = [];\n  private readonly attBuv: number[][] = [];\n  private readonly attBinfluence: number[] = [];\n  private readonly elemByIndex = new Map<number, number>();\n\n  constructor(nodes: CellNodes) {\n    nodes.forEach(({ index, type, x, y, z, radius, u, v }) => {\n      const elem = this.nodesUV.length;\n      this.nodesXYZR.push([x, y, z, radius]);\n      this.nodesUV.push([u, v]);\n      this.nodesInfluence.push(type === CellNodeType.Soma ? 0 : 1);\n      this.elemByIndex.set(index, elem);\n    });\n  }\n\n  get count() {\n    return this._count;\n  }\n\n  addSegment(indexNodeA: number, indexNodeB: number) {\n    const { data } = this;\n    const elemA = this.elemByIndex.get(indexNodeA);\n    if (typeof elemA !== \"number\") return;\n\n    const elemB = this.elemByIndex.get(indexNodeB);\n    if (typeof elemB !== \"number\") return;\n\n    const nodeAxyzr = this.nodesXYZR[elemA];\n    const nodeBxyzr = this.nodesXYZR[elemB];\n    const nodeAuv = this.nodesUV[elemA];\n    const nodeBuv = this.nodesUV[elemB];\n    const influenceA = this.nodesInfluence[elemA];\n    const influenceB = this.nodesInfluence[elemB];\n    const influenceC = (influenceA + influenceB) * 0.5;\n    const [, aV] = nodeAuv;\n    const [, bV] = nodeBuv;\n    if (aV === bV) {\n      // This segment as the same color on both tips.\n      this.pushA(nodeAxyzr, nodeAuv, influenceA);\n      this.pushB(nodeBxyzr, nodeBuv, influenceB);\n      data.add(nodeAxyzr, nodeBxyzr, nodeAuv, nodeBuv, influenceA, influenceB);\n      this._count++;\n    } else {\n      // We need to split this segment in two parts.\n      // So each part will have an uniform color.\n      const [xA, yA, zA, rA] = nodeAxyzr;\n      const [xB, yB, zB, rB] = nodeBxyzr;\n      const nodeCxyzr: [number, number, number, number] = [\n        (xA + xB) * 0.5,\n        (yA + yB) * 0.5,\n        (zA + zB) * 0.5,\n        (rA + rB) * 0.5,\n      ];\n      this.pushA(nodeAxyzr, nodeAuv, influenceA);\n      this.pushB(nodeCxyzr, nodeAuv, influenceA);\n      data.add(nodeAxyzr, nodeCxyzr, nodeAuv, nodeAuv, influenceA, influenceC);\n      this._count++;\n      this.pushA(nodeCxyzr, nodeBuv, influenceB);\n      this.pushB(nodeBxyzr, nodeBuv, influenceB);\n      data.add(nodeCxyzr, nodeBxyzr, nodeBuv, nodeBuv, influenceC, influenceB);\n      this._count++;\n    }\n  }\n\n  get data() {\n    if (!this._data) {\n      this._data = new TgdPainterSegmentsData();\n      for (let i = 0; i < this.attAxyzr.length; i++) {\n        const Axyzr = this.attAxyzr[i] as [number, number, number, number];\n        const Auv = this.attAuv[i] as [number, number];\n        const Ainfluence = this.attAinfluence[i];\n        const Bxyzr = this.attBxyzr[i] as [number, number, number, number];\n        const Buv = this.attBuv[i] as [number, number];\n        const Binfluence = this.attBinfluence[i];\n        this._data.add(Axyzr, Bxyzr, Auv, Buv, Ainfluence, Binfluence);\n      }\n    }\n    return this._data;\n  }\n\n  private pushA(\n    xyzr: [x: number, y: number, z: number, radius: number],\n    uv: [u: number, v: number],\n    influence: number\n  ) {\n    this.attAxyzr.push(xyzr);\n    this.attAuv.push(uv);\n    this.attAinfluence.push(influence);\n  }\n\n  private pushB(\n    xyzr: [x: number, y: number, z: number, radius: number],\n    uv: [u: number, v: number],\n    influence: number\n  ) {\n    this.attBxyzr.push(xyzr);\n    this.attBuv.push(uv);\n    this.attBinfluence.push(influence);\n  }\n}\n","import { TgdPainterSegmentsData } from \"../tgd\";\nimport { CellNodeType } from \"../types\";\nimport { CellNodes } from \"./nodes\";\nimport { Segments } from \"./segments\";\n\nexport function nodesToSegmentsData(nodes: CellNodes): TgdPainterSegmentsData {\n  const segments = new Segments(nodes);\n  nodes.forEach(\n    ({ index: childIndex, parent: parentIndex, type: childType }) => {\n      if (parentIndex < 0) return;\n\n      const parent = nodes.getByIndex(parentIndex);\n      if (!parent) return;\n\n      const parentType = parent.type;\n      if (parentType === CellNodeType.Soma && childType !== CellNodeType.Soma)\n        return;\n\n      segments.addSegment(childIndex, parentIndex);\n    }\n  );\n  return segments.data;\n}\n","import {\n    TgdCameraPerspective,\n    TgdContext,\n    TgdDataset,\n    TgdPainter,\n    TgdProgram,\n    TgdTexture2D,\n    TgdVec3,\n    TgdVertexArray,\n    tgdCanvasCreateWithContext2D,\n} from \"@tgd\"\n\nimport FRAG from \"./shader.frag\"\nimport VERT from \"./shader.vert\"\n\nexport class TipsPainter extends TgdPainter {\n    public readonly camera = new TgdCameraPerspective({\n        distance: 4,\n        target: new TgdVec3(0, 0, 0),\n        fovy: Math.PI / 4,\n        near: 1e-6,\n        far: 8,\n    })\n    private readonly texture: TgdTexture2D\n    private readonly prg: TgdProgram\n    private readonly vao: TgdVertexArray\n\n    constructor(private readonly context: TgdContext) {\n        super()\n        this.texture = context.textures2D.create({\n            minFilter: \"LINEAR\",\n            magFilter: \"LINEAR\",\n        })\n        this.setTips()\n        const data = new TgdDataset({\n            attPos: \"vec3\",\n            attUV: \"vec2\",\n        })\n        // prettier-ignore\n        data.set(\"attPos\", new Float32Array([\n             1,  0,  0,\n             0,  1,  0,\n             0,  0,  1,\n            -1,  0,  0,\n             0, -1,  0,\n             0,  0, -1,\n        ]))\n        const X = 1 / 3\n        const Y = 1 / 2\n        // prettier-ignore\n        data.set(\"attUV\", new Float32Array([\n              0, 0,\n              X, 0,\n            2*X, 0,\n              0, Y,\n              X, Y,\n            2*X, Y,\n        ]))\n        const prg = context.programs.create({ vert: VERT, frag: FRAG })\n        const vao = context.createVAO(prg, [data])\n        this.prg = prg\n        this.vao = vao\n    }\n\n    delete(): void {\n        this.vao.delete()\n    }\n\n    paint(): void {\n        const { camera, context, prg, vao } = this\n        const { gl } = context\n        camera.orientation = context.camera.orientation\n        camera.screenWidth = context.width\n        camera.screenHeight = context.height\n        prg.use()\n        this.texture.activate(prg, \"uniTexture\")\n        prg.uniform1f(\"uniScreenHeight\", context.height)\n        prg.uniformMatrix4fv(\"uniModelViewMatrix\", camera.matrixModelView)\n        prg.uniformMatrix4fv(\"uniProjectionMatrix\", camera.matrixProjection)\n        vao.bind()\n        gl.drawArrays(gl.POINTS, 0, 6)\n    }\n\n    setTips() {\n        const SIZE = 256\n        const { canvas, ctx } = tgdCanvasCreateWithContext2D(SIZE * 3, SIZE * 2)\n        paintDisk(ctx, 0, 0, SIZE, \"X\", \"#f00\", \"#fff\")\n        paintDisk(ctx, 1, 0, SIZE, \"Y\", \"#0f0\", \"#000\")\n        paintDisk(ctx, 2, 0, SIZE, \"Z\", \"#00f\", \"#fff\")\n        paintDisk(ctx, 0, 1, SIZE, \"\", \"#f00\", \"#500\")\n        paintDisk(ctx, 1, 1, SIZE, \"\", \"#0f0\", \"#050\")\n        paintDisk(ctx, 2, 1, SIZE, \"\", \"#00f\", \"#005\")\n        this.texture.loadImage(canvas)\n    }\n}\n\nfunction paintDisk(\n    ctx: CanvasRenderingContext2D,\n    col: number,\n    row: number,\n    size: number,\n    text: string,\n    colorBack: string,\n    colorText = \"#fff\"\n) {\n    const x = (col + 0.5) * size\n    const y = (row + 0.5) * size\n    const r = size * 0.45\n    ctx.fillStyle = colorBack\n    ctx.beginPath()\n    ctx.ellipse(x, y, r, r, 0, 0, 2 * Math.PI)\n    ctx.fill()\n    if (text) {\n        ctx.font = `bold ${size * 0.5}px sans-serif`\n        ctx.fillStyle = colorText\n        ctx.textAlign = \"center\"\n        ctx.textBaseline = \"middle\"\n        ctx.fillText(text, x, y)\n    } else {\n        ctx.fillStyle = colorText\n        ctx.beginPath()\n        ctx.ellipse(x, y, r * 0.8, r * 0.8, 0, 0, 2 * Math.PI)\n        ctx.fill()\n    }\n}\n","import {\n  TgdCamera,\n  TgdContext,\n  TgdControllerCameraOrbit,\n  TgdEvent,\n  TgdInputPointerEventTap,\n  TgdPainterClear,\n  TgdPainterDepth,\n  TgdQuat,\n  TgdQuatFace,\n  TgdVec3,\n} from \"@tgd\";\nimport { TipsPainter } from \"./painter/tips\";\n\nexport class GizmoCanvas {\n  public readonly eventOrbit = new TgdEvent<TgdCamera>();\n  /**\n   * The user clicked a tip, so we dispatch the target orientation.\n   */\n  public readonly eventTipClick = new TgdEvent<{\n    from: Readonly<TgdQuat>;\n    to: Readonly<TgdQuat>;\n  }>();\n\n  private _canvas: HTMLCanvasElement | null = null;\n  private context: TgdContext | null = null;\n  private _camera: TgdCamera | null = null;\n  private _orbiter: TgdControllerCameraOrbit | null = null;\n  private _tipsPainter: TipsPainter | null = null;\n\n  attachCamera(camera: TgdCamera) {\n    this._camera = camera;\n    const { context } = this;\n    if (!context) return;\n\n    context.camera = camera;\n  }\n\n  get canvas() {\n    return this._canvas;\n  }\n  set canvas(canvas: HTMLCanvasElement | null) {\n    if (canvas === this._canvas) return;\n\n    this._canvas = canvas;\n    if (this.context) {\n      this.context.inputs.pointer.eventTap.removeListener(this.handleTap);\n      this.context.destroy();\n      this.context = null;\n      const orbiter = this._orbiter;\n      if (orbiter) {\n        orbiter.detach();\n      }\n    }\n    this._tipsPainter?.delete();\n    if (!canvas) return;\n\n    const context = new TgdContext(canvas, {\n      alpha: true,\n      depth: true,\n      antialias: true,\n      name: \"GizmoCanvas\",\n    });\n    context.inputs.pointer.eventTap.addListener(this.handleTap);\n    this.context = context;\n    if (this._camera) this.context.camera = this._camera;\n    this._orbiter = new TgdControllerCameraOrbit(context, {\n      speedPanning: 0,\n      speedZoom: 0,\n    });\n    this._orbiter.eventChange.addListener((cam) =>\n      this.eventOrbit.dispatch(cam)\n    );\n    const painter = new TipsPainter(context);\n    this._tipsPainter = painter;\n    context.add(\n      new TgdPainterClear(context, {\n        color: [0, 0, 0, 0],\n        depth: 1,\n      }),\n      new TgdPainterDepth(context, { enabled: true }),\n      painter\n    );\n    context.paint();\n  }\n\n  private readonly handleTap = (evt: TgdInputPointerEventTap) => {\n    const camera = this._tipsPainter?.camera;\n    if (!camera) return;\n\n    const { origin, direction } = camera.castRay(evt.x, evt.y);\n    const maxDist = 1;\n    let bestDist = maxDist;\n    // let bestTip = TIPS[0][0]\n    let bestName: TgdQuatFace = \"+X+Y+Z\";\n    for (const [tip, name] of TIPS) {\n      const dist = tip.distanceToLineSquared(origin, direction);\n      if (dist < bestDist) {\n        bestDist = dist;\n        // bestTip = tip\n        bestName = name;\n      }\n    }\n    if (bestDist < maxDist) {\n      const quat = new TgdQuat();\n      quat.face(bestName);\n      if (quat.isEqual(camera.orientation)) {\n        quat.rotateAroundY(Math.PI);\n      }\n      this.eventTipClick.dispatch({\n        from: new TgdQuat(camera.orientation),\n        to: quat,\n      });\n    }\n  };\n}\n\nconst TIPS: Array<[TgdVec3, TgdQuatFace]> = [\n  [new TgdVec3(1, 0, 0), \"-Z+Y+X\"],\n  [new TgdVec3(0, 1, 0), \"+Z+X+Y\"],\n  [new TgdVec3(0, 0, 1), \"+X+Y+Z\"],\n  [new TgdVec3(-1, 0, 0), \"+Z+Y-X\"],\n  [new TgdVec3(0, -1, 0), \"+Z-X-Y\"],\n  [new TgdVec3(0, 0, -1), \"-X+Y-Z\"],\n];\n","export * from \"./gizmo-canvas\"\n","import {\n  tgdActionCreateCameraInterpolation,\n  TgdContext,\n  tgdEasingFunctionInOutCubic,\n  TgdQuat,\n} from \"@tgd\";\n\nexport function interpolateCamera(\n  context: TgdContext,\n  journey: {\n    from: Readonly<TgdQuat>;\n    to: Readonly<TgdQuat>;\n  }\n) {\n  const { camera } = context;\n  camera.orientation = journey.from;\n  context.animSchedule({\n    action: tgdActionCreateCameraInterpolation(camera, {\n      orientation: journey.to,\n    }),\n    duration: 500,\n    easingFunction: tgdEasingFunctionInOutCubic,\n  });\n  context.paint();\n}\n","export interface ScalebarOptions {\n    preferedSizeInPixels: number\n    units: Record<string, number>\n    values: number[]\n}\n\nexport function computeScalebarAttributes(\n    pixelScale: number,\n    {\n        preferedSizeInPixels = 240,\n        units = {\n            nm: 1e-3,\n            µm: 1,\n            mm: 1e3,\n            m: 1e6,\n            km: 1e9,\n        },\n        values = [\n            1, 2, 5, 10, 20, 25, 50, 75, 100, 200, 300, 400, 500, 600, 700, 800,\n            900,\n        ],\n    }: Partial<ScalebarOptions> = {}\n): {\n    sizeInPixel: number\n    value: number\n    unit: string\n} | null {\n    const target = pixelScale * preferedSizeInPixels\n    for (const unit of Object.keys(units)) {\n        const factor = units[unit] ?? 1\n        const targetWithUnit = target / factor\n        for (const value of values) {\n            if (value >= targetWithUnit) {\n                return {\n                    sizeInPixel: (value * factor) / pixelScale,\n                    value,\n                    unit,\n                }\n            }\n        }\n    }\n    return null\n}\n","import { useEffect, useRef, useState } from \"react\";\n\nimport { computeScalebarAttributes, ScalebarOptions } from \"./compute-scalebar\";\nimport { PixelScaleWatcher } from \"./pixel-scale-watcher\";\n\nimport styles from \"./scalebar.module.css\";\n\nexport interface VerticalScalebarProps {\n  className?: string;\n  pixelScaleWatcher: PixelScaleWatcher;\n  color?: string;\n}\n\nexport function Scalebar({\n  className,\n  pixelScaleWatcher,\n  color = \"#000e\",\n}: VerticalScalebarProps) {\n  const ref = useRef<HTMLCanvasElement | null>(null);\n  const scalebar = useScalebar(pixelScaleWatcher);\n\n  useEffect(() => {\n    const canvas = ref.current;\n    if (!canvas || !scalebar) return;\n\n    paint(canvas, scalebar, color);\n  }, [scalebar, color]);\n\n  if (!scalebar) return null;\n\n  return (\n    <div className={`${styles.main} ${className ?? \"\"}`}>\n      <canvas ref={ref} />\n    </div>\n  );\n}\n\ninterface ScalebarAttributes {\n  sizeInPixel: number;\n  value: number;\n  unit: string;\n}\n\nconst options: Partial<ScalebarOptions> = {\n  preferedSizeInPixels: 100,\n};\n\nfunction useScalebar(\n  pixelScaleWatcher: PixelScaleWatcher\n): ScalebarAttributes | null {\n  const [scalebar, setScalebar] = useState(\n    computeScalebarAttributes(pixelScaleWatcher.pixelScale, options)\n  );\n  useEffect(() => {\n    const update = () => {\n      setScalebar(\n        computeScalebarAttributes(pixelScaleWatcher.pixelScale, options)\n      );\n    };\n    pixelScaleWatcher.eventPixelScaleChange.addListener(update);\n    return () => pixelScaleWatcher.eventPixelScaleChange.removeListener(update);\n  }, [pixelScaleWatcher]);\n  return scalebar;\n}\n\nfunction paint(\n  canvas: HTMLCanvasElement,\n  scalebar: ScalebarAttributes,\n  color: string\n) {\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) return;\n\n  const w = canvas.clientWidth;\n  const h = canvas.clientHeight;\n  // eslint-disable-next-line no-param-reassign\n  canvas.width = w;\n  // eslint-disable-next-line no-param-reassign\n  canvas.height = h;\n  const fontHeight = 12;\n  const margin = fontHeight / 4;\n  ctx.font = `${fontHeight}px sans-serif`;\n  ctx.fillStyle = color;\n  ctx.strokeStyle = color;\n  // For the line to be one precise pixel, we need to\n  // set its x coordinate to 1/2. Otherwise, it will\n  // be blured accross to consecutive pixels.\n  let x = 0.5;\n  const y = (fontHeight + h) / 2;\n  let value = 0;\n  while (x < w) {\n    if (value === 0) {\n      //   ctx.font = `bold ${fontHeight}px sans-serif`;\n      //   ctx.fillText(`[${scalebar.unit}]`, x + margin, y);\n    } else {\n      ctx.font = `${fontHeight}px sans-serif`;\n      const text = `${value} ${scalebar.unit}`;\n      ctx.fillText(text, x + margin, y);\n    }\n    value += scalebar.value;\n    ctx.beginPath();\n    ctx.moveTo(x, 0);\n    ctx.lineTo(x, h);\n    ctx.stroke();\n    x += scalebar.sizeInPixel;\n  }\n}\n","export * from './Scalebar';\n","import { TgdContext, TgdEvent } from \"@tgd\";\n\nexport class PixelScaleWatcher {\n  public readonly eventPixelScaleChange = new TgdEvent<number>();\n\n  /**\n   * `pixelScale` depends on the camera height, the zoom and\n   * the viewport height.\n   * We memorize these values to send the `eventPixelScaleChange` when\n   * needed.\n   */\n  private previousCameraHeight = -1;\n  private previousCameraZoom = -1;\n  private previousViewportHeight = -1;\n\n  private _context: TgdContext | null = null;\n\n  get context() {\n    return this._context;\n  }\n  set context(context: TgdContext | null) {\n    if (this._context) {\n      this._context.eventResize.removeListener(this.handleCameraChange);\n      this._context.camera.eventTransformChange.removeListener(\n        this.handleCameraChange\n      );\n    }\n    this._context = context;\n    if (!context) return;\n\n    this.previousCameraHeight = -1;\n    context.eventResize.addListener(this.handleCameraChange);\n    context.camera.eventTransformChange.addListener(this.handleCameraChange);\n    this.handleCameraChange();\n  }\n\n  get pixelScale() {\n    const { context } = this;\n    if (!context) return 1;\n\n    const { camera } = context;\n    return camera.spaceHeightAtTarget / (camera.zoom * camera.screenHeight);\n  }\n\n  private readonly handleCameraChange = () => {\n    const { context } = this;\n    if (!context) return;\n\n    const { camera } = context;\n    const spaceHeight = camera.spaceHeightAtTarget;\n    const cameraZoom = camera.zoom;\n    const screenHeight = camera.screenHeight;\n    if (\n      spaceHeight === this.previousCameraHeight &&\n      cameraZoom === this.previousCameraZoom &&\n      screenHeight === this.previousViewportHeight\n    ) {\n      return;\n    }\n\n    this.previousCameraHeight = spaceHeight;\n    this.previousCameraZoom = cameraZoom;\n    this.previousViewportHeight = screenHeight;\n    this.eventPixelScaleChange.dispatch(this.pixelScale);\n  };\n}\n","import styles from \"./legend.module.css\";\n\nexport function Legend({\n  values,\n}: {\n  values:\n    | Array<{ label: string; color: string }>\n    | {\n        labelMin: string;\n        labelMax: string;\n        colorRamp: string[];\n      };\n}) {\n  return (\n    <div className={styles.legend}>\n      {Array.isArray(values) && (\n        <div className={styles.discrete}>\n          {values.map(({ label, color }) => (\n            <div key={label}>\n              <div style={{ background: color }} />\n              <div>{label}</div>\n            </div>\n          ))}\n        </div>\n      )}\n      {!Array.isArray(values) && (\n        <div className={styles.continue}>\n          <div>{values.labelMin}</div>\n          <div\n            className={styles.colorramp}\n            style={{\n              background: `linear-gradient(to right,${values.colorRamp.join(\n                \",\"\n              )})`,\n            }}\n          ></div>\n          <div>{values.labelMax}</div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { basePath } from \"@/config\";\nimport {\n  TgdCameraOrthographic,\n  TgdContext,\n  TgdControllerCameraOrbit,\n  tgdFullscreenToggle,\n  TgdPainterClear,\n  TgdPainterDepth,\n  TgdPainterSegments,\n  TgdTexture2D,\n  TgdTexture2DOptions,\n  TgdVec3,\n} from \"@tgd\";\n\nimport styles from \"./swc-viewer.module.css\";\nimport { parseSwc } from \"../tools/parser\";\nimport { nodesToSegmentsData } from \"../tools/nodes-to-segments\";\nimport { GizmoCanvas } from \"../gizmo\";\nimport { interpolateCamera } from \"../tools/interpolate-camera\";\nimport { Scalebar } from \"../Scalebar\";\nimport { PixelScaleWatcher } from \"../Scalebar/pixel-scale-watcher\";\nimport { CellNodes } from \"../tools/nodes\";\nimport { classNames } from \"@/utils\";\nimport { Legend } from \"./Legend/Legend\";\n\nexport type SwcViewerLoader = (href: string) => Promise<{\n  /**\n   * You can define a custom legend based on the loaded data.\n   */\n  legend?: SwcViewerLegend;\n  morphologies: Array<{\n    nodes: CellNodes;\n    colors: string[];\n    texture?: Partial<TgdTexture2DOptions>;\n    minRadius?: number;\n    roundness?: number;\n    center?: TgdVec3;\n  }>;\n}>;\n\n/**\n * Pass an array to get one color per section.\n * Pass an object to get a linear gradient.\n */\nexport type SwcViewerLegend =\n  | Array<{ label: string; color: string }>\n  | {\n      labelMin: string;\n      labelMax: string;\n      colorRamp: string[];\n    };\n\nexport interface SwcViewerProps {\n  className?: string;\n  href: string;\n  loader?: SwcViewerLoader;\n  /**\n   * If missing, a default legend with soma, axon and dendrite will be shown.\n   * Pass an array to get one color per section.\n   * Pass an object to get a linear gradient.\n   */\n  legend?: SwcViewerLegend;\n}\n\n/**\n * Colors per section (soma, axon, dendrite, ...).\n */\nconst COLORS = [\"#333\", \"#00f\", \"#f00\", \"#f0f\", \"#8a8\"];\n\nconst DEFAULT_LEGEND = [\n  { label: \"Soma\", color: COLORS[0] },\n  { label: \"Axon\", color: COLORS[1] },\n  { label: \"Dendrites\", color: COLORS[2] },\n];\n\nconst defaultTextLoader: SwcViewerLoader = async (url: string) => {\n  try {\n    const resp = await fetch(url);\n    const text = await resp.text();\n    return { morphologies: [{ nodes: parseSwc(text), colors: COLORS }] };\n  } catch (ex) {\n    console.error(\"Unable to fetch this URL:\", url);\n    console.error(ex);\n    throw Error(`Unable to fetch ${url}!`);\n  }\n};\n\nexport function SwcViewer({\n  className,\n  href,\n  loader = defaultTextLoader,\n  legend: initialLegend,\n}: SwcViewerProps) {\n  const [legend, setLegend] = React.useState<SwcViewerLegend | undefined>(\n    initialLegend\n  );\n  const [busy, setBusy] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  const refWatcher = React.useRef(new PixelScaleWatcher());\n  const refContainer = React.useRef<HTMLDivElement | null>(null);\n  const refCanvas = React.useRef<HTMLCanvasElement | null>(null);\n  const refGizmo = React.useRef(new GizmoCanvas());\n  const refContext = React.useRef<TgdContext | null>(null);\n  useViewerInit(\n    setBusy,\n    setError,\n    refCanvas,\n    loader,\n    href,\n    refContext,\n    refWatcher,\n    refGizmo,\n    setLegend\n  );\n  const handleFullscreen = () => tgdFullscreenToggle(refContainer.current);\n\n  return (\n    <div\n      className={classNames(styles.main, className)}\n      ref={refContainer}\n      onDoubleClick={handleFullscreen}\n    >\n      <canvas ref={refCanvas}></canvas>\n      <canvas\n        className={styles.gizmo}\n        ref={(canvas) => {\n          refGizmo.current.canvas = canvas;\n        }}\n      ></canvas>\n      <button onClick={handleFullscreen}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <title>Toggle fullscreen</title>\n          <path\n            fill=\"currentColor\"\n            d=\"M5,5H10V7H7V10H5V5M14,5H19V10H17V7H14V5M17,14H19V19H14V17H17V14M10,17V19H5V14H7V17H10Z\"\n          />\n        </svg>\n      </button>\n      <Scalebar\n        className={styles.scalebar}\n        pixelScaleWatcher={refWatcher.current}\n      />\n      <Legend values={legend ?? DEFAULT_LEGEND} />\n      {busy && (\n        <div className={styles.busy}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n            <title>loading</title>\n            <path d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\n          </svg>\n        </div>\n      )}\n      {error && (\n        <div className={styles.error}>\n          <div>{error}</div>\n        </div>\n      )}\n    </div>\n  );\n}\nfunction useViewerInit(\n  setBusy: React.Dispatch<React.SetStateAction<boolean>>,\n  setError: React.Dispatch<React.SetStateAction<string>>,\n  refCanvas: React.MutableRefObject<HTMLCanvasElement | null>,\n  loader: SwcViewerLoader,\n  href: string,\n  refContext: React.MutableRefObject<TgdContext | null>,\n  refWatcher: React.MutableRefObject<PixelScaleWatcher>,\n  refGizmo: React.MutableRefObject<GizmoCanvas>,\n  setLegend: (legend?: SwcViewerLegend) => void\n) {\n  /**\n   * We use this query counter to be sure that an old query is not\n   * reporting an error if a new one is ongoing.\n   */\n  const refQueryCounter = React.useRef(0);\n  React.useEffect(() => {\n    const action = async () => {\n      setBusy(true);\n      setError(\"\");\n      refQueryCounter.current++;\n      const queryId = refQueryCounter.current;\n      try {\n        const canvas = refCanvas.current;\n        if (!canvas) return;\n\n        const viewOptions = await loader(href);\n        if (!viewOptions) return;\n\n        if (viewOptions.legend) setLegend(viewOptions.legend);\n        let context = refContext.current;\n        if (context) {\n          context.removeAll();\n        } else {\n          const camera = new TgdCameraOrthographic({\n            near: 1e-3,\n            far: 1e6,\n          });\n          context = new TgdContext(canvas, { camera });\n          refWatcher.current.context = context;\n          const orbiter = new TgdControllerCameraOrbit(context, {\n            minZoom: 0.1,\n            maxZoom: 100,\n            inertiaOrbit: 500,\n            fixedTarget: true,\n          });\n          orbiter.enabled = true;\n          const gizmo = refGizmo.current;\n          gizmo.attachCamera(camera);\n          gizmo.eventTipClick.addListener((journey) =>\n            interpolateCamera(context as TgdContext, journey)\n          );\n          gizmo.eventOrbit.addListener(context.paint);\n        }\n        context.add(\n          new TgdPainterClear(context, {\n            color: [239 / 255, 241 / 255, 248 / 255, 1],\n            depth: 1,\n          }),\n          new TgdPainterDepth(context, {\n            enabled: true,\n            func: \"LESS\",\n            mask: true,\n            rangeMin: 0,\n            rangeMax: 1,\n          })\n        );\n        const target = new TgdVec3();\n        let minY = Number.MAX_VALUE;\n        let maxY = -Number.MAX_VALUE;\n        for (const {\n          nodes,\n          colors,\n          texture,\n          minRadius,\n          roundness,\n          center,\n        } of viewOptions.morphologies) {\n          target.add(center ?? nodes.center);\n          const halfHeight = nodes.bbox[1] * 0.5;\n          minY = Math.min(minY, nodes.center.y - halfHeight);\n          maxY = Math.max(maxY, nodes.center.y + halfHeight);\n          const data = nodesToSegmentsData(nodes);\n          const painter = new TgdPainterSegments(context, data, {\n            minRadius: minRadius ?? 0.25,\n            roundness,\n            colorTexture: context.textures2D.create({\n              magFilter: \"NEAREST\",\n              minFilter: \"NEAREST\",\n              wrapR: \"CLAMP_TO_EDGE\",\n              wrapS: \"CLAMP_TO_EDGE\",\n              wrapT: \"CLAMP_TO_EDGE\",\n              ...texture,\n            }),\n          });\n          painter.colorTexture.makePalette(colors);\n          const painterOutline = new TgdPainterSegments(context, data, {\n            minRadius: minRadius ?? 0.25,\n            roundness,\n            radiusMultiplier: 1.2,\n            light: 0,\n            shiftZ: 2,\n          });\n          context.add(painter, painterOutline);\n        }\n        context.camera.spaceHeightAtTarget = Math.abs(maxY - minY);\n        target.scale(1 / viewOptions.morphologies.length);\n        context.camera.target = target;\n        context.paint();\n        refContext.current = context;\n      } catch (ex) {\n        console.error(\"Unable to load data for SwcViewer!\", href);\n        console.error(ex);\n        if (queryId < refQueryCounter.current) return;\n\n        const msg = ex instanceof Error ? ex.message : JSON.stringify(ex);\n        setError(`Unable to load from \"${href}\"!\\n${msg}`);\n      } finally {\n        setBusy(false);\n      }\n    };\n    void action();\n  }, [\n    href,\n    loader,\n    refCanvas,\n    refContext,\n    refGizmo,\n    refWatcher,\n    setBusy,\n    setError,\n    setLegend,\n  ]);\n}\n","export * from \"./SwcViewer\"\n","import { padColOfNumbers } from \"@tgd/debug\"\nimport { TgdQuat, TgdVec3 } from \".\"\n\n/**\n * Column-first 4x4 matrix.\n *\n * `m23` means column 2 and row 3.\n *\n * This is not the same as what mathematicians are used to,\n * but its how WebGL will store matrices in memory.\n */\nexport class TgdMat3 extends Float32Array {\n    constructor()\n    constructor(mat: TgdMat3)\n    constructor(\n        m00: number,\n        m01: number,\n        m02: number,\n        m10: number,\n        m11: number,\n        m12: number,\n        m20: number,\n        m21: number,\n        m22: number\n    )\n    constructor(\n        m00: number | TgdMat3 = 1,\n        m01: number = 0,\n        m02: number = 0,\n        m10: number = 0,\n        m11: number = 1,\n        m12: number = 0,\n        m20: number = 0,\n        m21: number = 0,\n        m22: number = 1\n    ) {\n        if (typeof m00 === \"number\") {\n            super([m00, m01, m02, m10, m11, m12, m20, m21, m22])\n        } else {\n            super(m00)\n        }\n    }\n\n    transpose(): TgdMat3 {\n        let tmp = this.m10\n        this.m10 = this.m01\n        this.m01 = tmp\n        tmp = this.m20\n        this.m20 = this.m02\n        this.m02 = tmp\n        tmp = this.m21\n        this.m21 = this.m12\n        this.m12 = tmp\n        return this\n    }\n\n    fromQuat({ x, y, z, w }: TgdQuat): TgdMat3 {\n        const x2 = x + x\n        const y2 = y + y\n        const z2 = z + z\n        const xx = x * x2\n        const yx = y * x2\n        const yy = y * y2\n        const zx = z * x2\n        const zy = z * y2\n        const zz = z * z2\n        const wx = w * x2\n        const wy = w * y2\n        const wz = w * z2\n\n        this.m00 = 1 - yy - zz\n        this.m10 = yx - wz\n        this.m20 = zx + wy\n\n        this.m01 = yx + wz\n        this.m11 = 1 - xx - zz\n        this.m21 = zy - wx\n\n        this.m02 = zx - wy\n        this.m12 = zy + wx\n        this.m22 = 1 - xx - yy\n\n        return this\n    }\n\n    toAxis(axisX: TgdVec3, axisY: TgdVec3, axisZ: TgdVec3) {\n        this.toAxisX(axisX)\n        this.toAxisY(axisY)\n        return this.toAxisZ(axisZ)\n    }\n\n    toAxisX(axisX: TgdVec3) {\n        axisX.x = this.m00\n        axisX.y = this.m01\n        axisX.z = this.m02\n        return this\n    }\n\n    toAxisY(axisY: TgdVec3) {\n        axisY.x = this.m10\n        axisY.y = this.m11\n        axisY.z = this.m12\n        return this\n    }\n\n    toAxisZ(axisZ: TgdVec3) {\n        axisZ.x = this.m20\n        axisZ.y = this.m21\n        axisZ.z = this.m22\n        return this\n    }\n\n    scale(factor: number): this {\n        this[0] *= factor\n        this[1] *= factor\n        this[2] *= factor\n        this[3] *= factor\n        this[4] *= factor\n        this[5] *= factor\n        this[6] *= factor\n        this[7] *= factor\n        this[8] *= factor\n        return this\n    }\n\n    get m00() {\n        return this[0]\n    }\n    set m00(v: number) {\n        this[0] = v\n    }\n\n    get m01() {\n        return this[1]\n    }\n    set m01(v: number) {\n        this[1] = v\n    }\n\n    get m02() {\n        return this[2]\n    }\n    set m02(v: number) {\n        this[2] = v\n    }\n\n    get m10() {\n        return this[3]\n    }\n    set m10(v: number) {\n        this[3] = v\n    }\n\n    get m11() {\n        return this[4]\n    }\n    set m11(v: number) {\n        this[4] = v\n    }\n\n    get m12() {\n        return this[5]\n    }\n    set m12(v: number) {\n        this[5] = v\n    }\n\n    get m20() {\n        return this[6]\n    }\n    set m20(v: number) {\n        this[6] = v\n    }\n\n    get m21() {\n        return this[7]\n    }\n    set m21(v: number) {\n        this[7] = v\n    }\n\n    get m22() {\n        return this[8]\n    }\n    set m22(v: number) {\n        this[8] = v\n    }\n\n    debug(caption = \"Mat3\") {\n        const c0 = padColOfNumbers([this.m00, this.m01, this.m02])\n        const c1 = padColOfNumbers([this.m10, this.m11, this.m12])\n        const c2 = padColOfNumbers([this.m20, this.m21, this.m22])\n\n        console.log(caption)\n        console.log(\"   \", [c0[0], c1[0], c2[0]].join(\" | \"))\n        console.log(\"   \", [c0[1], c1[1], c2[1]].join(\" | \"))\n        console.log(\"   \", [c0[2], c1[2], c2[2]].join(\" | \"))\n    }\n}\n","import { TgdQuat, TgdVec3, TgdMat4, TgdQuatFace } from \"@tgd/math\"\nimport { TgdMat3 } from \"@tgd/math/mat3\"\nimport { TgdEvent } from \"../event\"\nimport { ArrayNumber3, ArrayNumber4 } from \"..\"\n\nexport interface TgdCameraOptions {\n    near?: number\n    far?: number\n    target?: ArrayNumber3 | TgdVec3\n    orientation?: ArrayNumber4 | TgdQuat\n    distance?: number\n    name?: string\n    zoom?: number\n}\n\nexport abstract class TgdCamera {\n    private static incrementalId = 1\n\n    /**\n     * A change in the position/orientation/size of the camera.\n     */\n    public readonly eventTransformChange = new TgdEvent<TgdCamera>()\n    public readonly name: string\n\n    private _screenWidth = 1920\n    private _screenHeight = 1080\n    private _screenAspectRatio = 1920 / 1080\n\n    /** Do we need recalculation? */\n    private _dirtyModelView = true\n    private dirtyModelViewInverse = true\n    private _dirtyAxis = true\n    protected _dirtyProjection = true\n    protected dirtyProjectionInverse = true\n\n    protected _near = 1e-3\n    protected _far = Infinity\n\n    private readonly _axisX = new TgdVec3()\n    private readonly _axisY = new TgdVec3()\n    private readonly _axisZ = new TgdVec3()\n    // transformation\n    private readonly _matrixModelView = new TgdMat4()\n    private readonly _matrixModelViewInverse = new TgdMat4()\n    private readonly _matrixProjectionInverse = new TgdMat4()\n    private readonly _orientation = new TgdQuat(0, 0, 0, 1)\n    private readonly _shift = new TgdVec3(0, 0, 0)\n    private readonly _target = new TgdVec3(0, 0, 0)\n    private readonly _position = new TgdVec3(0, 0, 0)\n    private _distance = 10\n    private _zoom = 1\n    // For fast calculations (we don't want to recreate them).\n    private readonly tmpMat3 = new TgdMat3()\n    private readonly tmpVec3 = new TgdVec3()\n\n    constructor(options: TgdCameraOptions = {}) {\n        this.name = options.name ?? `TgdCamera#${TgdCamera.incrementalId++}`\n        this._near = options.near ?? 1e-3\n        this._far = options.far ?? 1e6\n        this._distance = options.distance ?? 10\n        this._zoom = options.zoom ?? 1\n        const [tx, ty, tz] = options.target ?? [0, 0, 0]\n        this.target.reset(tx, ty, tz)\n        const [qx, qy, qz, qw] = options.orientation ?? [0, 0, 0, 1]\n        this.orientation.reset(qx, qy, qz, qw)\n    }\n\n    get near() {\n        return this._near\n    }\n    set near(v: number) {\n        if (v === this._near) return\n\n        this._near = v\n        this.dirtyProjection = true\n    }\n\n    get far() {\n        return this._far\n    }\n    set far(v: number) {\n        if (v === this._far) return\n\n        this._far = v\n        this.dirtyProjection = true\n    }\n\n    get screenAspectRatio() {\n        return this._screenAspectRatio\n    }\n\n    get screenWidth() {\n        return this._screenWidth\n    }\n    set screenWidth(v: number) {\n        if (v === this._screenWidth) return\n\n        this._screenWidth = v\n        this.dirtyProjection = true\n        this._screenAspectRatio = this._screenWidth / this._screenHeight\n    }\n\n    get screenHeight() {\n        return this._screenHeight\n    }\n    set screenHeight(v: number) {\n        if (v === this._screenHeight) return\n\n        this._screenHeight = v\n        this.dirtyProjection = true\n        this._screenAspectRatio = this._screenWidth / this._screenHeight\n    }\n\n    get spaceHeightAtTarget(): number {\n        return this.getSpaceHeightAtTarget()\n    }\n    set spaceHeightAtTarget(v: number) {\n        this.setSpaceHeightAtTarget(v)\n    }\n\n    get spaceWidthAtTarget(): number {\n        return (this.screenWidth * this.spaceHeightAtTarget) / this.screenHeight\n    }\n    set spaceWidthAtTarget(v: number) {\n        this.setSpaceHeightAtTarget((v * this.screenHeight) / this.screenWidth)\n    }\n\n    face(face: TgdQuatFace) {\n        this._orientation.face(face)\n        this.dirtyModelView = true\n        this.dirtyAxis = true\n    }\n\n    from(camera: TgdCamera): this {\n        const {\n            _orientation: orientation,\n            _target: target,\n            distance,\n            zoom,\n            screenWidth,\n            screenHeight,\n        } = camera\n        this._orientation.from(orientation)\n        this._target.from(target)\n        this.distance = distance\n        this.zoom = zoom\n        this.screenWidth = screenWidth\n        this.screenHeight = screenHeight\n        this.dirtyModelView = true\n        this.dirtyAxis = true\n        this.copyProjectionFrom(camera)\n        return this\n    }\n\n    /**\n     * @param screenX -1 is the left edge, 0 id the center and +1 is the right edge.\n     * @param screenY -1 is the bottom edge, 0 id the center and +1 is the top edge.\n     * @returns The normalized ray vector that goes from the camera position\n     * to the point designed on the screen.\n     */\n    abstract castRay(\n        screenX: number,\n        screenY: number\n    ): Readonly<{\n        origin: TgdVec3\n        direction: TgdVec3\n    }>\n\n    abstract copyProjectionFrom(camera: TgdCamera): this\n\n    get axisX(): Readonly<TgdVec3> {\n        this.updateAxisIfNeeded()\n        return this._axisX\n    }\n\n    get axisY(): Readonly<TgdVec3> {\n        this.updateAxisIfNeeded()\n        return this._axisY\n    }\n\n    get axisZ(): Readonly<TgdVec3> {\n        this.updateAxisIfNeeded()\n        return this._axisZ\n    }\n\n    get matrixModelView(): Readonly<TgdMat4> {\n        this.updateIfNeeded()\n        return this._matrixModelView\n    }\n\n    get matrixModelViewInverse(): Readonly<TgdMat4> {\n        if (this.dirtyModelViewInverse) {\n            this._matrixModelViewInverse.invert(this.matrixModelView)\n            this.dirtyModelViewInverse = false\n        }\n        return this._matrixModelViewInverse\n    }\n\n    abstract get matrixProjection(): Readonly<TgdMat4>\n\n    get matrixProjectionInverse(): Readonly<TgdMat4> {\n        if (this.dirtyProjectionInverse) {\n            this._matrixProjectionInverse.invert(this.matrixProjection)\n            this.dirtyProjectionInverse = false\n        }\n        return this._matrixProjectionInverse\n    }\n\n    get orientation(): Readonly<TgdQuat> {\n        return this._orientation\n    }\n\n    set orientation(quat: TgdQuat) {\n        const { _orientation } = this\n        if (quat.isEqual(_orientation)) return\n\n        const [x, y, z, w] = quat\n        _orientation.x = x\n        _orientation.y = y\n        _orientation.z = z\n        _orientation.w = w\n        this.dirtyModelView = true\n        this.dirtyAxis = true\n    }\n\n    setOrientation(x: number, y: number, z: number, w: number): this {\n        const { _orientation } = this\n        _orientation.x = x\n        _orientation.y = y\n        _orientation.z = z\n        _orientation.w = w\n        this.dirtyModelView = true\n        this.dirtyAxis = true\n        return this\n    }\n\n    get position(): Readonly<TgdVec3> {\n        this.updateIfNeeded()\n        return this._position\n    }\n\n    get target(): Readonly<TgdVec3> {\n        return this._target\n    }\n    set target(v: Readonly<TgdVec3 | ArrayNumber3>) {\n        this._target.from(v)\n        this.dirtyModelView = true\n    }\n\n    setTarget(x: number, y: number, z: number): this {\n        const { _target } = this\n        _target.x = x\n        _target.y = y\n        _target.z = z\n        this.dirtyModelView = true\n        return this\n    }\n\n    get shift(): Readonly<TgdVec3> {\n        return this._shift\n    }\n    set shift(v: TgdVec3) {\n        this._shift.from(v)\n        this.dirtyModelView = true\n    }\n\n    setShift(x: number, y: number, z: number): this {\n        const { _shift } = this\n        _shift.x = x\n        _shift.y = y\n        _shift.z = z\n        this.dirtyModelView = true\n        return this\n    }\n\n    get x() {\n        return this._target.x\n    }\n    set x(v: number) {\n        const { _target: target } = this\n        if (v === target.x) return\n\n        target.x = v\n        this.dirtyModelView = true\n    }\n\n    get y() {\n        return this._target.y\n    }\n    set y(v: number) {\n        const { _target: target } = this\n        if (v === target.y) return\n\n        target.y = v\n        this.dirtyModelView = true\n    }\n\n    get z() {\n        return this._target.z\n    }\n    set z(v: number) {\n        const { _target: target } = this\n        if (v === target.z) return\n\n        target.z = v\n        this.dirtyModelView = true\n    }\n\n    get distance() {\n        return this._distance\n    }\n    set distance(v: number) {\n        if (this._distance === v) return\n\n        this._distance = v\n        this.dirtyModelView = true\n    }\n\n    get zoom() {\n        return this._zoom\n    }\n    set zoom(v: number) {\n        if (this._zoom === v) return\n\n        this._zoom = v\n        this.dirtyModelView = true\n    }\n\n    /**\n     * Add (x,y,z) to the target coords in Camera space.\n     * That means we are moving along the camera axis.\n     */\n    moveTarget(x: number, y: number, z: number) {\n        const { _target: target } = this\n        this.updateAxisIfNeeded()\n        const { _axisX: axisX, _axisY: axisY, _axisZ: axisZ, tmpVec3 } = this\n        tmpVec3\n            .from(axisX)\n            .scale(x)\n            .addWithScale(axisY, y)\n            .addWithScale(axisZ, z)\n        target.x += tmpVec3.x\n        target.y += tmpVec3.y\n        target.z += tmpVec3.z\n        this.dirtyModelView = true\n    }\n\n    moveShift(x: number, y: number, z: number) {\n        const [sx, sy, sz] = this._shift\n        this._shift.reset(x + sx, y + sy, z + sz)\n        this._dirtyModelView = true\n    }\n\n    orbitAroundX(angleInRadians: number): this {\n        this.updateAxisIfNeeded()\n        const {\n            _axisX: axisX,\n            _axisY: axisY,\n            _axisZ: axisZ,\n            _orientation: orientation,\n        } = this\n        axisY.rotateAround(axisX, angleInRadians)\n        axisZ.rotateAround(axisX, angleInRadians)\n        orientation.fromAxis(axisX, axisY, axisZ)\n        this.dirtyModelView = true\n        return this\n    }\n\n    orbitAroundY(angleInRadians: number): this {\n        this.updateAxisIfNeeded()\n        const {\n            _axisX: axisX,\n            _axisY: axisY,\n            _axisZ: axisZ,\n            _orientation: orientation,\n        } = this\n        axisX.rotateAround(axisY, angleInRadians)\n        axisZ.rotateAround(axisY, angleInRadians)\n        orientation.fromAxis(axisX, axisY, axisZ)\n        this.dirtyModelView = true\n        return this\n    }\n\n    orbitAroundZ(angleInRadians: number): this {\n        this.updateAxisIfNeeded()\n        const {\n            _axisX: axisX,\n            _axisY: axisY,\n            _axisZ: axisZ,\n            _orientation: orientation,\n        } = this\n        axisX.rotateAround(axisZ, angleInRadians)\n        axisY.rotateAround(axisZ, angleInRadians)\n        orientation.fromAxis(axisX, axisY, axisZ)\n        this.dirtyModelView = true\n        return this\n    }\n\n    debug(caption?: string) {\n        this._orientation.debug(`${caption ?? this.name} quaternion:`)\n    }\n\n    protected abstract getSpaceHeightAtTarget(): number\n\n    protected abstract setSpaceHeightAtTarget(v: number): void\n\n    private updateAxisIfNeeded() {\n        if (this.dirtyAxis) this.updateAxis()\n    }\n\n    private updateAxis() {\n        const { tmpMat3 } = this\n        tmpMat3.fromQuat(this._orientation)\n        tmpMat3.toAxis(this._axisX, this._axisY, this._axisZ)\n        this.dirtyAxis = false\n    }\n\n    private updateIfNeeded(): void {\n        if (!this.dirtyModelView) return\n\n        const { tmpMat3, tmpVec3, _position } = this\n        const mat = this._matrixModelView\n        this.updateAxis()\n        const d = this._distance\n        const { x: sx, y: sy, z: sz } = this._shift\n        const { x: tx, y: ty, z: tz } = this._target\n        const { x: ax, y: ay, z: az } = this._axisZ\n        _position.x = tx + d * ax\n        _position.y = ty + d * ay\n        _position.z = tz + d * az\n        _position.addWithScale(this._axisX, sx)\n        _position.addWithScale(this._axisY, sy)\n        _position.addWithScale(this._axisZ, sz)\n        tmpVec3.from(_position).applyMatrix(tmpMat3.transpose()).scale(-1)\n        mat.m30 = tmpVec3.x\n        mat.m31 = tmpVec3.y\n        mat.m32 = tmpVec3.z\n        mat.fromMat3(tmpMat3)\n        this.dirtyModelView = false\n    }\n\n    private get dirtyModelView(): boolean {\n        return this._dirtyModelView\n    }\n    private set dirtyModelView(v: boolean) {\n        this._dirtyModelView = v\n        if (v) {\n            this.dirtyModelViewInverse = true\n            this.eventTransformChange.dispatch(this)\n        }\n    }\n\n    private get dirtyAxis(): boolean {\n        return this._dirtyAxis\n    }\n    private set dirtyAxis(v: boolean) {\n        this._dirtyAxis = v\n    }\n\n    protected get dirtyProjection(): boolean {\n        return this._dirtyProjection\n    }\n    protected set dirtyProjection(v: boolean) {\n        this._dirtyProjection = v\n        if (v) this.dirtyProjectionInverse = true\n    }\n}\n","import { TgdMat4, TgdVec3 } from \"@tgd/math\"\nimport { TgdCamera, TgdCameraOptions } from \"./camera\"\n\nexport interface TgdCameraOrthographicOptions extends TgdCameraOptions {\n    spaceHeight?: number\n}\n\nexport class TgdCameraOrthographic extends TgdCamera {\n    private readonly _matrixProjection = new TgdMat4()\n    private _spaceHeight = 10\n    private readonly _ray = {\n        origin: new TgdVec3(),\n        direction: new TgdVec3(),\n    }\n\n    constructor(options: TgdCameraOrthographicOptions = {}) {\n        super(options)\n        this.spaceHeight = options.spaceHeight ?? 10\n    }\n\n    copyProjectionFrom(camera: TgdCameraOrthographic): this {\n        this.spaceHeight = camera.spaceHeight\n        return this\n    }\n\n    castRay(\n        screenX: number,\n        screenY: number\n    ): Readonly<{ origin: TgdVec3; direction: TgdVec3 }> {\n        const { origin, direction } = this._ray\n        direction.from(this.axisZ)\n        const h = this.spaceHeight * 0.5\n        const w = h * this.screenAspectRatio\n        origin\n            .from(this.position)\n            .addWithScale(this.axisX, w * screenX)\n            .addWithScale(this.axisY, h * screenY)\n        return this._ray\n    }\n\n    get spaceHeight() {\n        return this._spaceHeight\n    }\n    set spaceHeight(v: number) {\n        if (v === this._spaceHeight) return\n\n        this._spaceHeight = v\n        this.dirtyProjection = true\n    }\n\n    get near() {\n        return this._near\n    }\n    set near(v: number) {\n        if (v === this._near) return\n\n        this._near = v\n        this.dirtyProjection = true\n    }\n\n    get far() {\n        return this._far\n    }\n    set far(v: number) {\n        if (v === this._far) return\n\n        this._far = v\n        this.dirtyProjection = true\n    }\n\n    get matrixProjection(): TgdMat4 {\n        this.updateProjectionIfNeeded()\n        return this._matrixProjection\n    }\n\n    protected getSpaceHeightAtTarget() {\n        return this.spaceHeight\n    }\n\n    protected setSpaceHeightAtTarget(v: number) {\n        this.spaceHeight = v\n    }\n\n    private updateProjectionIfNeeded(): void {\n        if (!this.dirtyProjection) return\n\n        const { near, far, screenAspectRatio, _spaceHeight, zoom } = this\n        const top = _spaceHeight / (zoom + zoom)\n        const bottom = -top\n        const right = top * screenAspectRatio\n        const left = -right\n        const out = this._matrixProjection\n        const lr = 1 / (left - right)\n        const bt = 1 / (bottom - top)\n        const nf = 1 / (near - far)\n        out[0] = -2 * lr\n        out[1] = 0\n        out[2] = 0\n        out[3] = 0\n        out[4] = 0\n        out[5] = -2 * bt\n        out[6] = 0\n        out[7] = 0\n        out[8] = 0\n        out[9] = 0\n        out[10] = nf\n        out[11] = 0\n        out[12] = (left + right) * lr\n        out[13] = (top + bottom) * bt\n        out[14] = near * nf\n        out[15] = 1\n        this.dirtyProjection = true\n    }\n}\n","import { TgdMat4, TgdVec3 } from \"@tgd/math\"\nimport { TgdCamera, TgdCameraOptions } from \"./camera\"\n\nexport interface TgdCameraPerspectiveOptions extends TgdCameraOptions {\n    fovy?: number\n}\n\nexport class TgdCameraPerspective extends TgdCamera {\n    private readonly _matrixProjection = new TgdMat4()\n    private _fovy = Math.PI / 4\n    private readonly _ray = {\n        origin: new TgdVec3(),\n        direction: new TgdVec3(),\n    }\n\n    constructor(options: TgdCameraPerspectiveOptions = {}) {\n        super(options)\n        this._fovy = options.fovy ?? Math.PI / 4\n    }\n\n    copyProjectionFrom(camera: TgdCameraPerspective): this {\n        this.fovy = camera.fovy\n        this.near = camera.near\n        this.far = camera.far\n        return this\n    }\n\n    castRay(\n        screenX: number,\n        screenY: number\n    ): Readonly<{ origin: TgdVec3; direction: TgdVec3 }> {\n        const { origin, direction } = this._ray\n        origin.from(this.position)\n        const h = Math.atan(this.fovy)\n        const w = h * this.screenAspectRatio\n        direction\n            .from(origin)\n            .subtract(this.axisZ)\n            .addWithScale(this.axisX, w * screenX)\n            .addWithScale(this.axisY, h * screenY)\n            .subtract(origin)\n            .normalize()\n        return this._ray\n    }\n\n    /**\n     * Vertical field of view in radians.\n     *\n     * The revealed space at a distance of 1 from the camera\n     * will have a height of `2 * tan(fovy / 2)`.\n     */\n    get fovy() {\n        return this._fovy\n    }\n    set fovy(v: number) {\n        if (v === this._fovy) return\n\n        this._fovy = v\n        this.dirtyProjection = true\n    }\n    get matrixProjection(): TgdMat4 {\n        this.updateProjectionIfNeeded()\n        return this._matrixProjection\n    }\n\n    protected getSpaceHeightAtTarget() {\n        return 2 * Math.tan(this.fovy * 0.5) * this.distance\n    }\n\n    protected setSpaceHeightAtTarget(v: number) {\n        this.distance = v / (2 * Math.tan(this.fovy * 0.5))\n    }\n\n    private updateProjectionIfNeeded(): void {\n        if (!this.dirtyProjection) return\n\n        const fovy = this._fovy\n        const aspect = this.screenAspectRatio\n        const near = this._near\n        const far = this._far\n        const out = this._matrixProjection\n        const f = this.zoom / Math.tan(fovy / 2)\n        out[0] = f / aspect\n        out[1] = 0\n        out[2] = 0\n        out[3] = 0\n        out[4] = 0\n        out[5] = f\n        out[6] = 0\n        out[7] = 0\n        out[8] = 0\n        out[9] = 0\n        out[11] = -1\n        out[12] = 0\n        out[13] = 0\n        out[15] = 0\n        if (far !== Infinity) {\n            const nf = 1 / (near - far)\n            out[10] = (far + near) * nf\n            out[14] = 2 * far * near * nf\n        } else {\n            out[10] = -1\n            out[14] = -2 * near\n        }\n        this.dirtyProjection = true\n    }\n}\n","export * from \"./camera\"\nexport * from \"./camera-orthographic\"\nexport * from \"./camera-perspective\"\n","import { TgdProgram } from \"@tgd/types\";\nimport { TgdBufferOptionTarget, TgdBufferOptionUsage } from \"@tgd/buffer\";\n\nexport type TgdDatasetType = \"float\" | \"vec2\" | \"vec3\" | \"vec4\";\n\nexport interface TgdDatasetOptions {\n  divisor: number;\n  target: TgdBufferOptionTarget;\n  usage: TgdBufferOptionUsage;\n}\n\nexport type TgdDatasetTypeRecord = Record<string, TgdDatasetType>;\n\nexport class TgdDataset {\n  private stride: number = 0;\n  private definitions: Record<string, AttributeInternalRepresentation> = {};\n  private _data = new ArrayBuffer(0);\n  private _count = 0;\n\n  public target: TgdBufferOptionTarget;\n  public usage: TgdBufferOptionUsage;\n\n  constructor(\n    private readonly attributesDefinition: TgdDatasetTypeRecord,\n    private readonly options: Partial<TgdDatasetOptions> = {}\n  ) {\n    this.target = options.target ?? \"ARRAY_BUFFER\";\n    this.usage = options.usage ?? \"STATIC_DRAW\";\n    this.initialize(attributesDefinition, options);\n  }\n\n  private initialize(\n    attributesDefinition: TgdDatasetTypeRecord,\n    options: Partial<TgdDatasetOptions> = {}\n  ) {\n    const divisor = options.divisor ?? 0;\n    let stride = 0;\n    const data: { [key: string]: ArrayBuffer } = {};\n    const definitions: Record<string, AttributeInternalRepresentation> = {};\n    for (const name of Object.keys(attributesDefinition)) {\n      data[name] = new ArrayBuffer(0);\n      const def: AttributeInternalRepresentation = {\n        dimension: DIMS[attributesDefinition[name]],\n        byteOffset: stride,\n        bytesPerElement: Float32Array.BYTES_PER_ELEMENT,\n        divisor,\n        getter(view: DataView, byteOffset: number) {\n          if (byteOffset >= view.byteLength) {\n            byteOffset %= view.byteLength;\n          }\n          return view.getFloat32(byteOffset, true);\n        },\n        setter(view: DataView, byteOffset: number, value: number) {\n          view.setFloat32(byteOffset, value, true);\n        },\n      };\n      definitions[name] = def;\n      stride += def.bytesPerElement * def.dimension;\n    }\n    this.definitions = definitions;\n    this.stride = stride;\n  }\n\n  addAttributes(attributesDefinition: TgdDatasetTypeRecord) {\n    const oldDataset = this.clone();\n    for (const key of Object.keys(attributesDefinition)) {\n      const oldType = this.attributesDefinition[key];\n      const newType = attributesDefinition[key];\n      if (oldType && oldType !== newType) {\n        throw Error(\n          `It is not allowed to change the type of attribute \"${key}\" from \"${oldType}\" to \"${newType}\"! Prefer removing the attribute first.`\n        );\n      }\n    }\n    this.initialize(\n      {\n        ...this.attributesDefinition,\n        ...attributesDefinition,\n      },\n      this.options\n    );\n    const newDataset = this;\n    newDataset.count = oldDataset.count;\n    for (const attribName of oldDataset.attributesNames) {\n      const { get } = oldDataset.getAttribAccessor(attribName);\n      const { set } = newDataset.getAttribAccessor(attribName);\n      for (let idx = 0; idx < oldDataset.count; idx++) {\n        const def = this.getDef(attribName);\n        for (let dim = 0; dim < def.dimension; dim++) {\n          set(get(idx, dim), idx, dim);\n        }\n      }\n    }\n  }\n\n  clone(): TgdDataset {\n    const ds = new TgdDataset(this.attributesDefinition, this.options);\n    ds.count = this.count;\n    const src = new DataView(this._data);\n    const dst = new DataView(ds._data);\n    for (let offset = 0; offset < src.byteLength; offset++) {\n      dst.setUint8(offset, src.getUint8(offset));\n    }\n    return ds;\n  }\n\n  /**\n   * Warning!\n   *\n   * This ArrayBuffer will be detached as soon as its\n   * size is changed!\n   */\n  get data(): Readonly<ArrayBuffer> {\n    return this._data;\n  }\n\n  /** Get number of attributes. */\n  get count() {\n    return this._count;\n  }\n  /** Set number of attributes (reallocate data accordingly) */\n  set count(count: number) {\n    if (this._count === count) return;\n\n    this._count = count;\n    this._data = resize(this._data, count * this.stride);\n  }\n\n  get attributesNames(): string[] {\n    return Object.keys(this.attributesDefinition);\n  }\n\n  getAttribAccessor(attribName: string): {\n    get: (index: number, dimension?: number) => number;\n    set: (value: number, index: number, dimension?: number) => void;\n  } {\n    const def = this.getDef(attribName);\n    const view = new DataView(this.data);\n    const stride = this.stride;\n    return {\n      get(index: number, dimension = 0): number {\n        const byteOffset =\n          def.byteOffset + stride * index + dimension * def.bytesPerElement;\n        return def.getter(view, byteOffset);\n      },\n      set(value: number, index: number, dimension = 0): void {\n        const byteOffset =\n          def.byteOffset + stride * index + dimension * def.bytesPerElement;\n        def.setter(view, byteOffset, value);\n      },\n    };\n  }\n\n  /**\n   * Set the data for one attribute.\n   *\n   * If you try to set more element that the current buffer\n   * can hold, the buffer will be expanded.\n   * And the property `count` will change accordingly.\n   *\n   * @param attribName If the attribute does not exist,\n   * you will get an exception.\n   * @param value The ArrayBuffer holding the data you\n   * want to set to this attribute\n   * @param param2\n   */\n  set(\n    attribName: string,\n    value: ArrayBuffer | Float32Array | { buffer: ArrayBuffer },\n    {\n      byteOffset = 0,\n      byteStride,\n      first = 0,\n      count = Infinity,\n      targetFirst = 0,\n    }: Partial<{\n      /**\n       * First byte of meaningful data in this buffer.\n       */\n      byteOffset: number;\n      /**\n       * Number of bytes between two elements.\n       * If data is packed, you can leave it undefined.\n       */\n      byteStride: number;\n      /**\n       * Index if the first source element.\n       * Default to 0.\n       */\n      first: number;\n      /**\n       * Maximum number of elements to store.\n       * Default to Infinity.\n       */\n      count: number;\n      /**\n       * Index if the first destination element.\n       * Default to 0.\n       */\n      targetFirst: number;\n    }> = {}\n  ) {\n    const {\n      bytesPerElement,\n      dimension,\n      byteOffset: attribByteOffset,\n    } = this.getDef(attribName);\n    const buffer = value instanceof ArrayBuffer ? value : value.buffer;\n    const chunkLength = bytesPerElement * dimension;\n    const srcStride = byteStride ?? chunkLength;\n    let srcOffset = byteOffset + srcStride * first;\n    const dstStride = this.stride;\n    let dstOffset = targetFirst * dstStride + attribByteOffset;\n    this.count = Math.max(\n      this.count,\n      Math.min(count, Math.floor((buffer.byteLength - srcOffset) / srcStride))\n    );\n    const srcStop = buffer.byteLength - srcStride + 1;\n    const dstStop = this._data.byteLength + attribByteOffset - dstStride + 1;\n    const srcBuffer = new Uint8Array(buffer);\n    const dstBuffer = new Uint8Array(this._data);\n    let index = 0;\n    while (index < count && srcOffset < srcStop && dstOffset < dstStop) {\n      dstBuffer.set(\n        srcBuffer.subarray(srcOffset, srcOffset + chunkLength),\n        dstOffset\n      );\n      index++;\n      srcOffset += srcStride;\n      dstOffset += dstStride;\n    }\n  }\n\n  private getDef(attribName: string): AttributeInternalRepresentation {\n    const def = this.definitions[attribName];\n    if (!def)\n      throw Error(\n        `[TgdDataset] Attribute \"${String(\n          attribName\n        )}\" not found in this DataSet!\\nAvailable names are: ${Object.keys(\n          this.definitions\n        )\n          .map((name) => JSON.stringify(name))\n          .join(\", \")}.`\n      );\n    return def;\n  }\n\n  /**\n   * Enable the vertex attrib array, and set\n   * the vertex attrib pointer for every declared\n   * attribute.\n   */\n  defineAttributes(gl: WebGL2RenderingContext, prg: TgdProgram) {\n    let offsetDestination = 0;\n    const { definitions } = this;\n    for (const name of Object.keys(definitions)) {\n      const def = definitions[name];\n      if (prg.hasAttribute(name)) {\n        const att = prg.getAttribLocation(name);\n        gl.enableVertexAttribArray(att);\n        gl.vertexAttribPointer(\n          att,\n          def.dimension,\n          gl.FLOAT,\n          false,\n          this.stride,\n          offsetDestination\n        );\n        gl.vertexAttribDivisor(att, def.divisor);\n      }\n      const bytes = def.dimension * def.bytesPerElement;\n      offsetDestination += bytes;\n    }\n  }\n\n  toCode({ indent = \"\" }: Partial<{ indent: string }> = {}) {\n    const lines: string[] = [];\n    let offsetDestination = 0;\n    const { definitions } = this;\n    for (const name of Object.keys(definitions)) {\n      const def = definitions[name];\n      const att = `$${name}`;\n      lines.push(\n        `const ${att} = gl.getAttribLocation(prg, \"${name}\")`,\n        `gl.enableVertexAttribArray(${att})`,\n        `gl.vertexAttribPointer(`,\n        `  ${att},`,\n        `  ${def.dimension},  // Dimension`,\n        `  gl.FLOAT,`,\n        `  false,`,\n        `  ${this.stride},   // Stride`,\n        `  ${offsetDestination}   // Offset`,\n        `)`,\n        `gl.vertexAttribDivisor(${att}, ${def.divisor})`\n      );\n      const bytes = def.dimension * def.bytesPerElement;\n      offsetDestination += bytes;\n    }\n    return lines.map((line) => `${indent}${line}`).join(\"\\n\");\n  }\n}\n\nconst DIMS: Record<TgdDatasetType, number> = {\n  float: 1,\n  vec2: 2,\n  vec3: 3,\n  vec4: 4,\n};\n\ninterface AttributeInternalRepresentation {\n  dimension: number;\n  bytesPerElement: number;\n  byteOffset: number;\n  divisor: number;\n  getter(this: void, view: DataView, byteOffset: number): number;\n  setter(this: void, view: DataView, byteOffset: number, value: number): void;\n}\n\nfunction resizeFast(buff: ArrayBuffer, newSize?: number): ArrayBuffer {\n  return buff.transfer(newSize);\n}\n\nfunction resizeSlow(inBuff: ArrayBuffer, newSize?: number): ArrayBuffer {\n  const outBuff = new ArrayBuffer(newSize ?? inBuff.byteLength);\n  new Uint8Array(outBuff).set(new Uint8Array(inBuff));\n  return outBuff;\n}\n\nconst resize =\n  typeof ArrayBuffer.prototype.transfer === \"function\"\n    ? resizeFast\n    : resizeSlow;\n","export * from \"./dataset\"\n","export function padColOfNumbers(values: number[], decimals = 6): string[] {\n    const p = Math.pow(10, decimals)\n    const out: string[] = []\n    let max = 0\n    for (const val of values) {\n        const n = Math.round(val * p) / p\n        const txt = n.toFixed(decimals)\n        max = Math.max(max, txt.length)\n        out.push(txt)\n    }\n    return out.map(txt => txt.padStart(max, \" \"))\n}\n","export class TgdEvent<T> {\n    private readonly listeners = new Set<Listener<T>>()\n\n    addListener(listener: Listener<T>) {\n        this.listeners.add(listener)\n    }\n\n    removeListener(listener: Listener<T>) {\n        this.listeners.delete(listener)\n    }\n\n    dispatch(value: T) {\n        this.listeners.forEach(listener => listener(value))\n    }\n}\n\ntype Listener<T> = (value: T) => void\n","export type TgdBufferOptionTarget =\n    | \"ARRAY_BUFFER\"\n    | \"ELEMENT_ARRAY_BUFFER\"\n    | \"COPY_READ_BUFFER\"\n    | \"COPY_WRITE_BUFFER\"\n    | \"TRANSFORM_FEEDBACK_BUFFER\"\n    | \"UNIFORM_BUFFER\"\n    | \"PIXEL_PACK_BUFFER\"\n    | \"PIXEL_UNPACK_BUFFER\"\n\nexport type TgdBufferOptionUsage =\n    | \"STATIC_DRAW\"\n    | \"DYNAMIC_DRAW\"\n    | \"STREAM_DRAW\"\n    | \"STATIC_READ\"\n    | \"DYNAMIC_READ\"\n    | \"STREAM_READ\"\n    | \"STATIC_COPY\"\n    | \"DYNAMIC_COPY\"\n    | \"STREAM_COPY\"\n\nexport interface TgdBufferOptions {\n    target: TgdBufferOptionTarget\n    usage: TgdBufferOptionUsage\n}\n\nexport class TgdBuffer {\n    public readonly buffer: WebGLBuffer\n\n    private _target: TgdBufferOptionTarget\n    private _usage: TgdBufferOptionUsage\n\n    constructor(\n        public readonly gl: WebGL2RenderingContext,\n        data?: BufferSource,\n        options?: Partial<TgdBufferOptions>\n    ) {\n        const buffer = gl.createBuffer()\n        if (!buffer) throw Error(\"Unable to create WebGLBuffer!\")\n\n        this._target = options?.target ?? \"ARRAY_BUFFER\"\n        this._usage = options?.usage ?? \"STATIC_DRAW\"\n        this.buffer = buffer\n        if (data) {\n            this.bufferData(data, options)\n        }\n    }\n\n    get target() {\n        return this._target\n    }\n\n    bind(target?: TgdBufferOptionTarget) {\n        const { gl, buffer } = this\n        this._target = target ?? this._target\n        gl.bindBuffer(gl[this._target], buffer)\n    }\n\n    bufferData(data: BufferSource, options: Partial<TgdBufferOptions> = {}) {\n        const { gl } = this\n        this.bind(options.target)\n        this._usage = options.usage ?? this._usage\n        gl.bufferData(gl[this._target], data, gl[this._usage])\n    }\n\n    delete() {\n        const { gl, buffer } = this\n        gl.deleteBuffer(buffer)\n    }\n}\n","import { TgdInputKeyboard } from \"@tgd/types/input-keyboard\"\nimport { TgdEvent } from \"../event\"\n\nexport class TgdInputKeyboardImpl implements TgdInputKeyboard {\n    public readonly eventKeyPress = new TgdEvent<KeyboardEvent>()\n\n    private readonly keysDown = new Set<string>()\n    private readonly keysUp = new Set<string>()\n    private attached = false\n\n    constructor() {\n        document.addEventListener(\"keydown\", this.handleKeyDown)\n        document.addEventListener(\"keyup\", this.handleKeyUp)\n        this.attached = true\n    }\n\n    detach() {\n        if (!this.attached) return\n\n        document.removeEventListener(\"keydown\", this.handleKeyDown)\n        document.removeEventListener(\"keyup\", this.handleKeyUp)\n        this.attached = false\n    }\n\n    isUp(...keys: string[]): boolean {\n        return !this.isDown(...keys)\n    }\n\n    isDown(...keys: string[]): boolean {\n        for (const key of keys) {\n            if (!this.keysDown.has(key)) return false\n        }\n        return true\n    }\n\n    hasClicked(key: string): boolean {\n        if (this.keysUp.has(key)) {\n            this.keysUp.delete(key)\n            return true\n        }\n        return false\n    }\n\n    private readonly handleKeyDown = (evt: KeyboardEvent) => {\n        this.keysDown.add(evt.key)\n        this.keysUp.delete(evt.key)\n    }\n\n    private readonly handleKeyUp = (evt: KeyboardEvent) => {\n        this.keysDown.delete(evt.key)\n        this.keysUp.add(evt.key)\n        this.eventKeyPress.dispatch(evt)\n    }\n}\n","import { TgdEvent } from \"@tgd/event\"\nimport {\n    TgdInputPointer,\n    TgdInputPointerEventMove,\n    TgdInputPointerEventFinger,\n    TgdInputPointerEventTap,\n    TgdInputPointerEventZoom,\n} from \"@tgd/types\"\n\nconst MOUSE_BUTTON_RIGHT = 2\n\nexport class TgdInputPointerImpl implements TgdInputPointer {\n    readonly eventTap = new TgdEvent<Readonly<TgdInputPointerEventTap>>()\n    readonly eventMoveStart = new TgdEvent<Readonly<TgdInputPointerEventMove>>()\n    readonly eventMove = new TgdEvent<Readonly<TgdInputPointerEventMove>>()\n    readonly eventMoveEnd = new TgdEvent<Readonly<TgdInputPointerEventMove>>()\n    readonly eventZoom = new TgdEvent<Readonly<TgdInputPointerEventZoom>>()\n    /**\n     * This is a tap only of the pointer touched for less that\n     * `tapDelay` milliseconds.\n     */\n    public tapDelay = 300\n\n    private controlKeys = {\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n    }\n    private start: TgdInputPointerEventFinger = {\n        x: 0,\n        y: 0,\n        t: 0,\n        fingersCount: 1,\n    }\n    private current: TgdInputPointerEventFinger = {\n        x: 0,\n        y: 0,\n        t: 0,\n        fingersCount: 1,\n    }\n    private previous: TgdInputPointerEventFinger = {\n        x: 0,\n        y: 0,\n        t: 0,\n        fingersCount: 1,\n    }\n    /**\n     * If not null, the pointer is touching.\n     */\n    private pointerEvent: PointerEvent | null = null\n\n    constructor(private readonly canvas: HTMLCanvasElement) {\n        canvas.addEventListener(\"pointerdown\", this.handlePointerDown, true)\n        canvas.addEventListener(\"wheel\", this.handleCanvasWheel)\n        canvas.addEventListener(\"contextmenu\", this.handleContextMenu)\n        canvas.addEventListener(\"pointermove\", this.handlePointerMove)\n        canvas.addEventListener(\"pointerup\", this.handlePointerUp)\n    }\n\n    detach() {\n        const { canvas } = this\n        if (!canvas) return\n\n        canvas.removeEventListener(\"pointerdown\", this.handlePointerDown)\n        canvas.removeEventListener(\"wheel\", this.handleCanvasWheel)\n        canvas.removeEventListener(\"contextmenu\", this.handleContextMenu)\n        canvas.removeEventListener(\"pointermove\", this.handlePointerMove)\n        canvas.removeEventListener(\"pointerup\", this.handlePointerUp)\n    }\n\n    private readonly handleContextMenu = (evt: {\n        preventDefault: () => void\n    }) => {\n        evt.preventDefault()\n    }\n\n    private readonly handleCanvasWheel = (evt: WheelEvent) => {\n        let delta = evt.deltaX + evt.deltaY + evt.deltaZ\n        if (delta > 0) delta = 1\n        else delta = -1\n        this.eventZoom.dispatch({\n            current: this.getPoint(evt),\n            direction: delta,\n            preventDefault: () => evt.preventDefault(),\n            ...this.controlKeys,\n        })\n    }\n\n    private readonly handlePointerDown = (evt: PointerEvent) => {\n        if (!evt.isPrimary) return\n\n        this.canvas.setPointerCapture(evt.pointerId)\n        evt.preventDefault()\n        evt.stopPropagation()\n        this.pointerEvent = evt\n        const point = this.getPoint(evt)\n        this.start = this.current = this.previous = point\n        this.eventMoveStart.dispatch({\n            start: point,\n            current: point,\n            previous: point,\n            ...this.controlKeys,\n        })\n    }\n\n    private readonly handlePointerMove = (evt: PointerEvent) => {\n        if (!evt.isPrimary || !this.pointerEvent || !this.canvas) return\n\n        this.previous = this.current\n        this.current = this.getPoint(evt)\n        this.eventMove.dispatch({\n            start: this.start,\n            current: this.current,\n            previous: this.previous,\n            ...this.controlKeys,\n        })\n    }\n\n    private readonly handlePointerUp = (evt: PointerEvent) => {\n        if (!evt.isPrimary || !this.pointerEvent) return\n\n        evt.preventDefault()\n        this.current = this.getPoint(evt)\n        this.eventMoveEnd.dispatch({\n            start: this.start,\n            current: this.current,\n            previous: this.previous,\n            ...this.controlKeys,\n        })\n        this.pointerEvent = null\n        // Tap event.\n        if (evt.timeStamp - this.start.t < this.tapDelay) {\n            this.eventTap.dispatch({\n                ...this.start,\n                ...this.controlKeys,\n            })\n        }\n    }\n\n    private getPoint(\n        evt: PointerEvent | WheelEvent\n    ): TgdInputPointerEventFinger {\n        this.controlKeys = {\n            altKey: evt.altKey || evt.buttons === MOUSE_BUTTON_RIGHT,\n            ctrlKey: evt.ctrlKey,\n            metaKey: evt.metaKey,\n            shiftKey: evt.shiftKey,\n        }\n        const { left, top, width, height } = this.canvas.getBoundingClientRect()\n        const x = 2 * ((evt.clientX - left) / width - 0.5)\n        const y = -2 * ((evt.clientY - top) / height - 0.5)\n        return { x, y, t: evt.timeStamp, fingersCount: 1 }\n    }\n}\n","import { TgdInputKeyboardImpl } from \"@tgd/input/keyboard\"\nimport { TgdInputPointerImpl } from \"@tgd/input/pointer\"\nimport { TgdInputKeyboard } from \"@tgd/types/input-keyboard\"\nimport { TgdInputPointer } from \"@tgd/types/input-pointer\"\n\nexport class TgdInputs {\n    private _keyboard: TgdInputKeyboard | null = null\n    private _pointer: TgdInputPointer | null = null\n\n    constructor(private readonly canvas: HTMLCanvasElement) {}\n\n    get keyboard(): TgdInputKeyboard {\n        if (!this._keyboard) {\n            this._keyboard = new TgdInputKeyboardImpl()\n        }\n        return this._keyboard\n    }\n\n    get pointer(): TgdInputPointer {\n        if (!this._pointer) {\n            this._pointer = new TgdInputPointerImpl(this.canvas)\n        }\n        return this._pointer\n    }\n}\n","let counter = 1\n\n/**\n * This class deals with WebGL resources.\n *\n * It prevents you from creatng multiple times the\n * same resource by holding an internal ref counter.\n */\nexport abstract class TgdResource<InputType, OutputType> {\n    private readonly keys = new Map<OutputType, string>()\n    private readonly objects = new Map<string, OutputType>()\n    private readonly references = new Map<string, number>()\n\n    create(input: InputType, id?: string): OutputType {\n        const key =\n            id ?? this.makeKeyFromInput(input) ?? `TgdResource:${counter++}`\n        const refCount = this.references.get(key) ?? 0\n        if (refCount < 1) {\n            const object = this.actualCreate(input, key)\n            this.keys.set(object, key)\n            this.objects.set(key, object)\n            this.references.set(key, 1)\n            return object\n        }\n        const object = this.objects.get(key)\n        if (!object) throw Error(\"[TgdResource.create] Panic!\")\n\n        this.references.set(key, refCount + 1)\n        return object\n    }\n\n    delete(object: OutputType) {\n        const key = this.keys.get(object)\n        if (!key) return\n\n        const refCount = this.references.get(key) ?? 0\n        if (refCount < 1) return\n\n        if (refCount > 1) {\n            this.references.set(key, refCount - 1)\n            return\n        }\n\n        this.keys.delete(object)\n        this.objects.delete(key)\n        this.references.delete(key)\n        this.actualDelete(object)\n    }\n\n    protected abstract actualCreate(input: InputType, id: string): OutputType\n\n    protected abstract actualDelete(object: OutputType): void\n\n    protected makeKeyFromInput(_input: InputType): string | null {\n        return null\n    }\n}\n","import { TgdMat4, TgdVec3, TgdVec4 } from \"@tgd/math\"\nimport { TgdProgram, TgdProgramOptions } from \"@tgd/types\"\n\n/**\n * This class helps to manage a WebGLProgram.\n * It will report meaninfull errors and help you with\n * the uniforms.\n */\nexport class TgdProgramImpl implements TgdProgram {\n    /** Access to the real WebGLProgram object. */\n    public readonly program: WebGLProgram\n\n    private readonly shaders: WebGLShader[]\n    private readonly uniformsLocations: { [name: string]: WebGLUniformLocation }\n\n    constructor(\n        public readonly gl: WebGL2RenderingContext,\n        private readonly code: TgdProgramOptions\n    ) {\n        const prg = gl.createProgram()\n        if (!prg) throw Error(\"Unable to create WebGLProgram!\")\n\n        const vertShader = this.createShader(\"VERTEX_SHADER\", code.vert)\n        gl.attachShader(prg, vertShader)\n        const fragShader = this.createShader(\"FRAGMENT_SHADER\", code.frag)\n        gl.attachShader(prg, fragShader)\n        gl.linkProgram(prg)\n        if (!gl.getProgramParameter(prg, gl.LINK_STATUS)) {\n            const info = gl.getProgramInfoLog(prg) ?? \"\"\n            console.warn(info)\n            const errorLines = getErrorLines(info)\n            logCode(\"Vertex Shader\", code.vert, errorLines)\n            logCode(\"Fragment Shader\", code.frag, errorLines)\n            throw new Error(\"Could NOT link WebGL2 program!\\n\" + info)\n        }\n        this.program = prg\n        this.shaders = [vertShader, fragShader]\n        this.uniformsLocations = this.getUniformsLocations()\n        gl.detachShader(prg, vertShader)\n        gl.deleteShader(vertShader)\n        gl.detachShader(prg, fragShader)\n        gl.deleteShader(fragShader)\n    }\n\n    toCode({ indent = \"\" }: Partial<{ indent: string }> = {}) {\n        const lines: string[] = [\n            `function createProgram(gl: WebGL2RenderingContext) {`,\n            `  const prg = gl.createProgram()`,\n            `  const vertexShader = gl.createShader(gl.VERTEX_SHADER)`,\n            `  gl.shaderSource(vertexShader, \\`${this.code.vert}\\`)`,\n            `  gl.compileShader(vertexShader)`,\n            `  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)`,\n            `  gl.shaderSource(fragmentShader, \\`${this.code.frag}\\`)`,\n            `  gl.compileShader(fragmentShader)`,\n            `  gl.attachShader(prg, vertexShader)`,\n            `  gl.attachShader(prg, fragmentShader)`,\n            `  gl.linkProgram(prg)`,\n            `  return prg`,\n            `}`,\n        ]\n        return lines.map(line => `${indent}${line}`).join(\"\\n\")\n    }\n\n    hasAttribute(name: string): boolean {\n        const { gl, program } = this\n        const loc = gl.getAttribLocation(program, name)\n        return loc >= 0\n    }\n\n    getAttribLocation(name: string): number {\n        const { gl, program } = this\n        const loc = gl.getAttribLocation(program, name)\n        if (loc < 0) {\n            throw Error(`Attribute \"${name}\" not found!`)\n        }\n        return loc\n    }\n\n    getUniformLocation(name: string): WebGLUniformLocation {\n        const { uniformsLocations } = this\n        const names = Object.keys(uniformsLocations)\n        if (name.length === 0) {\n            console.warn(\n                `Uniform \"${name}\" has not been found: there is no active uniform in this program!`\n            )\n            return 0\n        }\n        const location = uniformsLocations[name]\n        if (!location) {\n            console.warn(\n                `No active uniform found with name \"${name}\"!\\nAvailable names are: ${names.join(\n                    \", \"\n                )}.`\n            )\n        }\n        return location\n    }\n\n    uniform1f(name: string, value: number) {\n        const { gl } = this\n        gl.uniform1f(this.getUniformLocation(name), value)\n    }\n\n    uniform2f(name: string, x: number, y: number) {\n        const { gl } = this\n        gl.uniform2f(this.getUniformLocation(name), x, y)\n    }\n\n    uniform3f(name: string, x: number, y: number, z: number) {\n        const { gl } = this\n        gl.uniform3f(this.getUniformLocation(name), x, y, z)\n    }\n\n    uniform3fv(name: string, vec3: TgdVec3) {\n        const { gl } = this\n        gl.uniform3fv(this.getUniformLocation(name), vec3)\n    }\n\n    uniform4f(name: string, x: number, y: number, z: number, w: number) {\n        const { gl } = this\n        gl.uniform4f(this.getUniformLocation(name), x, y, z, w)\n    }\n\n    uniform4fv(name: string, vec4: TgdVec4) {\n        const { gl } = this\n        gl.uniform4fv(this.getUniformLocation(name), vec4)\n    }\n\n    uniform1i(name: string, value: number) {\n        const { gl } = this\n        gl.uniform1i(this.getUniformLocation(name), value)\n    }\n\n    uniform2i(name: string, x: number, y: number) {\n        const { gl } = this\n        gl.uniform2i(this.getUniformLocation(name), x, y)\n    }\n\n    uniform3i(name: string, x: number, y: number, z: number) {\n        const { gl } = this\n        gl.uniform3i(this.getUniformLocation(name), x, y, z)\n    }\n\n    uniform4i(name: string, x: number, y: number, z: number, w: number) {\n        const { gl } = this\n        gl.uniform4i(this.getUniformLocation(name), x, y, z, w)\n    }\n\n    uniform1ui(name: string, value: number) {\n        const { gl } = this\n        gl.uniform1ui(this.getUniformLocation(name), value)\n    }\n\n    uniform2ui(name: string, x: number, y: number) {\n        const { gl } = this\n        gl.uniform2ui(this.getUniformLocation(name), x, y)\n    }\n\n    uniform3ui(name: string, x: number, y: number, z: number) {\n        const { gl } = this\n        gl.uniform3ui(this.getUniformLocation(name), x, y, z)\n    }\n\n    uniform4ui(name: string, x: number, y: number, z: number, w: number) {\n        const { gl } = this\n        gl.uniform4ui(this.getUniformLocation(name), x, y, z, w)\n    }\n\n    uniformMatrix4fv(name: string, mat4: TgdMat4) {\n        const { gl } = this\n        gl.uniformMatrix4fv(this.getUniformLocation(name), false, mat4)\n    }\n\n    /**\n     * Use the current program.\n     * This is equivalent to `gl.useProgram(program)`.\n     */\n    use() {\n        const { gl, program } = this\n        gl.useProgram(program)\n    }\n\n    delete() {\n        const { gl } = this\n        this.shaders.forEach(shader => gl.deleteShader(shader))\n        gl.deleteProgram(this.program)\n    }\n\n    private createShader(type: ShaderType, code: string): WebGLShader {\n        const { gl } = this\n        const shader = gl.createShader(gl[type])\n        if (!shader)\n            throw Error(`Unable to create a WebGLShader of type \"${type}\"!`)\n\n        gl.shaderSource(shader, code)\n        gl.compileShader(shader)\n        const info = gl.getShaderInfoLog(shader)\n        if (info) {\n            console.error(`Error in ${type} code:`, info)\n            const errorLines = getErrorLines(info)\n            logCode(type, code, errorLines)\n            throw Error(`Unable to compile ${type}!`)\n        }\n        return shader\n    }\n\n    private getUniformsLocations() {\n        const { gl, program } = this\n        const count: unknown = gl.getProgramParameter(\n            program,\n            gl.ACTIVE_UNIFORMS\n        )\n        if (typeof count !== \"number\")\n            throw Error(\n                \"Unable to get the number of uniforms in a WebGLProgram!\"\n            )\n\n        const uniforms: { [name: string]: WebGLUniformLocation } = {}\n        for (let index = 0; index < count; index++) {\n            const uniform = gl.getActiveUniform(program, index)\n            if (!uniform) continue\n\n            const location = gl.getUniformLocation(program, uniform.name)\n            if (location === null)\n                throw Error(\n                    `Unable to get location for uniform \"${uniform.name}\"!`\n                )\n\n            uniforms[uniform.name] = location\n        }\n        return uniforms\n    }\n}\n\ntype ShaderType = \"VERTEX_SHADER\" | \"FRAGMENT_SHADER\"\n\nconst RX_ERROR_LINE = /^ERROR:[ \\t]+([0-9]+):([0-9]+):/g\n\nfunction getErrorLines(message: string): {\n    lines: number[]\n    messages: string[]\n} {\n    const lines: number[] = []\n    const messages: string[] = []\n    for (const line of message.split(\"\\n\")) {\n        RX_ERROR_LINE.lastIndex = -1\n        const match = RX_ERROR_LINE.exec(line)\n        if (match) {\n            lines.push(parseInt(match[2], 10))\n            messages.push(line.substring(match[0].length).trim())\n        }\n    }\n    return { lines, messages }\n}\n\nfunction style(background: string, bold = false) {\n    return `color:#fff;background:${background};font-family:monospace;font-size:80%;font-weight:${\n        bold ? \"bolder\" : \"100\"\n    }`\n}\n\nfunction logCode(\n    title: string,\n    code: string,\n    errors: { lines: number[]; messages: string[] }\n) {\n    console.log(`%c${title}`, \"font-weight:bolder;font-size:120%\")\n    code.split(\"\\n\").forEach((line, index) => {\n        const num = index + 1\n        const prefix = (num * 1e-4).toFixed(4).substring(2)\n        const background = errors.lines.includes(num) ? \"#f00\" : \"#000\"\n        console.log(\n            `%c${prefix}  %c${line}`,\n            style(background),\n            style(background, true)\n        )\n        if (errors.lines.includes(num)) {\n            console.error(errors.messages[errors.lines.indexOf(num)])\n        }\n    })\n}\n","import { TgdProgram, TgdProgramOptions } from \"@tgd/types\"\nimport { TgdResource } from \"./resource\"\nimport { TgdProgramImpl } from \"@tgd/program\"\n\nexport class TgdResourceProgram extends TgdResource<\n    TgdProgramOptions,\n    TgdProgram\n> {\n    constructor(public readonly gl: WebGL2RenderingContext) {\n        super()\n    }\n\n    protected actualCreate(input: TgdProgramOptions): TgdProgram {\n        return new TgdProgramImpl(this.gl, input)\n    }\n\n    protected actualDelete(program: TgdProgram): void {\n        if (program instanceof TgdProgramImpl) program.delete()\n    }\n\n    protected makeKeyFromInput(input: TgdProgramOptions): string {\n        return JSON.stringify(input)\n    }\n}\n","export class TgdLoaderImage {\n    /**\n     * Try to load an image and return `null` in case of failure.\n     * @param url URL of the image to load.\n     */\n    static async image(url: string): Promise<HTMLImageElement | null> {\n        return new Promise(resolve => {\n            const img = new Image()\n            img.onload = () => resolve(img)\n            img.onerror = () => {\n                console.error(\"Unable to load image: \", url)\n                resolve(null)\n            }\n            img.src = url\n        })\n    }\n\n    static async canvas(url: string): Promise<HTMLCanvasElement | null> {\n        const img = await TgdLoaderImage.image(url)\n        if (!img) return null\n\n        const canvas = document.createElement(\"canvas\")\n        canvas.width = img.naturalWidth\n        canvas.height = img.naturalHeight\n        const ctx = canvas.getContext(\"2d\")\n        if (!ctx) throw Error(\"Unable to get a 2D context!\")\n\n        ctx.drawImage(img, 0, 0)\n        return canvas\n    }\n}\n","import { TgdCamera } from \"@tgd/camera\"\nimport { TgdQuat, TgdVec3 } from \"@tgd/math\"\nimport { mix } from \"../math\"\n\ninterface CameraTarget {\n    spaceHeightAtTarget: number\n    distance: number\n    zoom: number\n    orientation: TgdQuat\n    target: TgdVec3\n    shift: TgdVec3\n}\n\nexport function tgdActionCreateCameraInterpolation(\n    camera: TgdCamera,\n    destination: Partial<CameraTarget>\n) {\n    const beginSpaceHeightAtTarget = camera.spaceHeightAtTarget\n    const beginDistance = camera.distance\n    const beginZoom = camera.zoom\n    const beginOrientation = new TgdQuat(camera.orientation)\n    const beginTarget = new TgdVec3(camera.target)\n    const beginShift = new TgdVec3(camera.shift)\n    const endSpaceHeightAtTarget =\n        destination.spaceHeightAtTarget ?? beginSpaceHeightAtTarget\n    const endDistance = destination.distance ?? beginDistance\n    const endZoom = destination.zoom ?? beginZoom\n    const endOrientation = new TgdQuat(\n        destination.orientation ?? beginOrientation\n    )\n    const endTarget = new TgdVec3(destination.target ?? beginTarget)\n    const endShift = new TgdVec3(destination.shift ?? beginShift)\n    const orientation = new TgdQuat()\n    const target = new TgdVec3()\n    const shift = new TgdVec3()\n    return (t: number) => {\n        camera.spaceHeightAtTarget = mix(\n            beginSpaceHeightAtTarget,\n            endSpaceHeightAtTarget,\n            t\n        )\n        camera.distance = mix(beginDistance, endDistance, t)\n        camera.zoom = mix(beginZoom, endZoom, t)\n        camera.orientation = orientation\n            .fromSlerp(beginOrientation, endOrientation, t)\n            .normalize()\n        camera.target = target.fromMix(beginTarget, endTarget, t)\n        camera.shift = shift.fromMix(beginShift, endShift, t)\n    }\n}\n","export * from \"./camera\"\n","/**\n * Helper to get a canvas with the given size.\n */\nexport function tgdCanvasCreate(\n    width: number,\n    height: number\n): HTMLCanvasElement {\n    const canvas = document.createElement(\"canvas\")\n    canvas.width = width\n    canvas.height = height\n    return canvas\n}\n\n/**\n * Helper to get a canvas of the given size and a 2D context on it.\n * If this is not possible, the method will throw an exception.\n */\nexport function tgdCanvasCreateWithContext2D(\n    width: number,\n    height: number,\n    settings?: CanvasRenderingContext2DSettings\n): { canvas: HTMLCanvasElement; ctx: CanvasRenderingContext2D } {\n    const canvas = document.createElement(\"canvas\")\n    canvas.width = width\n    canvas.height = height\n    const ctx = canvas.getContext(\"2d\", settings)\n    if (!ctx) throw Error(\"Unable to create 2D context!\")\n\n    return { canvas, ctx }\n}\n","export function tgdEasingFunctionLinear(x: number) {\n    return x\n}\n\nexport function tgdEasingFunctionInSine(x: number): number {\n    return 1 - Math.cos((x * Math.PI) / 2)\n}\n\nexport function tgdEasingFunctionOutSine(x: number): number {\n    return Math.sin((x * Math.PI) / 2)\n}\n\nexport function tgdEasingFunctionInOutSine(x: number): number {\n    return -(Math.cos(Math.PI * x) - 1) / 2\n}\n\nexport function tgdEasingFunctionInQuad(x: number): number {\n    return x * x\n}\n\nexport function tgdEasingFunctionOutQuad(x: number): number {\n    return 1 - (1 - x) * (1 - x)\n}\n\nexport function tgdEasingFunctionInOutQuad(x: number): number {\n    return x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2\n}\n\nexport function tgdEasingFunctionInCubic(x: number): number {\n    return x * x * x\n}\n\nexport function tgdEasingFunctionOutCubic(x: number): number {\n    return 1 - Math.pow(1 - x, 3)\n}\n\nexport function tgdEasingFunctionInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2\n}\n\nexport function tgdEasingFunctionInQuart(x: number): number {\n    return x * x * x * x\n}\n\nexport function tgdEasingFunctionOutQuart(x: number): number {\n    return 1 - Math.pow(1 - x, 4)\n}\n\nexport function tgdEasingFunctionInOutQuart(x: number): number {\n    return x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2\n}\n\nexport function tgdEasingFunctionInQuint(x: number): number {\n    return x * x * x * x * x\n}\n\nexport function tgdEasingFunctionOutQuint(x: number): number {\n    return 1 - Math.pow(1 - x, 5)\n}\n\nexport function tgdEasingFunctionInOutQuint(x: number): number {\n    return x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2\n}\n\nexport function tgdEasingFunctionInExpo(x: number): number {\n    return x === 0 ? 0 : Math.pow(2, 10 * x - 10)\n}\n\nexport function tgdEasingFunctionOutExpo(x: number): number {\n    return x === 1 ? 1 : 1 - Math.pow(2, -10 * x)\n}\n\nexport function tgdEasingFunctionInOutExpo(x: number): number {\n    return x === 0\n        ? 0\n        : x === 1\n        ? 1\n        : x < 0.5\n        ? Math.pow(2, 20 * x - 10) / 2\n        : (2 - Math.pow(2, -20 * x + 10)) / 2\n}\n\nexport function tgdEasingFunctionInCirc(x: number): number {\n    return 1 - Math.sqrt(1 - Math.pow(x, 2))\n}\n\nexport function tgdEasingFunctionOutCirc(x: number): number {\n    return Math.sqrt(1 - Math.pow(x - 1, 2))\n}\n\nexport function tgdEasingFunctionInOutCirc(x: number): number {\n    return x < 0.5\n        ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n        : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2\n}\n\nexport function tgdEasingFunctionInBack(x: number): number {\n    const c1 = 1.70158\n    const c3 = c1 + 1\n\n    return c3 * x * x * x - c1 * x * x\n}\n\nexport function tgdEasingFunctionOutBack(x: number): number {\n    const c1 = 1.70158\n    const c3 = c1 + 1\n\n    return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2)\n}\n\nexport function tgdEasingFunctionInOutBack(x: number): number {\n    const c1 = 1.70158\n    const c2 = c1 * 1.525\n\n    return x < 0.5\n        ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n        : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2\n}\n\nexport function tgdEasingFunctionInElastic(x: number): number {\n    const c4 = (2 * Math.PI) / 3\n\n    return x === 0\n        ? 0\n        : x === 1\n        ? 1\n        : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4)\n}\n\nexport function tgdEasingFunctionOutElastic(x: number): number {\n    const c4 = (2 * Math.PI) / 3\n\n    return x === 0\n        ? 0\n        : x === 1\n        ? 1\n        : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1\n}\n\nexport function tgdEasingFunctionInOutElastic(x: number): number {\n    const c5 = (2 * Math.PI) / 4.5\n\n    return x === 0\n        ? 0\n        : x === 1\n        ? 1\n        : x < 0.5\n        ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n        : (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1\n}\n\nexport function tgdEasingFunctionInBounce(x: number): number {\n    return 1 - tgdEasingFunctionOutBounce(1 - x)\n}\n\nexport function tgdEasingFunctionOutBounce(x: number): number {\n    const n1 = 7.5625\n    const d1 = 2.75\n\n    if (x < 1 / d1) {\n        return n1 * x * x\n    } else if (x < 2 / d1) {\n        return n1 * (x -= 1.5 / d1) * x + 0.75\n    } else if (x < 2.5 / d1) {\n        return n1 * (x -= 2.25 / d1) * x + 0.9375\n    } else {\n        return n1 * (x -= 2.625 / d1) * x + 0.984375\n    }\n}\n\nexport function tgdEasingFunctionInOutBounce(x: number): number {\n    return x < 0.5\n        ? (1 - tgdEasingFunctionOutBounce(1 - 2 * x)) / 2\n        : (1 + tgdEasingFunctionOutBounce(2 * x - 1)) / 2\n}\n","export * from \"./ease-func\"\n","/**\n * Check if an element is in fullscreen or not.\n * @returns `true` if `elem` is displayed in fullscreen.\n */\nexport function tgdFullscreenTest(elem: Element | null): boolean {\n    const root = document.fullscreenElement\n    if (!elem || !root) return false\n\n    let parent = elem.parentElement\n    while (parent) {\n        if (parent === document.fullscreenElement) {\n            return (\n                root.clientWidth === elem.clientWidth &&\n                root.clientHeight === elem.clientHeight\n            )\n        }\n        parent = parent.parentElement\n    }\n    return document.fullscreenElement === elem\n}\n\n/**\n * Request for an element to go fullscreen.\n * @returns `true` in case of success.\n */\nexport async function tgdFullscreenRequest(\n    element: Element | null,\n    options: FullscreenOptions = {\n        navigationUI: \"hide\",\n    }\n): Promise<boolean> {\n    if (!element) return false\n\n    try {\n        await element.requestFullscreen(options)\n        return true\n    } catch (ex) {\n        return false\n    }\n}\n\n/**\n * Exit fullscreen mode.\n * @returns `true` in case of success.\n */\nexport async function tgdFullscreenExit(): Promise<boolean> {\n    if (!document.fullscreenElement) return false\n\n    try {\n        await document.exitFullscreen()\n        return true\n    } catch (ex) {\n        return false\n    }\n}\n\n/**\n * If `element` is not in fullscreen mode, request it.\n * Otherwise, exit from fullscreen mode.\n */\nexport async function tgdFullscreenToggle(\n    element: Element | null,\n    options: FullscreenOptions = {\n        navigationUI: \"hide\",\n    }\n): Promise<boolean> {\n    if (!element) return false\n\n    return tgdFullscreenTest(element)\n        ? tgdFullscreenExit()\n        : tgdFullscreenRequest(element, options)\n}\n","export * from \"./action\"\nexport * from \"./canvas\"\nexport * from \"./ease-func\"\nexport * from \"./fetch\"\nexport * from \"./fullscreen\"\n","import { TgdLoaderImage } from \"@tgd/loader\";\nimport { TgdEvent } from \"@tgd/event/event\";\nimport {\n  TgdProgram,\n  TgdTexture2D,\n  TgdTexture2DOptions,\n  TgdContextInterface,\n  WebglImage,\n  WebglTexParameter,\n} from \"@tgd/types\";\nimport { tgdCanvasCreateWithContext2D } from \"@tgd/utils\";\nimport { clamp } from \"../utils/math\";\n\nexport class TgdTexture2DImpl implements TgdTexture2D {\n  public readonly glTexture: WebGLTexture;\n  public readonly eventImageUpdate = new TgdEvent<TgdTexture2D>();\n\n  private readonly options: TgdTexture2DOptions;\n  private _width = 0;\n  private _height = 0;\n  private _image: null | WebglImage = null;\n\n  constructor(\n    public readonly context: TgdContextInterface,\n    public readonly id: string,\n    options: Partial<TgdTexture2DOptions> = {}\n  ) {\n    const { gl } = context;\n    this.options = {\n      wrapS: \"REPEAT\",\n      wrapT: \"REPEAT\",\n      wrapR: \"REPEAT\",\n      minFilter: \"NEAREST_MIPMAP_LINEAR\",\n      magFilter: \"LINEAR\",\n      width: 1,\n      height: 1,\n      internalFormat: \"RGBA\",\n      ...options,\n    };\n    const texture = gl.createTexture();\n    if (!texture) throw Error(\"Unable to create a WebGLTexture!\");\n\n    this.glTexture = texture;\n    const {\n      wrapS = \"CLAMP_TO_EDGE\",\n      wrapT = \"CLAMP_TO_EDGE\",\n      wrapR = \"CLAMP_TO_EDGE\",\n      minFilter = \"LINEAR\",\n      magFilter = \"LINEAR\",\n      generateMipMap = false,\n      width = 1,\n      height = 1,\n      internalFormat = \"RGBA\",\n      data,\n    } = this.options;\n    const format = this.options.format ?? internalFormat;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl[internalFormat],\n      width,\n      height,\n      0,\n      gl[format],\n      gl.UNSIGNED_BYTE,\n      data ?? null\n    );\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl[wrapS]);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl[wrapT]);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_R, gl[wrapR]);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl[minFilter]);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl[magFilter]);\n    if (options.image) this.loadImage(options.image);\n    else if (generateMipMap) gl.generateMipmap(gl.TEXTURE_2D);\n  }\n\n  getParameter(param: WebglTexParameter): number | boolean | null {\n    const { context, glTexture } = this;\n    const { gl } = context;\n    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n    const value = gl.getTexParameter(gl.TEXTURE_2D, gl[param]) as\n      | number\n      | boolean\n      | null;\n    return value;\n  }\n\n  makePalette(colors: string[], columns = 1) {\n    const width = clamp(columns, 1, colors.length);\n    const height = Math.ceil(colors.length / width);\n    const { canvas, ctx } = tgdCanvasCreateWithContext2D(width, height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        ctx.fillStyle = colors[i++];\n        ctx.fillRect(x, y, 1, 1);\n      }\n    }\n    this.loadImage(canvas);\n  }\n\n  fillHorizontalGradient(size: number, ...colors: string[]): void {\n    this.fillGradient(size, 1, 1, 0, ...colors);\n  }\n\n  fillverticalGradient(size: number, ...colors: string[]): void {\n    this.fillGradient(1, size, 0, 1, ...colors);\n  }\n\n  private fillGradient(\n    width: number,\n    height: number,\n    dirX: number,\n    dirY: number,\n    ...colors: string[]\n  ) {\n    const { canvas, ctx } = tgdCanvasCreateWithContext2D(width, height);\n    const gradient = ctx.createLinearGradient(\n      0,\n      0,\n      width * dirX,\n      height * dirY\n    );\n    for (let i = 0; i < colors.length; i++) {\n      gradient.addColorStop(i / (colors.length - 1), colors[i]);\n    }\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, width, height);\n    this.loadImage(canvas);\n\n    canvas.style.position = \"fixed\";\n  }\n\n  delete() {\n    this.context.gl.deleteTexture(this.glTexture);\n  }\n\n  get image() {\n    return this._image;\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  bind() {\n    const { gl } = this.context;\n    gl.bindTexture(gl.TEXTURE_2D, this.glTexture);\n  }\n\n  activate(program: TgdProgram, uniformName: string, slot = 0) {\n    const { context, glTexture } = this;\n    const { gl } = context;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n    program.uniform1i(uniformName, slot);\n  }\n\n  loadImage(\n    image:\n      | string\n      | ImageData\n      | HTMLImageElement\n      | HTMLCanvasElement\n      | HTMLVideoElement\n      | ImageBitmap\n  ) {\n    if (typeof image === \"string\") {\n      TgdLoaderImage.image(image)\n        .then((img) => {\n          if (img) {\n            this.loadImage(img);\n            this.context.paint();\n          } else {\n            console.error(\"[TgdTexture2D] Unable to load image:\", image);\n          }\n        })\n        .catch(console.error);\n      return;\n    }\n\n    const { context, glTexture: texture } = this;\n    const { gl } = context;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    this._width = image.width;\n    this._height = image.height;\n    this._image = image;\n    this.eventImageUpdate.dispatch(this);\n  }\n}\n","import { TgdLoaderImage } from \"@tgd/loader\"\nimport {\n    TgdProgram,\n    TgdTextureCube,\n    TgdTextureCubeOptions,\n    WebglImage,\n    TgdContextInterface,\n} from \"@tgd/types\"\n\nexport class TgdTextureCubeImpl implements TgdTextureCube {\n    public readonly texture: WebGLTexture\n\n    private _width = 0\n    private _height = 0\n    private numberOfImagesToLoad = 6\n\n    constructor(\n        public readonly context: TgdContextInterface,\n        options: TgdTextureCubeOptions\n    ) {\n        const { gl } = context\n        const texture = gl.createTexture()\n        if (!texture) throw Error(\"Unable to create a WebGLTexture!\")\n\n        this.texture = texture\n        this.loadImage(gl.TEXTURE_CUBE_MAP_POSITIVE_X, options.imagePosX)\n        this.loadImage(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, options.imageNegX)\n        this.loadImage(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, options.imagePosY)\n        this.loadImage(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, options.imageNegY)\n        this.loadImage(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, options.imagePosZ)\n        this.loadImage(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, options.imageNegZ)\n    }\n\n    delete() {\n        this.context.gl.deleteTexture(this.texture)\n    }\n\n    get ready() {\n        return this.numberOfImagesToLoad === 0\n    }\n\n    get width() {\n        return this._width\n    }\n\n    get height() {\n        return this._height\n    }\n\n    bind() {\n        const { gl } = this.context\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.texture)\n    }\n\n    activate(program: TgdProgram, uniformName: string, slot = 0) {\n        if (!this.ready) return\n\n        const { context, texture } = this\n        const { gl } = context\n        gl.activeTexture(gl.TEXTURE0 + slot)\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture)\n        program.uniform1i(uniformName, slot)\n    }\n\n    private loadImage(target: number, image: string | WebglImage) {\n        if (typeof image === \"string\") {\n            TgdLoaderImage.image(image)\n                .then(img => {\n                    if (img) {\n                        this.loadImage(target, img)\n                    } else {\n                        console.error(\n                            `[TgdTextureCube] Unable to load image \"${image}\":`,\n                            image\n                        )\n                    }\n                })\n                .catch(ex => {\n                    console.error(\n                        `[TgdTextureCube] Unable to load image \"${image}\":`,\n                        ex\n                    )\n                })\n            return\n        }\n\n        const { width, height } = image\n        if (width !== height) {\n            throw Error(\n                `Images in a CubeMap must be squares, but we got ${width}×${height}!`\n            )\n        }\n        if (this._width === 0) {\n            this._width = width\n            this._height = height\n        } else if (this._width !== width || this._height !== height) {\n            throw Error(\n                `Images in a CubeMap must all have the same size, but we got ${this._width}×${this._height} and ${width}×${height}!`\n            )\n        }\n        const { context, texture } = this\n        const { gl } = context\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture)\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, image instanceof Image)\n        gl.texImage2D(target, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image)\n        this.numberOfImagesToLoad--\n        if (this.numberOfImagesToLoad === 0) {\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP)\n            gl.texParameteri(\n                gl.TEXTURE_CUBE_MAP,\n                gl.TEXTURE_MIN_FILTER,\n                gl.LINEAR_MIPMAP_LINEAR\n            )\n            context.paint()\n        }\n    }\n}\n","export * from \"./texture2d\"\nexport * from \"./textureCube\"\n","import { TgdResource } from \"@tgd/resource/resource\"\nimport { TgdTexture2DImpl } from \"@tgd/texture\"\nimport {\n    TgdTexture2D,\n    TgdTexture2DOptions,\n    TgdContextInterface,\n} from \"@tgd/types\"\n\nexport class TgdResourceTexture2D extends TgdResource<\n    Partial<TgdTexture2DOptions>,\n    TgdTexture2D\n> {\n    constructor(private readonly context: TgdContextInterface) {\n        super()\n    }\n\n    getDefaultEmpty(): TgdTexture2D {\n        return this.create({ width: 1, height: 1 }, \"@tgd/DefaultTexture2D\")\n    }\n\n    protected actualCreate(\n        input: Partial<TgdTexture2DOptions>,\n        id: string\n    ): TgdTexture2D {\n        return new TgdTexture2DImpl(this.context, id, input)\n    }\n\n    protected actualDelete(object: TgdTexture2D): void {\n        if (object instanceof TgdTexture2DImpl) object.delete()\n    }\n}\n","import { TgdResource } from \"@tgd/resource/resource\"\nimport { TgdTextureCubeImpl } from \"@tgd/texture\"\nimport {\n    TgdTextureCube,\n    TgdTextureCubeOptions,\n    TgdContextInterface,\n} from \"@tgd/types\"\n\nexport class TgdResourceTextureCube extends TgdResource<\n    TgdTextureCubeOptions,\n    TgdTextureCube\n> {\n    constructor(public readonly context: TgdContextInterface) {\n        super()\n    }\n\n    protected actualCreate(input: TgdTextureCubeOptions): TgdTextureCube {\n        return new TgdTextureCubeImpl(this.context, input)\n    }\n\n    protected actualDelete(object: TgdTextureCube): void {\n        if (object instanceof TgdTextureCubeImpl) object.delete()\n    }\n}\n","export * from \"./program\"\nexport * from \"./resource\"\nexport * from \"./texture2d\"\nexport * from \"./textureCube\"\n","import { TgdBuffer } from \"@tgd/buffer\"\nimport { TgdDataset } from \"@tgd/dataset\"\nimport { TgdProgram } from \"@tgd/types\"\n\nexport class TgdVertexArray {\n    public readonly vao: WebGLVertexArrayObject\n\n    private readonly drawBuffers: TgdBuffer[] = []\n    private readonly elemBuffer: TgdBuffer | null = null\n\n    constructor(\n        public readonly gl: WebGL2RenderingContext,\n        program?: TgdProgram,\n        private readonly datasets?: Readonly<TgdDataset>[],\n        elements?: BufferSource | Uint8Array | Uint16Array | Uint32Array\n    ) {\n        const vao = gl.createVertexArray()\n        if (!vao) throw Error(\"Unable to create VertexArrayObject!\")\n\n        this.vao = vao\n        if (!program || !datasets) return\n\n        gl.bindVertexArray(vao)\n        this.drawBuffers = datasets.map(dataset => {\n            const buffer = new TgdBuffer(gl, dataset.data, {\n                target: dataset.target,\n                usage: dataset.usage,\n            })\n            buffer.bind()\n            dataset.defineAttributes(gl, program)\n            return buffer\n        })\n        if (elements) {\n            const buffer = new TgdBuffer(gl, elements, {\n                target: \"ELEMENT_ARRAY_BUFFER\",\n            })\n            buffer.bind()\n            this.elemBuffer = buffer\n        }\n        gl.bindVertexArray(null)\n    }\n\n    toCode({ indent = \"\" }: Partial<{ indent: string }> = {}) {\n        const lines: string[] = [\n            \"function createVAO(\",\n            `  gl: WebGL2RenderingContext,`,\n            `  prg: WebGLProgram${this.datasets\n                ?.map((ds, index) => `, data${index}: ArrayBuffer`)\n                .join(\"\")}`,\n            \") {\",\n            \"  const vao = gl.createVertexArray()\",\n            \"  gl.bindVertexArray(vao)\",\n        ]\n        this.datasets?.forEach((dataset, index) => {\n            lines.push(\n                `  const buff${index} = gl.createBuffer()`,\n                `  gl.bindBuffer(gl.${dataset.target}, buff${index})`,\n                `  gl.bufferData(gl.${dataset.target}, data${index}, gl.${dataset.usage})`,\n                dataset.toCode({ indent: `${indent}  ` })\n            )\n        })\n        lines.push(\"  return vao\", \"}\")\n        return lines.map(line => `${indent}${line}`).join(\"\\n\")\n    }\n\n    bind() {\n        this.gl.bindVertexArray(this.vao)\n    }\n\n    unbind() {\n        this.gl.bindVertexArray(null)\n    }\n\n    delete() {\n        const { gl, vao, drawBuffers, elemBuffer } = this\n        gl.deleteVertexArray(vao)\n        drawBuffers.forEach(buff => buff.delete())\n        if (elemBuffer) elemBuffer.delete()\n    }\n}\n","import { TgdPainterFunction } from \"@tgd/types/painter\"\nimport { TgdPainter } from \"./painter\"\n\nexport type TgdPainterGroupOptions = {\n    onEnter?(time: number, delay: number): void\n    onExit?(time: number, delay: number): void\n}\n\n/**\n * Group several painters together.\n */\nexport class TgdPainterGroup extends TgdPainter {\n    public active = true\n    public onEnter: TgdPainterFunction | undefined\n    public onExit: TgdPainterFunction | undefined\n    private readonly painters: TgdPainter[]\n\n    constructor(\n        painters: TgdPainter[] = [],\n        { onEnter, onExit }: TgdPainterGroupOptions = {}\n    ) {\n        super()\n        this.onEnter = onEnter\n        this.onExit = onExit\n        this.painters = [...painters]\n    }\n\n    forEachChild(callback: (child: TgdPainter, index: number) => void) {\n        this.painters.forEach((child, index) => callback(child, index))\n    }\n\n    has(painter: TgdPainter): boolean {\n        return this.painters.includes(painter)\n    }\n\n    add(...painters: TgdPainter[]) {\n        for (const painter of painters) {\n            this.painters.push(painter)\n        }\n    }\n\n    remove(...painters: TgdPainter[]) {\n        for (const painter of painters) {\n            const index = this.painters.indexOf(painter)\n            if (index < 0) continue\n\n            this.painters.splice(index, 1)\n            painter.delete()\n        }\n    }\n\n    removeAll() {\n        for (const painter of this.painters) {\n            painter.delete()\n        }\n        this.painters.splice(0, this.painters.length)\n    }\n\n    delete(): void {\n        for (const painter of this.painters) {\n            painter.delete()\n        }\n        this.painters.splice(0, this.painters.length)\n    }\n\n    paint(time: number, delay: number): void {\n        if (!this.active) return\n\n        this.onEnter?.(time, delay)\n        for (const painter of this.painters) {\n            if (painter.active) painter.paint(time, delay)\n        }\n        this.onExit?.(time, delay)\n    }\n}\n","import { TgdAnimation } from \"@tgd/types/animation\"\n\ninterface Animation {\n    start: number\n    duration: number\n    inverseDuration: number\n    action(this: void, t: number): void\n    loop: number\n    repeat: number\n    cancel(this: void): void\n}\n\nexport class TgdManagerAnimation {\n    private readonly animations = new Map<TgdAnimation, Animation>()\n\n    schedule(animation: TgdAnimation): TgdAnimation {\n        const { action, duration, easingFunction, repeat } = animation\n        this.animations.set(animation, {\n            start: -1,\n            duration: duration,\n            inverseDuration: 1 / duration,\n            action: easingFunction\n                ? (alpha: number) => action(easingFunction(alpha))\n                : action,\n            loop: 1,\n            repeat: repeat ?? 1,\n            cancel: () => this.cancel(animation),\n        })\n        return animation\n    }\n\n    cancel(animation: TgdAnimation) {\n        this.animations.delete(animation)\n    }\n\n    paint(time: number): boolean {\n        if (this.animations.size === 0) return false\n\n        for (const anim of this.animations.values()) {\n            if (anim.start < 0) {\n                // Initialize animation.\n                anim.start = time\n            }\n            const t = Math.min(1, anim.inverseDuration * (time - anim.start))\n            anim.action(t)\n            if (time > anim.start + anim.duration) {\n                anim.loop++\n            }\n            if (anim.loop > anim.repeat) {\n                anim.cancel()\n            }\n        }\n        return true\n    }\n}\n","import { TgdBuffer, TgdBufferOptions } from \"@tgd/buffer\";\nimport { TgdCamera, TgdCameraPerspective } from \"@tgd/camera\";\nimport { TgdDataset } from \"@tgd/dataset\";\nimport { TgdInputs } from \"@tgd/input\";\nimport {\n  TgdResourceProgram,\n  TgdResourceTexture2D,\n  TgdResourceTextureCube,\n} from \"@tgd/resource\";\nimport { TgdContextInterface, TgdProgram } from \"@tgd/types\";\nimport { TgdPainterFunction as TgdPainterFunctionType } from \"@tgd/types/painter\";\nimport { TgdVertexArray } from \"@tgd/vao\";\nimport { TgdPainterGroup } from \"../painter/group\";\nimport { TgdPainter } from \"../painter/painter\";\nimport { tgdCanvasCreate } from \"../utils\";\nimport { TgdManagerAnimation } from \"./animation/animation-manager\";\nimport { TgdAnimation } from \"../types/animation\";\nimport { TgdEvent } from \"../event\";\n\n/**\n * You can pass all the attributes of the [WebGLContextAttributes](https://developer.mozilla.org/en-US/docs/Web/API/WebGLContextAttributes)\n * object.\n * @see {@link TgdContext}\n */\nexport type TgdContextOptions = WebGLContextAttributes & {\n  /**\n   * You can override the behaviour for when a resize even occurs,\n   * by providing a callback `onResize(...)`.\n   *\n   * By default, this is what will happen:\n   * ```\n   * gl.canvas.width = width\n   * gl.canvas.height = height\n   * gl.viewport(0, 0, width, height)\n   * ```\n   */\n  onResize?(\n    this: void,\n    context: TgdContextInterface,\n    width: number,\n    height: number\n  ): void;\n  name?: string;\n  camera?: TgdCamera;\n};\n\n/**\n * This class gives you a [WebGL2RenderingContext](https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext) for a given canvas,\n * through its public readonly attribute `gl`.\n *\n * It also acts as a resource manager for most of the WebGL2 reources you need.\n *\n * @example\n * ```\n * import { TgdContext, TgdPainterClear } from \"@tgd\"\n *\n * export function paint(canvas: HTMLCanvasElement) {\n *     const ctx = new TgdContext(canvas)\n *     const clear = new TgdPainterClear(ctx, { color: [1, 0.667, 0, 1] })\n *     ctx.add(clear)\n *     ctx.paint()\n * }\n * ```\n */\nexport class TgdContext implements TgdContextInterface {\n  private static incrementalId = 1;\n\n  public readonly eventResize = new TgdEvent<TgdContextInterface>();\n  public readonly name: string;\n  public readonly gl: WebGL2RenderingContext;\n  public readonly inputs: TgdInputs;\n  /**\n   * Resource manager for WebGLProgram.\n   */\n  public readonly programs: TgdResourceProgram;\n  public readonly textures2D: TgdResourceTexture2D;\n\n  private _texturesCube: TgdResourceTextureCube | null = null;\n  private _camera: TgdCamera;\n  private readonly observer: ResizeObserver;\n  private readonly painters: TgdPainterGroup;\n  private isPlaying = false;\n  private requestAnimationFrame = -1;\n  // Last time the context has been painted.\n  private lastTime = -1;\n  private readonly animationManager = new TgdManagerAnimation();\n\n  /**\n   * @param canvas The canvas to which attach a WebGL2 context.\n   * @see {@link TgdContextOptions}\n   */\n  constructor(\n    public readonly canvas: HTMLCanvasElement,\n    private readonly options: TgdContextOptions = {}\n  ) {\n    const gl = canvas.getContext(\"webgl2\", options);\n    if (!gl) throw Error(\"Unable to create a WebGL2 context!\");\n\n    this.gl = gl;\n    this.programs = new TgdResourceProgram(gl);\n    this.textures2D = new TgdResourceTexture2D(this);\n    this.observer = new ResizeObserver(() => {\n      const width = canvas.clientWidth;\n      const height = canvas.clientHeight;\n      canvas.width = width;\n      canvas.height = height;\n      gl.viewport(0, 0, width, height);\n      this.paint();\n      options.onResize?.(this, canvas.clientWidth, canvas.clientHeight);\n      this.eventResize.dispatch(this);\n    });\n    this.observer.observe(canvas);\n    this.inputs = new TgdInputs(canvas);\n    this._camera = options.camera ?? new TgdCameraPerspective();\n    this.painters = new TgdPainterGroup();\n    this.name = options.name ?? `TgdContext#${TgdContext.incrementalId++}`;\n    // Prevent system gestures.\n    canvas.style.touchAction = \"none\";\n  }\n\n  get camera() {\n    return this._camera;\n  }\n\n  set camera(camera: TgdCamera) {\n    if (camera === this._camera) return;\n\n    this._camera.eventTransformChange.removeListener(this.paint);\n    camera.eventTransformChange.addListener(this.paint);\n    this._camera = camera;\n    this.paint();\n  }\n\n  get texturesCube(): TgdResourceTextureCube {\n    if (!this._texturesCube) {\n      this._texturesCube = new TgdResourceTextureCube(this);\n    }\n    return this._texturesCube;\n  }\n\n  animSchedule(animation: TgdAnimation): TgdAnimation {\n    const result = this.animationManager.schedule(animation);\n    this.paint();\n    return result;\n  }\n\n  animCancel(animation: TgdAnimation) {\n    this.animationManager.cancel(animation);\n  }\n\n  get onEnter(): TgdPainterFunctionType | undefined {\n    return this.painters.onEnter;\n  }\n  set onEnter(v: TgdPainterFunctionType | undefined) {\n    this.painters.onEnter = v;\n  }\n\n  get onExit(): TgdPainterFunctionType | undefined {\n    return this.painters.onExit;\n  }\n  set onExit(v: TgdPainterFunctionType | undefined) {\n    this.painters.onExit = v;\n  }\n\n  get width() {\n    return this.gl.drawingBufferWidth;\n  }\n\n  get height() {\n    return this.gl.drawingBufferHeight;\n  }\n\n  /**\n   * Is the animation playing?\n   */\n  get playing() {\n    return this.isPlaying;\n  }\n  /**\n   * If `playing` is true, the method `paint()` will be called\n   * for every animation frame.\n   * @see paint()\n   */\n  set playing(value: boolean) {\n    if (value === this.isPlaying) return;\n\n    if (value) this.paint();\n    this.isPlaying = value;\n  }\n\n  /**\n   * Start the animation.\n   * You can achieve the same result with `context.playing = true`.\n   *\n   * @see playing\n   */\n  play() {\n    this.playing = true;\n  }\n\n  /**\n   * Pause the animation.\n   * You can achieve the same result with `context.playing = false`.\n   *\n   * @see playing\n   */\n  pause() {\n    this.playing = false;\n  }\n\n  /**\n   * Check if `painter` already exist in the current list of painters.\n   */\n  has(painter: TgdPainter): boolean {\n    return this.painters.has(painter);\n  }\n\n  /**\n   * Add one or more painters.\n   */\n  add(...painters: TgdPainter[]) {\n    this.painters.add(...painters);\n  }\n\n  /**\n   * Remove one or more painters.\n   * */\n  remove(...painters: TgdPainter[]) {\n    this.painters.remove(...painters);\n  }\n\n  removeAll() {\n    this.painters.removeAll();\n  }\n\n  createBuffer(\n    data?: BufferSource,\n    options?: Partial<TgdBufferOptions>\n  ): TgdBuffer {\n    return new TgdBuffer(this.gl, data, options);\n  }\n\n  createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) throw Error(\"Unable to create a WebGL2 Framebuffer!\");\n\n    return fb;\n  }\n\n  createVAO(\n    program?: TgdProgram,\n    datasets?: Readonly<TgdDataset>[],\n    elements?: Uint8Array | Uint16Array | Uint32Array | BufferSource\n  ): TgdVertexArray {\n    return new TgdVertexArray(this.gl, program, datasets, elements);\n  }\n\n  takeSnapshot(target: HTMLCanvasElement) {\n    const ctx = target.getContext(\"2d\");\n    if (!ctx)\n      throw Error(\n        \"[TgdContext.takeSnapshot] We cannot get a 2D context for the target canvas! Maybe it already has another type of context.\"\n      );\n\n    const { width, height } = target;\n    const canvas = tgdCanvasCreate(width, height);\n    const context = new TgdContext(canvas, this.options);\n    this.painters.forEachChild((painter) => context.add(painter));\n    context.actualPaint(this.lastTime);\n    context.gl.finish();\n    ctx.drawImage(canvas, 0, 0);\n  }\n\n  lookupWebglConstant(value: number): string {\n    const { gl } = this;\n    for (const key in gl) {\n      if (gl[key as keyof WebGL2RenderingContext] === value) return key;\n    }\n    return `Unknown gl[${value}]`;\n  }\n\n  /**\n   * Trigger the painters to render the scene.\n   */\n  readonly paint = () => {\n    window.cancelAnimationFrame(this.requestAnimationFrame);\n    this.requestAnimationFrame = window.requestAnimationFrame(this.actualPaint);\n  };\n\n  private readonly actualPaint = (time: number) => {\n    const { lastTime, gl } = this;\n    if (lastTime < 0) {\n      this.lastTime = time;\n      // First frame, let's skip it to get better timing.\n      this.paint();\n      return;\n    }\n\n    const delay = time - this.lastTime;\n    this.lastTime = time;\n    this._camera.screenWidth = gl.drawingBufferWidth;\n    this._camera.screenHeight = gl.drawingBufferHeight;\n    this.painters.paint(time, delay);\n    if (this.animationManager.paint(time) || this.isPlaying) this.paint();\n  };\n\n  destroy() {\n    window.cancelAnimationFrame(this.requestAnimationFrame);\n    this.playing = false;\n    this.painters.delete();\n    this.observer.unobserve(this.canvas);\n  }\n\n  // eslint-disable-next-line max-statements\n  stateReset() {\n    const { gl } = this;\n    const numAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS) as number;\n    const tmp = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, tmp);\n    for (let ii = 0; ii < numAttribs; ++ii) {\n      gl.disableVertexAttribArray(ii);\n      gl.vertexAttribPointer(ii, 4, gl.FLOAT, false, 0, 0);\n      gl.vertexAttrib1f(ii, 0);\n    }\n    gl.deleteBuffer(tmp);\n\n    const numTextureUnits: number = gl.getParameter(\n      gl.MAX_TEXTURE_IMAGE_UNITS\n    ) as number;\n    for (let ii = 0; ii < numTextureUnits; ++ii) {\n      gl.activeTexture(gl.TEXTURE0 + ii);\n      gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.useProgram(null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.disable(gl.BLEND);\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.DITHER);\n    gl.disable(gl.SCISSOR_TEST);\n    gl.blendColor(0, 0, 0, 0);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFunc(gl.ONE, gl.ZERO);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clearDepth(1);\n    gl.clearStencil(-1);\n    gl.colorMask(true, true, true, true);\n    gl.cullFace(gl.BACK);\n    gl.depthFunc(gl.LESS);\n    gl.depthMask(true);\n    gl.depthRange(0, 1);\n    gl.frontFace(gl.CCW);\n    gl.hint(gl.GENERATE_MIPMAP_HINT, gl.DONT_CARE);\n    gl.lineWidth(1);\n    gl.pixelStorei(gl.PACK_ALIGNMENT, 4);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n    gl.polygonOffset(0, 0);\n    gl.sampleCoverage(1, false);\n    gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\n    gl.stencilMask(0xffffffff);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n\n    return gl;\n  }\n}\n","export * from \"./context\"\n","import { TgdAnimation } from \"@tgd/types/animation\"\nimport { tgdEasingFunctionOutQuad } from \"@tgd/utils\"\nimport { clamp } from \"@tgd/utils/math\"\nimport {\n    TgdContextInterface,\n    TgdInputPointerEventMove,\n    TgdInputPointerModifierKeys,\n    TgdInputPointerEventZoom,\n} from \"@tgd/types\"\nimport { TgdEvent } from \"@tgd/event\"\nimport { TgdCamera } from \"@tgd/camera\"\n\nexport interface TgdControllerCameraOrbitZoomRequest\n    extends TgdInputPointerModifierKeys {\n    x: number\n    y: number\n}\n\nexport interface TgdControllerCameraOrbitOptions {\n    minZoom: number\n    maxZoom: number\n    speedOrbit: number\n    speedZoom: number\n    speedPanning: number\n    /**\n     * Time in msec during which the orbiting continues\n     * after the pointer stop touching.\n     */\n    inertiaOrbit: number\n    /**\n     * Time in msec during which the zooming continues\n     * after the pointer stop touching.\n     *\n     * Default to 0.\n     */\n    inertiaZoom: number\n    /**\n     * Time in msec during which the panning continues\n     * after the pointer stop touching.\n     *\n     * Default to 0.\n     */\n    inertiaPanning: number\n    /**\n     * If `true`, pannig will only act on `camera.shift`,\n     * not on `camera.target`.\n     *\n     * Default to 0.\n     */\n    fixedTarget: boolean\n    /**\n     * Zooming can be done by the mouse wheel.\n     * In this case, we may want to prevent it when the\n     * canvas is not in fullscreen, to let the rest of\n     * the page to scroll.\n     *\n     * This function, if defined, will be called just\n     * before the zoom event. If it returns `false`,\n     * the event is not dispatched.\n     */\n    onZoomRequest(this: void, evt: TgdControllerCameraOrbitZoomRequest): boolean\n}\n\nexport class TgdControllerCameraOrbit {\n    public readonly eventChange = new TgdEvent<TgdCamera>()\n    public minZoom = 1e-3\n    public maxZoom = Infinity\n    /**\n     * The camera will only move if `enabled === true`.\n     */\n    public enabled = true\n    public speedZoom = 1\n    public speedOrbit = 1\n    public speedPanning = 1\n    public inertiaZoom = 0\n    public inertiaOrbit = 0\n    public inertiaPanning = 0\n    /**\n     * If `true`, pannig will only act on `camera.shift`,\n     * not on `camera.target`.\n     */\n    public fixedTarget = false\n    /**\n     * Zooming can be done by the mouse wheel.\n     * In this case, we may want to prevent it when the\n     * canvas is not in fullscreen, to let the rest of\n     * the page to scroll.\n     *\n     * This function, if defined, will be called just\n     * before the zoom event. If it returns `false`,\n     * the event is not dispatched.\n     */\n    public onZoomRequest: (\n        this: void,\n        evt: TgdControllerCameraOrbitZoomRequest\n    ) => boolean\n\n    private animOrbit: TgdAnimation | null = null\n\n    constructor(\n        private readonly context: TgdContextInterface,\n        {\n            minZoom = 1e-3,\n            maxZoom = Infinity,\n            speedZoom = 1,\n            speedOrbit = 1,\n            speedPanning = 1,\n            inertiaZoom = 0,\n            inertiaOrbit = 0,\n            inertiaPanning = 0,\n            fixedTarget = false,\n            onZoomRequest = alwaysTrue,\n        }: Partial<TgdControllerCameraOrbitOptions> = {}\n    ) {\n        const { inputs } = context\n        inputs.pointer.eventMoveStart.addListener(this.handleMoveStart)\n        inputs.pointer.eventMoveEnd.addListener(this.handleMoveEnd)\n        inputs.pointer.eventMove.addListener(this.handleMove)\n        inputs.pointer.eventZoom.addListener(this.handleZoom)\n        this.speedOrbit = speedOrbit\n        this.speedZoom = speedZoom\n        this.speedPanning = speedPanning\n        this.inertiaOrbit = inertiaOrbit\n        this.inertiaZoom = inertiaZoom\n        this.inertiaPanning = inertiaPanning\n        this.fixedTarget = fixedTarget\n        this.minZoom = minZoom\n        this.maxZoom = maxZoom\n        this.onZoomRequest = onZoomRequest\n    }\n\n    detach() {\n        const { inputs } = this.context\n        inputs.pointer.eventMove.removeListener(this.handleMove)\n        inputs.pointer.eventZoom.removeListener(this.handleZoom)\n    }\n\n    private readonly handleMove = (evt: TgdInputPointerEventMove) => {\n        if (!this.enabled) return\n\n        const dt = evt.current.t - evt.previous.t\n        if (dt <= 0) return\n\n        const { context } = this\n        const { keyboard } = context.inputs\n        if (evt.altKey || evt.current.fingersCount === 2)\n            return this.handlePan(evt)\n\n        if (keyboard.isDown(\"z\")) return this.handleRotateAroundZ(evt)\n\n        this.orbit(\n            evt.current.x - evt.previous.x,\n            evt.current.y - evt.previous.y,\n            evt.shiftKey\n        )\n    }\n\n    private orbit(deltaX: number, deltaY: number, slowDown: boolean) {\n        const { context } = this\n        const { camera } = context\n        const { keyboard } = context.inputs\n        const speed = 3 * (slowDown ? 0.1 : 1) * this.speedOrbit\n        const dx = deltaX * speed\n        const dy = deltaY * speed\n        if (!keyboard.isDown(\"x\")) camera.orbitAroundY(-dx)\n        if (!keyboard.isDown(\"y\")) camera.orbitAroundX(dy)\n        this.fireOrbitChange()\n    }\n\n    private readonly handleMoveStart = () => {\n        if (!this.enabled) return\n\n        const { animOrbit, context } = this\n        if (animOrbit) context.animCancel(animOrbit)\n    }\n\n    private readonly handleMoveEnd = (evt: TgdInputPointerEventMove) => {\n        if (!this.enabled) return\n\n        const { context, inertiaOrbit } = this\n        if (inertiaOrbit > 0) {\n            const inverseDeltaTime =\n                inertiaOrbit / (evt.current.t - evt.previous.t)\n            const slowDown = evt.shiftKey\n            const dx = inverseDeltaTime * (evt.current.x - evt.previous.x)\n            const dy = inverseDeltaTime * (evt.current.y - evt.previous.y)\n            let previousAlpha = 0\n            this.animOrbit = {\n                duration: inertiaOrbit,\n                action: alpha => {\n                    const t = alpha - previousAlpha\n                    previousAlpha = alpha\n                    this.orbit(dx * t, dy * t, slowDown)\n                },\n                easingFunction: tgdEasingFunctionOutQuad,\n            }\n            context.animSchedule(this.animOrbit)\n        }\n    }\n\n    private handlePan(evt: TgdInputPointerEventMove) {\n        const { fixedTarget, speedPanning, context } = this\n        const { camera } = context\n        const inverseZoom = 1 / camera.zoom\n        const panSpeed = 0.5 * speedPanning * inverseZoom\n        const dx =\n            (evt.current.x - evt.previous.x) *\n            panSpeed *\n            camera.spaceWidthAtTarget\n        const dy =\n            (evt.current.y - evt.previous.y) *\n            panSpeed *\n            camera.spaceHeightAtTarget\n        if (fixedTarget) {\n            camera.moveShift(-dx, -dy, 0)\n        } else {\n            camera.moveTarget(-dx, -dy, 0)\n        }\n        this.fireOrbitChange()\n        return\n    }\n\n    private handleRotateAroundZ(evt: TgdInputPointerEventMove) {\n        const { camera } = this.context\n        const x1 = evt.previous.x\n        const y1 = evt.previous.y\n        if (Math.abs(x1) + Math.abs(y1) === 0) return\n\n        const x2 = evt.current.x\n        const y2 = evt.current.y\n        if (Math.abs(x2) + Math.abs(y2) === 0) return\n\n        const x = x1 * x2 + y1 * y2\n        const y = x1 * y2 - y1 * x2\n        const ang = Math.atan2(y, x) * this.speedOrbit\n        camera.orbitAroundZ(-ang)\n        this.fireOrbitChange()\n        return\n    }\n\n    private fireOrbitChange() {\n        this.context.paint()\n        this.eventChange.dispatch(this.context.camera)\n    }\n\n    private readonly handleZoom = (evt: TgdInputPointerEventZoom) => {\n        if (\n            !this.enabled ||\n            this.speedZoom === 0 ||\n            !this.onZoomRequest({\n                altKey: evt.altKey,\n                ctrlKey: evt.ctrlKey,\n                metaKey: evt.metaKey,\n                shiftKey: evt.shiftKey,\n                x: evt.current.x,\n                y: evt.current.y,\n            })\n        )\n            return\n\n        const { context } = this\n        const { camera } = context\n        let speed = 0.1 * this.speedZoom\n        if (this.context.inputs.keyboard.isDown(\"Shift\")) speed *= 0.1\n        const dz = -evt.direction * speed\n        camera.zoom = clamp(camera.zoom * (1 + dz), this.minZoom, this.maxZoom)\n        evt.preventDefault()\n        this.fireZoomChange()\n    }\n\n    private fireZoomChange() {\n        this.context.paint()\n    }\n}\n\n/**\n * Default function for `onZoomRequest`.\n */\nconst alwaysTrue = () => true\n","export * from \"./orbit\"\n","export * from \"./camera\"\n","export * from \"./event\"\n","export * from \"./camera\";\nexport * from \"./context\";\nexport * from \"./controller\";\nexport * from \"./dataset\";\nexport * from \"./event\";\nexport * from \"./math\";\nexport * from \"./painter\";\nexport * from \"./painter/painter\";\nexport * from \"./utils\";\nexport * from \"./vao\";\n\nexport * from \"./types\";\n","import { padColOfNumbers } from \"@tgd/debug\"\nimport { TgdMat3 } from \"./mat3\"\nimport { TgdQuat } from \"./quat\"\nimport { TgdVec3 } from \"./vec3\"\nimport { TgdVec4 } from \"./vec4\"\nimport { ArrayNumber16 } from \"..\"\n/**\n * Column-first 4x4 matrix.\n *\n * `m23` means column 2 and row 3.\n *\n * This is not the same as what mathematicians are used to,\n * but its how WebGL will store matrices in memory.\n */\nexport class TgdMat4 extends Float32Array {\n    constructor()\n    constructor(mat: TgdMat4)\n    constructor(\n        m00: number,\n        m01: number,\n        m02: number,\n        m03: number,\n        m10: number,\n        m11: number,\n        m12: number,\n        m13: number,\n        m20: number,\n        m21: number,\n        m22: number,\n        m23: number,\n        m30: number,\n        m31: number,\n        m32: number,\n        m33: number\n    )\n    constructor(\n        m00: number | TgdMat4 = 1,\n        m01: number = 0,\n        m02: number = 0,\n        m03: number = 0,\n        m10: number = 0,\n        m11: number = 1,\n        m12: number = 0,\n        m13: number = 0,\n        m20: number = 0,\n        m21: number = 0,\n        m22: number = 1,\n        m23: number = 0,\n        m30: number = 0,\n        m31: number = 0,\n        m32: number = 0,\n        m33: number = 1\n    ) {\n        if (typeof m00 === \"number\") {\n            super([\n                m00,\n                m01,\n                m02,\n                m03,\n                m10,\n                m11,\n                m12,\n                m13,\n                m20,\n                m21,\n                m22,\n                m23,\n                m30,\n                m31,\n                m32,\n                m33,\n            ])\n        } else {\n            super(m00)\n        }\n    }\n\n    multiply(mat4: TgdMat4): this {\n        // prettier-ignore\n        const [\n            a00, a01, a02, a03,\n            a10, a11, a12, a13,\n            a20, a21, a22, a23,\n            a30, a31, a32, a33,\n        ] = this\n        // prettier-ignore\n        const [\n            b00, b01, b02, b03,\n            b10, b11, b12, b13,\n            b20, b21, b22, b23,\n            b30, b31, b32, b33,\n        ] = mat4\n        this.m00 = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03\n        this.m10 = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13\n        this.m20 = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23\n        this.m30 = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33\n        this.m01 = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03\n        this.m11 = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13\n        this.m21 = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23\n        this.m31 = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33\n        this.m02 = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03\n        this.m12 = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13\n        this.m22 = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23\n        this.m32 = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33\n        this.m03 = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03\n        this.m13 = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13\n        this.m23 = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23\n        this.m33 = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33\n        return this\n    }\n\n    /**\n     * @param from This matrix will become the inversion of `from`.\n     * If not defined, the matrix will invert itself.\n     */\n    // eslint-disable-next-line max-statements\n    invert(from?: TgdMat4): this {\n        // prettier-ignore\n        const [\n            a00, a01, a02, a03,\n            a10, a11, a12, a13,\n            a20, a21, a22, a23,\n            a30, a31, a32, a33,\n        ] =from ?? this\n        const b00 = a00 * a11 - a01 * a10\n        const b01 = a00 * a12 - a02 * a10\n        const b02 = a00 * a13 - a03 * a10\n        const b03 = a01 * a12 - a02 * a11\n        const b04 = a01 * a13 - a03 * a11\n        const b05 = a02 * a13 - a03 * a12\n        const b06 = a20 * a31 - a21 * a30\n        const b07 = a20 * a32 - a22 * a30\n        const b08 = a20 * a33 - a23 * a30\n        const b09 = a21 * a32 - a22 * a31\n        const b10 = a21 * a33 - a23 * a31\n        const b11 = a22 * a33 - a23 * a32\n        // Calculate the determinant\n        const det =\n            b00 * b11 -\n            b01 * b10 +\n            b02 * b09 +\n            b03 * b08 -\n            b04 * b07 +\n            b05 * b06\n        if (!det) {\n            return this\n        }\n        const invDet = 1.0 / det\n\n        this[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet\n        this[1] = (a02 * b10 - a01 * b11 - a03 * b09) * invDet\n        this[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet\n        this[3] = (a22 * b04 - a21 * b05 - a23 * b03) * invDet\n        this[4] = (a12 * b08 - a10 * b11 - a13 * b07) * invDet\n        this[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet\n        this[6] = (a32 * b02 - a30 * b05 - a33 * b01) * invDet\n        this[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet\n        this[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet\n        this[9] = (a01 * b08 - a00 * b10 - a03 * b06) * invDet\n        this[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet\n        this[11] = (a21 * b02 - a20 * b04 - a23 * b00) * invDet\n        this[12] = (a11 * b07 - a10 * b09 - a12 * b06) * invDet\n        this[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet\n        this[14] = (a31 * b01 - a30 * b03 - a32 * b00) * invDet\n        this[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet\n        return this\n    }\n\n    get translation(): TgdVec3 {\n        const { m30, m31, m32 } = this\n        return new TgdVec3(m30, m31, m32)\n    }\n    set translation(vec: TgdVec3 | TgdVec4) {\n        this.m30 = vec.x\n        this.m31 = vec.y\n        this.m32 = vec.z\n    }\n\n    from(mat: TgdMat4 | ArrayNumber16): this {\n        // prettier-ignore\n        const [\n            m00, m01, m02, m03,\n            m10, m11, m12, m13,\n            m20, m21, m22, m23,\n            m30, m31, m32, m33,\n        ] = mat\n        this.m00 = m00\n        this.m01 = m01\n        this.m02 = m02\n        this.m03 = m03\n        this.m10 = m10\n        this.m11 = m11\n        this.m12 = m12\n        this.m13 = m13\n        this.m20 = m20\n        this.m21 = m21\n        this.m22 = m22\n        this.m23 = m23\n        this.m30 = m30\n        this.m31 = m31\n        this.m32 = m32\n        this.m33 = m33\n        return this\n    }\n\n    fromMat3(mat: TgdMat3 | TgdMat4): this {\n        this.m00 = mat.m00\n        this.m01 = mat.m01\n        this.m02 = mat.m02\n        this.m10 = mat.m10\n        this.m11 = mat.m11\n        this.m12 = mat.m12\n        this.m20 = mat.m20\n        this.m21 = mat.m21\n        this.m22 = mat.m22\n        return this\n    }\n\n    toAxis(axisX: TgdVec3, axisY: TgdVec3, axisZ: TgdVec3): this {\n        this.toAxisX(axisX)\n        this.toAxisY(axisY)\n        return this.toAxisZ(axisZ)\n    }\n\n    toAxisX(axisX: TgdVec3): this {\n        axisX.x = this.m00\n        axisX.y = this.m01\n        axisX.z = this.m02\n        return this\n    }\n\n    toAxisY(axisY: TgdVec3): this {\n        axisY.x = this.m10\n        axisY.y = this.m11\n        axisY.z = this.m12\n        return this\n    }\n\n    toAxisZ(axisZ: TgdVec3): this {\n        axisZ.x = this.m20\n        axisZ.y = this.m21\n        axisZ.z = this.m22\n        return this\n    }\n\n    fromQuat({ x, y, z, w }: TgdQuat): this {\n        const x2 = x + x\n        const y2 = y + y\n        const z2 = z + z\n        const xx = x * x2\n        const yx = y * x2\n        const yy = y * y2\n        const zx = z * x2\n        const zy = z * y2\n        const zz = z * z2\n        const wx = w * x2\n        const wy = w * y2\n        const wz = w * z2\n\n        this.m00 = 1 - yy - zz\n        this.m10 = yx - wz\n        this.m20 = zx + wy\n\n        this.m01 = yx + wz\n        this.m11 = 1 - xx - zz\n        this.m21 = zy - wx\n\n        this.m02 = zx - wy\n        this.m12 = zy + wx\n        this.m22 = 1 - xx - yy\n\n        return this\n    }\n\n    /**\n     * Col 0, row 0.\n     */\n    get m00() {\n        return this[0]\n    }\n    /**\n     * Col 0, row 0.\n     */\n    set m00(v: number) {\n        this[0] = v\n    }\n\n    /**\n     * Col 0, row 1.\n     */\n    get m01() {\n        return this[1]\n    }\n    /**\n     * Col 0, row 1.\n     */\n    set m01(v: number) {\n        this[1] = v\n    }\n\n    /**\n     * Col 0, row 2.\n     */\n    get m02() {\n        return this[2]\n    }\n    /**\n     * Col 0, row 2.\n     */\n    set m02(v: number) {\n        this[2] = v\n    }\n\n    /**\n     * Col 0, row 3.\n     */\n    get m03() {\n        return this[3]\n    }\n    /**\n     * Col 0, row 3.\n     */\n    set m03(v: number) {\n        this[3] = v\n    }\n\n    /**\n     * Col 1, row 0.\n     */\n    get m10() {\n        return this[4]\n    }\n    /**\n     * Col 1, row 0.\n     */\n    set m10(v: number) {\n        this[4] = v\n    }\n\n    /**\n     * Col 1, row 1.\n     */\n    get m11() {\n        return this[5]\n    }\n    /**\n     * Col 1, row 1.\n     */\n    set m11(v: number) {\n        this[5] = v\n    }\n\n    /**\n     * Col 1, row 2.\n     */\n    get m12() {\n        return this[6]\n    }\n    /**\n     * Col 1, row 2.\n     */\n    set m12(v: number) {\n        this[6] = v\n    }\n\n    /**\n     * Col 1, row 3.\n     */\n    get m13() {\n        return this[7]\n    }\n    /**\n     * Col 1, row 3.\n     */\n    set m13(v: number) {\n        this[7] = v\n    }\n\n    /**\n     * Col 2, row 0.\n     */\n    get m20() {\n        return this[8]\n    }\n    /**\n     * Col 2, row 0.\n     */\n    set m20(v: number) {\n        this[8] = v\n    }\n\n    /**\n     * Col 2, row 1.\n     */\n    get m21() {\n        return this[9]\n    }\n    /**\n     * Col 2, row 1.\n     */\n    set m21(v: number) {\n        this[9] = v\n    }\n\n    /**\n     * Col 2, row 2.\n     */\n    get m22() {\n        return this[10]\n    }\n    /**\n     * Col 2, row 2.\n     */\n    set m22(v: number) {\n        this[10] = v\n    }\n\n    /**\n     * Col 2, row 3.\n     */\n    get m23() {\n        return this[11]\n    }\n    /**\n     * Col 2, row 3.\n     */\n    set m23(v: number) {\n        this[11] = v\n    }\n\n    /**\n     * Col 3, row 0.\n     */\n    get m30() {\n        return this[12]\n    }\n    /**\n     * Col 3, row 0.\n     */\n    set m30(v: number) {\n        this[12] = v\n    }\n\n    /**\n     * Col 3, row 1.\n     */\n    get m31() {\n        return this[13]\n    }\n    /**\n     * Col 3, row 1.\n     */\n    set m31(v: number) {\n        this[13] = v\n    }\n\n    /**\n     * Col 3, row 2.\n     */\n    get m32() {\n        return this[14]\n    }\n    /**\n     * Col 3, row 2.\n     */\n    set m32(v: number) {\n        this[14] = v\n    }\n\n    /**\n     * Col 3, row 3.\n     */\n    get m33() {\n        return this[15]\n    }\n    /**\n     * Col 3, row 3.\n     */\n    set m33(v: number) {\n        this[15] = v\n    }\n\n    debug(caption = \"Mat4\") {\n        const c0 = padColOfNumbers([this.m00, this.m01, this.m02, this.m03])\n        const c1 = padColOfNumbers([this.m10, this.m11, this.m12, this.m13])\n        const c2 = padColOfNumbers([this.m20, this.m21, this.m22, this.m23])\n        const c3 = padColOfNumbers([this.m30, this.m31, this.m32, this.m33])\n\n        console.log(caption)\n        console.log(\"   \", [c0[0], c1[0], c2[0], c3[0]].join(\" | \"))\n        console.log(\"   \", [c0[1], c1[1], c2[1], c3[1]].join(\" | \"))\n        console.log(\"   \", [c0[2], c1[2], c2[2], c3[2]].join(\" | \"))\n        console.log(\"   \", [c0[3], c1[3], c2[3], c3[3]].join(\" | \"))\n    }\n}\n","export * from \"./mat3\"\nexport * from \"./mat4\"\nexport * from \"./quat\"\nexport * from \"./transfo\"\nexport * from \"./vec2\"\nexport * from \"./vec3\"\nexport * from \"./vec4\"\n","import { ArrayNumber4 } from \"..\"\nimport { TgdMat4 } from \"./mat4\"\nimport { TgdVec3 } from \"./vec3\"\n\nexport class TgdVec4 extends Float32Array {\n    constructor()\n    constructor(vec4: TgdVec4)\n    constructor(vec3: TgdVec3, w: number)\n    constructor(x: number)\n    constructor(x: number, y: number)\n    constructor(x: number, y: number, z: number)\n    constructor(x: number, y: number, z: number, w: number)\n    constructor(\n        x: number | TgdVec4 | TgdVec3 = 0,\n        y: number = 0,\n        z: number = 0,\n        w: number = 1\n    ) {\n        super(4)\n        if (x instanceof TgdVec4) {\n            this.x = x.x\n            this.y = x.y\n            this.z = x.z\n            this.w = x.w\n            return\n        }\n        if (x instanceof TgdVec3) {\n            this.x = x.x\n            this.y = x.y\n            this.z = x.z\n            this.w = w\n            return\n        }\n        this.x = x\n        this.y = y\n        this.z = z\n        this.w = w\n    }\n\n    reset(x = 0, y = 0, z = 0, w = 1): this {\n        this.x = x\n        this.y = y\n        this.z = z\n        this.w = w\n        return this\n    }\n\n    from(vec: Readonly<TgdVec4 | ArrayNumber4>): this {\n        const [x, y, z, w] = vec\n        this.x = x\n        this.y = y\n        this.z = z\n        this.w = w\n        return this\n    }\n\n    clone() {\n        return new TgdVec4(this)\n    }\n\n    isEqual(vec: Readonly<TgdVec4 | ArrayNumber4>) {\n        const [x, y, z, w] = vec\n        if (x !== this.x) return false\n        if (y !== this.y) return false\n        if (z !== this.z) return false\n        if (w !== this.w) return false\n        return true\n    }\n\n    isClose({ x, y, z, w }: TgdVec4, epsilon = 1e-6) {\n        if (Math.abs(x - this.x) > epsilon) return false\n        if (Math.abs(y - this.y) > epsilon) return false\n        if (Math.abs(z - this.z) > epsilon) return false\n        if (Math.abs(w - this.w) > epsilon) return false\n        return true\n    }\n\n    /**\n     * V := M×V\n     */\n    applyMatrix(mat: TgdMat4): this {\n        const { x, y, z, w } = this\n        this.x = x * mat.m00 + y * mat.m10 + z * mat.m20 + w * mat.m30\n        this.y = x * mat.m01 + y * mat.m11 + z * mat.m21 + w * mat.m31\n        this.z = x * mat.m02 + y * mat.m12 + z * mat.m22 + w * mat.m32\n        this.w = x * mat.m03 + y * mat.m13 + z * mat.m23 + w * mat.m33\n        return this\n    }\n\n    get x() {\n        return this[0]\n    }\n    set x(value: number) {\n        this[0] = value\n    }\n\n    get y() {\n        return this[1]\n    }\n    set y(value: number) {\n        this[1] = value\n    }\n\n    get z() {\n        return this[2]\n    }\n    set z(value: number) {\n        this[2] = value\n    }\n\n    get w() {\n        return this[3]\n    }\n    set w(value: number) {\n        this[3] = value\n    }\n\n    add(...vectors: (TgdVec4 | TgdVec3)[]): TgdVec4 {\n        for (const vec of vectors) {\n            this[0] += vec[0]\n            this[1] += vec[1]\n            this[2] += vec[2]\n            if (vec.length > 3) this[3] += vec[3]\n        }\n        return this\n    }\n\n    subtract(vec: TgdVec4 | TgdVec3): TgdVec4 {\n        this[0] -= vec[0]\n        this[1] -= vec[1]\n        this[2] -= vec[2]\n        if (vec.length > 3) this[3] -= vec[3]\n        return this\n    }\n\n    scale(factor: number): this {\n        this[0] *= factor\n        this[1] *= factor\n        this[2] *= factor\n        this[3] *= factor\n        return this\n    }\n\n    dot(vec: TgdVec4): number {\n        return (\n            this[0] * vec[0] +\n            this[1] * vec[1] +\n            this[2] * vec[2] +\n            this[3] * vec[3]\n        )\n    }\n\n    get size() {\n        return Math.sqrt(\n            this[0] * this[0] +\n                this[1] * this[1] +\n                this[2] * this[2] +\n                this[3] * this[3]\n        )\n    }\n\n    normalize(): this {\n        const squareLength =\n            this[0] * this[0] +\n            this[1] * this[1] +\n            this[2] * this[2] +\n            this[3] * this[3]\n        if (squareLength === 0) return this\n\n        return this.scale(1 / Math.sqrt(squareLength))\n    }\n\n    debug(caption = \"vec4\") {\n        const { x, y, z, w } = this\n        const out: string[] = [x, y, z, w].map(n => n.toFixed(6))\n        console.log(`${caption}:   `, out.join(\" | \"))\n    }\n}\n","import { TgdVec3 } from \"./vec3\"\nimport { TgdVec4 } from \"./vec4\"\n\nexport type TgdQuatFace = keyof typeof FACES\n\nexport class TgdQuat extends TgdVec4 {\n    constructor()\n    constructor(source: TgdQuat)\n    constructor(source: TgdVec4)\n    constructor(x: number)\n    constructor(x: number, y: number)\n    constructor(x: number, y: number, z: number)\n    constructor(x: number, y: number, z: number, w: number)\n    constructor(\n        x: number | TgdVec4 = 0,\n        y: number = 0,\n        z: number = 0,\n        w: number = 1\n    ) {\n        if (typeof x === \"number\") super(x, y, z, w)\n        else super(x)\n    }\n\n    clone(): TgdQuat {\n        return new TgdQuat(this)\n    }\n\n    multiply(quat: TgdQuat): TgdQuat {\n        const [qx, qy, qz, qw] = this\n        const [rx, ry, rz, rw] = quat\n        this[0] = rw * qx + rx * qw - ry * qz + rz * qy\n        this[1] = rw * qy + rx * qz + ry * qw - rz * qx\n        this[2] = rw * qz - rx * qy + ry * qx + rz * qw\n        this[3] = rw * qw - rx * qx - ry * qy - rz * qz\n        return this\n    }\n\n    fromSlerp(a: TgdQuat, b: TgdQuat, t: number): this {\n        const EPSILON = 1e-6\n        const [ax, ay, az, aw] = a\n        let [bx, by, bz, bw] = b\n\n        let scale0, scale1\n\n        // calc cosine\n        let cosom = ax * bx + ay * by + az * bz + aw * bw\n        // adjust signs (if necessary)\n        if (cosom < 0.0) {\n            cosom = -cosom\n            bx = -bx\n            by = -by\n            bz = -bz\n            bw = -bw\n        }\n        // calculate coefficients\n        if (1.0 - cosom > EPSILON) {\n            // standard case (slerp)\n            const omega = Math.acos(cosom)\n            const sinom = Math.sin(omega)\n            const inverseSinom = 1 / sinom\n            scale0 = Math.sin((1.0 - t) * omega) * inverseSinom\n            scale1 = Math.sin(t * omega) * inverseSinom\n        } else {\n            // \"from\" and \"to\" quaternions are very close\n            //  ... so we can do a linear interpolation\n            scale0 = 1.0 - t\n            scale1 = t\n        }\n        // calculate final values\n        this.x = scale0 * ax + scale1 * bx\n        this.y = scale0 * ay + scale1 * by\n        this.z = scale0 * az + scale1 * bz\n        this.w = scale0 * aw + scale1 * bw\n        return this\n    }\n\n    fromAxis(X: TgdVec3, Y: TgdVec3, Z: TgdVec3): this {\n        // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n        // article \"Quaternion Calculus and Fast Animation\".\n        const fTrace = X.x + Y.y + Z.z\n        if (fTrace > 0.0) {\n            // |w| > 1/2, may as well choose w > 1/2\n            const fRoot = Math.sqrt(fTrace + 1.0) // 2w\n            this.w = 0.5 * fRoot\n            const halfRoot = 0.5 / fRoot // 1/(4w)\n            this.x = (Y.z - Z.y) * halfRoot\n            this.y = (Z.x - X.z) * halfRoot\n            this.z = (X.y - Y.x) * halfRoot\n        } else {\n            // |w| <= 1/2\n            const axis = [X, Y, Z]\n            let i = 0\n            if (Y.y > X.x) i = 1\n            if (Z.z > axis[i][i]) i = 2\n            const j = (i + 1) % 3\n            const k = (i + 2) % 3\n\n            let fRoot = Math.sqrt(axis[i][i] - axis[j][j] - axis[k][k] + 1.0)\n            this[i] = 0.5 * fRoot\n            fRoot = 0.5 / fRoot\n            this[3] = (axis[j][k] - axis[k][j]) * fRoot\n            this[j] = (axis[j][i] + axis[i][j]) * fRoot\n            this[k] = (axis[k][i] + axis[i][k]) * fRoot\n        }\n        return this.normalize()\n    }\n\n    rotateAroundX(angleInRadians: number): this {\n        const rad = angleInRadians * 0.5\n\n        const ax = this[0]\n        const ay = this[1]\n        const az = this[2]\n        const aw = this[3]\n        const bx = Math.sin(rad)\n        const bw = Math.cos(rad)\n\n        this[0] = ax * bw + aw * bx\n        this[1] = ay * bw + az * bx\n        this[2] = az * bw - ay * bx\n        this[3] = aw * bw - ax * bx\n        return this\n    }\n\n    rotateAroundY(angleInRadians: number): this {\n        const rad = angleInRadians * 0.5\n\n        const ax = this[0]\n        const ay = this[1]\n        const az = this[2]\n        const aw = this[3]\n        const by = Math.sin(rad)\n        const bw = Math.cos(rad)\n\n        this[0] = ax * bw - az * by\n        this[1] = ay * bw + aw * by\n        this[2] = az * bw + ax * by\n        this[3] = aw * bw - ay * by\n        return this\n    }\n\n    rotateAroundZ(angleInRadians: number): this {\n        const rad = angleInRadians * 0.5\n\n        const ax = this[0]\n        const ay = this[1]\n        const az = this[2]\n        const aw = this[3]\n        const bz = Math.sin(rad)\n        const bw = Math.cos(rad)\n\n        this[0] = ax * bw + ay * bz\n        this[1] = ay * bw - ax * bz\n        this[2] = az * bw + aw * bz\n        this[3] = aw * bw - az * bz\n        return this\n    }\n\n    toAxisZ(vec: TgdVec3 | TgdVec4): typeof vec {\n        const { x, y, z, w } = this\n        const x2 = x + x\n        const y2 = y + y\n        const xx = x * x2\n        const yy = y * y2\n        const zx = z * x2\n        const zy = z * y2\n        const wx = w * x2\n        const wy = w * y2\n\n        vec.x = zx + wy\n        vec.y = zy - wx\n        vec.z = 1 - xx - yy\n\n        return vec\n    }\n\n    face(face: TgdQuatFace = \"+X+Y+Z\"): this {\n        const [x, y, z, w] = FACES[face]\n        this.x = x\n        this.y = y\n        this.z = z\n        this.w = w\n        return this\n    }\n}\n\nconst A = Math.sqrt(2) / 2\nconst H = 0.5\n\nconst FACES = {\n    \"+X+Y+Z\": [+0, +0, +0, +1],\n    \"-Z+Y+X\": [+0, +A, +0, +A],\n    \"-X+Y-Z\": [+0, +1, +0, +0],\n    \"+Z+Y-X\": [+0, -A, +0, +A],\n    \"+X+Z-Y\": [+A, +0, +0, +A],\n    \"+Y+Z+X\": [+H, +H, +H, +H],\n    \"-X+Z+Y\": [+0, +A, +A, +0],\n    \"-Y+Z-X\": [+H, -H, -H, +H],\n    \"+X-Y-Z\": [+1, +0, +0, +0],\n    \"+X-Z+Y\": [-A, +0, +0, +A],\n    \"-X-Y+Z\": [+0, +0, +1, +0],\n    \"-X-Z-Y\": [+0, +A, -A, +0],\n    \"+Y+X-Z\": [+A, +A, +0, +0],\n    \"+Y-X+Z\": [+0, +0, +A, +A],\n    \"+Y-Z-X\": [+H, +H, -H, -H],\n    \"-Y+X+Z\": [+0, +0, -A, +A],\n    \"-Y-X-Z\": [+A, -A, +0, +0],\n    \"-Y-Z+X\": [+H, -H, +H, -H],\n    \"+Z+X+Y\": [+H, +H, +H, -H],\n    \"+Z-X-Y\": [+H, -H, +H, +H],\n    \"+Z-Y+X\": [+A, +0, +A, +0],\n    \"-Z+X-Y\": [+H, +H, -H, +H],\n    \"-Z-X+Y\": [+H, -H, -H, -H],\n    \"-Z-Y-X\": [+A, +0, -A, +0],\n}\n","import { ArrayNumber16, ArrayNumber3, ArrayNumber4 } from \"../types\"\nimport { TgdMat4 } from \"./mat4\"\nimport { TgdQuat } from \"./quat\"\nimport { TgdVec3 } from \"./vec3\"\nimport { TgdVec4 } from \"./vec4\"\n\nexport class TgdTransfo {\n    // prettier-ignore\n    private readonly _matrix = new TgdMat4(\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1,\n    )\n    private readonly _position = new TgdVec3(0, 0, 0)\n    private readonly _orientation = new TgdQuat(0, 0, 0, 1)\n    private readonly _scale = new TgdVec3(1, 1, 1)\n\n    private dirty = false\n    private _updateCount = 0\n\n    get updateCount() {\n        return this._updateCount\n    }\n\n    get matrix(): Readonly<TgdMat4> {\n        if (this.dirty) {\n            const m = this._matrix\n            m.m03 = 0\n            m.m13 = 0\n            m.m23 = 0\n            m.m33 = 1\n            const [tx, ty, tz] = this._position\n            m.m30 = tx\n            m.m31 = ty\n            m.m32 = tz\n            m.fromQuat(this._orientation)\n            const [sx, sy, sz] = this._scale\n            m.m00 *= sx\n            m.m01 *= sx\n            m.m03 *= sx\n            m.m10 *= sy\n            m.m11 *= sy\n            m.m13 *= sy\n            m.m20 *= sz\n            m.m21 *= sz\n            m.m23 *= sz\n            this.dirty = false\n        }\n        return this._matrix\n    }\n    set matrix(value: Readonly<TgdMat4> | ArrayNumber16) {\n        this._matrix.from(value)\n        this._updateCount++\n        this.dirty = false\n    }\n\n    get position(): Readonly<TgdVec3> {\n        return this._position\n    }\n    set position(value: Readonly<TgdVec3 | TgdVec4 | ArrayNumber3>) {\n        this.setDirty()\n        this._position.from(value)\n    }\n    setPosition(x: number, y: number, z: number): this {\n        this.setDirty()\n        this._position.reset(x, y, z)\n        return this\n    }\n\n    get scale(): Readonly<TgdVec3> {\n        return this._scale\n    }\n    set scale(value: Readonly<TgdVec3 | ArrayNumber3>) {\n        this.setDirty()\n        this._scale.from(value)\n    }\n    setScale(x: number, y: number, z: number): this {\n        this.setDirty()\n        this._scale.reset(x, y, z)\n        return this\n    }\n\n    get orientation(): Readonly<TgdQuat> {\n        return this._orientation\n    }\n    set orientation(quat: Readonly<TgdQuat | ArrayNumber4>) {\n        this.setDirty()\n        this._orientation.from(quat)\n    }\n    setOrientation(x: number, y: number, z: number, w: number) {\n        this.setDirty()\n        this._orientation.reset(x, y, z, w)\n    }\n\n    private setDirty() {\n        this._updateCount++\n        this.dirty = true\n    }\n}\n","import { ArrayNumber3 } from \"..\"\nimport { mix } from \"../utils/math\"\nimport { TgdMat3 } from \"./mat3\"\nimport { TgdMat4 } from \"./mat4\"\nimport { TgdVec4 } from \"./vec4\"\n\nexport class TgdVec3 extends Float32Array {\n    static newFromMix(\n        v1: TgdVec3 | TgdVec4,\n        v2: TgdVec3 | TgdVec4,\n        a = 0.5\n    ): TgdVec3 {\n        const b = 1 - a\n        const x = b * v1.x + a * v2.x\n        const y = b * v1.y + a * v2.y\n        const z = b * v1.z + a * v2.z\n        return new TgdVec3(x, y, z)\n    }\n\n    static distance(from: TgdVec3 | TgdVec4, to: TgdVec3 | TgdVec4): number {\n        const x = to.x - from.x\n        const y = to.y - from.y\n        const z = to.z - from.z\n        return Math.sqrt(x * x + y * y + z * z)\n    }\n\n    constructor()\n    constructor(x: Readonly<TgdVec3 | ArrayNumber3>)\n    constructor(x: number)\n    constructor(x: number, y: number)\n    constructor(x: number, y: number, z: number)\n    constructor(\n        x: number | Readonly<TgdVec3 | ArrayNumber3> = 0,\n        y: number = 0,\n        z: number = 0\n    ) {\n        super(3)\n        if (typeof x !== \"number\") {\n            this.x = x[0]\n            this.y = x[1]\n            this.z = x[2]\n            return\n        }\n        this.x = x\n        this.y = y\n        this.z = z\n    }\n\n    clone() {\n        return new TgdVec3(this)\n    }\n\n    isEqual(vec: Readonly<TgdVec3 | ArrayNumber3>) {\n        const [x, y, z] = vec\n        if (x !== this.x) return false\n        if (y !== this.y) return false\n        if (z !== this.z) return false\n        return true\n    }\n\n    isClose(vec: Readonly<TgdVec3 | ArrayNumber3>, epsilon = 1e-6) {\n        const [x, y, z] = vec\n        if (Math.abs(x - this.x) > epsilon) return false\n        if (Math.abs(y - this.y) > epsilon) return false\n        if (Math.abs(z - this.z) > epsilon) return false\n        return true\n    }\n\n    rotateAround(\n        axis: Readonly<TgdVec3 | ArrayNumber3>,\n        angleInRadians: number\n    ) {\n        // result := V.cos(a) + (KxV).sin(a) + K(K.V)(1 - cos(a))\n        const C = Math.cos(angleInRadians)\n        const S = Math.sin(angleInRadians)\n        const [Vx, Vy, Vz] = this\n        const [Kx, Ky, Kz] = axis\n        const dot = Vx * Kx + Vy * Ky + Vz * Kz\n        const crossX = Ky * Vz - Kz * Vy\n        const crossY = Kz * Vx - Kx * Vz\n        const crossZ = Kx * Vy - Ky * Vx\n        const a = dot * (1 - C)\n        this.x = Vx * C + crossX * S + Kx * a\n        this.y = Vy * C + crossY * S + Ky * a\n        this.z = Vz * C + crossZ * S + Kz * a\n        return this\n    }\n\n    /**\n     * V := M×V\n     */\n    applyMatrix(mat: Readonly<TgdMat3 | TgdMat4>): this {\n        const { x, y, z } = this\n        this.x = x * mat.m00 + y * mat.m10 + z * mat.m20\n        this.y = x * mat.m01 + y * mat.m11 + z * mat.m21\n        this.z = x * mat.m02 + y * mat.m12 + z * mat.m22\n        return this\n    }\n\n    from(vec: Readonly<TgdVec3 | TgdVec4 | ArrayNumber3>): this {\n        const [x, y, z] = vec\n        this.x = x\n        this.y = y\n        this.z = z\n        return this\n    }\n\n    fromMix(a: TgdVec3 | TgdVec4, b: TgdVec3 | TgdVec4, t: number): this {\n        const [ax, ay, az] = a\n        const [bx, by, bz] = b\n        return this.reset(mix(ax, bx, t), mix(ay, by, t), mix(az, bz, t))\n    }\n\n    reset(x: number, y: number, z: number): this {\n        this[0] = x\n        this[1] = y\n        this[2] = z\n        return this\n    }\n\n    distanceToLineSquared(\n        origin: TgdVec3,\n        normalizedDirection: TgdVec3\n    ): number {\n        const [mx, my, mz] = this\n        const [ox, oy, oz] = origin\n        const [dx, dy, dz] = normalizedDirection\n        const OH = dx * (mx - ox) + dy * (my - oy) + dz * (mz - oz)\n        const hx = ox + OH * dx\n        const hy = oy + OH * dy\n        const hz = oz + OH * dz\n        const x = mx - hx\n        const y = my - hy\n        const z = mz - hz\n        return x * x + y * y + z * z\n    }\n\n    get x() {\n        return this[0]\n    }\n    set x(value: number) {\n        this[0] = value\n    }\n\n    get y() {\n        return this[1]\n    }\n    set y(value: number) {\n        this[1] = value\n    }\n\n    get z() {\n        return this[2]\n    }\n    set z(value: number) {\n        this[2] = value\n    }\n\n    add(...vectors: (TgdVec3 | TgdVec4)[]): this {\n        for (const vec of vectors) {\n            this[0] += vec.x\n            this[1] += vec.y\n            this[2] += vec.z\n        }\n        return this\n    }\n\n    addWithScale(vec: TgdVec3 | TgdVec4, scale: number): this {\n        this[0] += vec.x * scale\n        this[1] += vec.y * scale\n        this[2] += vec.z * scale\n        return this\n    }\n\n    subtract(vec: Readonly<TgdVec3 | TgdVec4 | ArrayNumber3>): this {\n        this[0] -= vec[0]\n        this[1] -= vec[1]\n        this[2] -= vec[2]\n        return this\n    }\n\n    scale(factor: number): this {\n        this[0] *= factor\n        this[1] *= factor\n        this[2] *= factor\n        return this\n    }\n\n    dot(vec: Readonly<TgdVec3 | TgdVec4 | ArrayNumber3>): number {\n        return this[0] * vec[0] + this[1] * vec[1] + this[2] * vec[2]\n    }\n\n    get size() {\n        return Math.sqrt(\n            this[0] * this[0] + this[1] * this[1] + this[2] * this[2]\n        )\n    }\n\n    normalize(): this {\n        const squareLength =\n            this[0] * this[0] + this[1] * this[1] + this[2] * this[2]\n        if (squareLength === 0) return this\n\n        return this.scale(1 / Math.sqrt(squareLength))\n    }\n\n    cross(vec: Readonly<TgdVec3 | TgdVec4 | ArrayNumber3>): this {\n        const [x1, y1, z1] = this\n        const [x2, y2, z2] = vec\n        this[0] = y1 * z2 - y2 * z1\n        this[1] = z1 * x2 - z2 * x1\n        this[2] = x1 * y2 - x2 * y1\n        return this\n    }\n\n    /**\n     * Set random values between -0.5 and +0.5 to each coordinate.\n     */\n    random(): this {\n        this[0] = Math.random() - 0.5\n        this[1] = Math.random() - 0.5\n        this[2] = Math.random() - 0.5\n        return this\n    }\n\n    debug(caption = \"vec3\") {\n        const { x, y, z } = this\n        const out: string[] = [x, y, z].map(n => n.toFixed(6))\n        console.log(\n            `${caption}:   `,\n            out.join(\" | \"),\n            \"   length:\",\n            Math.sqrt(x * x + y * y + z * z)\n        )\n    }\n}\n","import { TgdContext } from \"@tgd/context\"\nimport { TgdProgram } from \"@tgd/types\"\nimport { TgdPainter } from \"@tgd/painter/painter\"\nimport { TgdDataset } from \"@tgd/dataset\"\nimport { TgdVertexArray } from \"@tgd/vao\"\nimport { TgdVec4 } from \"@tgd/math\"\n\nimport VERT from \"./axis.vert\"\nimport FRAG from \"./axis.frag\"\n\nexport type TgdPainterAxisOptions = {\n    x: number\n    y: number\n    z: number\n    scale: number\n}\n\nexport class TgdPainterAxis extends TgdPainter {\n    private readonly vao: TgdVertexArray\n    private readonly prg: TgdProgram\n    private readonly translateAndScale: TgdVec4\n\n    constructor(\n        public readonly context: TgdContext,\n        { x = 0, y = 0, z = 0, scale = 1 }: Partial<TgdPainterAxisOptions> = {}\n    ) {\n        super()\n        const prg = context.programs.create({\n            vert: VERT,\n            frag: FRAG,\n        })\n        this.prg = prg\n        const dataset = new TgdDataset({\n            attPos: \"vec3\",\n            attColor: \"vec4\",\n        })\n        // prettier-ignore\n        dataset.set(\"attPos\", new Float32Array([\n            0, 0, 0, +1, +0, +0,\n            0, 0, 0, +0, +1, +0,\n            0, 0, 0, +0, +0, +1,\n            0, 0, 0, -1, -0, -0,\n            0, 0, 0, -0, -1, -0,\n            0, 0, 0, -0, -0, -1,\n        ]))\n        const a = 1\n        const b = 0.25\n        // prettier-ignore\n        dataset.set(\"attColor\", new Float32Array([\n            a, 0, 0, 1, a, 0, 0, 1,\n            0, a, 0, 1, 0, a, 0, 1,\n            0, 0, a, 1, 0, 0, a, 1,\n            b, 0, 0, 1, b, 0, 0, 1,\n            0, b, 0, 1, 0, b, 0, 1,\n            0, 0, b, 1, 0, 0, b, 1,\n        ]))\n        this.vao = context.createVAO(prg, [dataset])\n        this.translateAndScale = new TgdVec4(x, y, z, scale)\n    }\n\n    get x(): number {\n        return this.translateAndScale.x\n    }\n    set x(v: number) {\n        this.translateAndScale.x = v\n    }\n\n    get y(): number {\n        return this.translateAndScale.y\n    }\n    set y(v: number) {\n        this.translateAndScale.y = v\n    }\n\n    get z(): number {\n        return this.translateAndScale.z\n    }\n    set z(v: number) {\n        this.translateAndScale.z = v\n    }\n\n    get scale(): number {\n        return this.translateAndScale.w\n    }\n    set scale(v: number) {\n        this.translateAndScale.w = v\n    }\n\n    delete(): void {\n        this.vao.delete()\n    }\n\n    paint(): void {\n        const { context, prg, vao, translateAndScale } = this\n        const { gl, camera } = context\n        prg.use()\n        prg.uniform4fv(\"uniTS\", translateAndScale)\n        prg.uniformMatrix4fv(\"uniModelViewMatrix\", camera.matrixModelView)\n        prg.uniformMatrix4fv(\"uniProjectionMatrix\", camera.matrixProjection)\n        vao.bind()\n        gl.drawArrays(gl.LINES, 0, 12)\n    }\n}\n","export * from \"./axis\"\n","import { TgdProgram, TgdTexture2D } from \"@tgd/types\"\nimport { TgdContext } from \"@tgd/context\"\nimport { TgdPainter } from \"../painter\"\nimport { TgdDataset } from \"@tgd/dataset/dataset\"\nimport { TgdVertexArray } from \"@tgd/vao\"\n\nimport VERT from \"./background.vert\"\nimport FRAG from \"./background.frag\"\n\nexport interface TgdPainterBackgroundOptions {\n    zoom: number\n    x: number\n    y: number\n    z: number\n}\n\nexport class TgdPainterBackground extends TgdPainter {\n    public texture: TgdTexture2D\n\n    private readonly program: TgdProgram\n    private readonly vao: TgdVertexArray\n\n    /**\n     * With a zoom of **1**, the image will have the smaller size to cover\n     * the whole scene.\n     */\n    public zoom = 1\n    public x = 0\n    public y = 0\n    public z = 1\n\n    constructor(\n        private readonly context: TgdContext,\n        texture: TgdTexture2D,\n        {\n            x = 0,\n            y = 0,\n            z = 1,\n            zoom = 1,\n        }: Partial<TgdPainterBackgroundOptions> = {}\n    ) {\n        super()\n        this.x = x\n        this.y = y\n        this.z = z\n        this.zoom = zoom\n        this.texture = texture\n        this.program = context.programs.create({\n            vert: VERT,\n            frag: FRAG,\n        })\n        const dataset = new TgdDataset({\n            attPoint: \"vec2\",\n            attUV: \"vec2\",\n        })\n        dataset.set(\n            \"attPoint\",\n            new Float32Array([-1, -1, +1, -1, -1, +1, +1, +1])\n        )\n        dataset.set(\"attUV\", new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]))\n        this.vao = context.createVAO(this.program, [dataset])\n    }\n\n    delete(): void {\n        const { vao } = this\n        vao.delete()\n    }\n\n    paint(): void {\n        const { gl } = this.context\n        const { vao, program, texture, zoom, x, y, z } = this\n        program.use()\n        const { width, height } = this.context\n        const horizontal = texture.width * height > texture.height * width\n        const scaleX = horizontal\n            ? (texture.width * height) / (width * texture.height)\n            : 1\n        const scaleY = horizontal\n            ? 1\n            : (texture.height * width) / (height * texture.width)\n        program.uniform2f(\"uniScale\", scaleX, scaleY)\n        program.uniform2f(\"uniScroll\", x, y)\n        program.uniform1f(\"uniZoom\", 1 / zoom)\n        program.uniform1f(\"uniZ\", z)\n        texture.activate(program, \"uniTexture\")\n        vao.bind()\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n    }\n}\n","export * from \"./background\"\n","import { TgdVec4 } from \"@tgd/math\"\nimport { TgdPainter } from \"./painter\"\nimport { TgdContextInterface } from \"@tgd/types\"\n\nexport interface TgdPainterClearOptions {\n    color: [red: number, green: number, blue: number, alpha: number] | TgdVec4\n    depth: number\n}\n\n/**\n * @see {@link TgdPainterClearOptions}\n */\nexport class TgdPainterClear extends TgdPainter {\n    private readonly clearMask\n\n    public red = 1\n    public green = 0.7\n    public blue = 0\n    public alpha = 1\n    public depth = 1\n\n    constructor(\n        public readonly context: TgdContextInterface,\n        private readonly options: Partial<TgdPainterClearOptions> = {}\n    ) {\n        super()\n        const { gl } = context\n        const color = options.color ?? [0, 0, 0, 1]\n        const depth = options.depth ?? 1\n        this.clearMask = 0\n        let hasAnyOption = false\n        if (options.color) {\n            this.clearMask |= gl.COLOR_BUFFER_BIT\n            hasAnyOption = true\n        }\n        if (typeof options.depth === \"number\") {\n            this.clearMask |= gl.DEPTH_BUFFER_BIT\n            hasAnyOption = true\n        }\n        if (!hasAnyOption) {\n            throw Error(\n                \"[TgdPainterClear] You must give at least a color or a depth in the constructor!\"\n            )\n        }\n        // eslint-disable-next-line no-extra-semi\n        ;[this.red, this.green, this.blue, this.alpha] = color\n        this.depth = depth\n    }\n\n    /** Nothing to destroy. */\n    delete(): void {}\n\n    paint(): void {\n        const { clearMask, context, red, green, blue, alpha, depth, options } =\n            this\n        const { gl } = context\n        if (options.color) gl.clearColor(red, green, blue, alpha)\n        if (typeof options.depth === \"number\") gl.clearDepth(depth)\n        gl.clear(clearMask)\n    }\n}\n","import { TgdContextInterface, WebglDepthFunc } from \"..\"\nimport { TgdPainter } from \"./painter\"\n\nexport type TgdPainterDepthOptions = {\n    enabled: boolean\n    func: WebglDepthFunc\n    mask: boolean\n    rangeMin: number\n    rangeMax: number\n}\n\nexport class TgdPainterDepth extends TgdPainter {\n    public enabled: boolean\n    public func: WebglDepthFunc\n    public mask: boolean\n    public rangeMin: number\n    public rangeMax: number\n\n    constructor(\n        private readonly context: TgdContextInterface,\n        {\n            enabled = true,\n            func = \"LESS\",\n            mask = true,\n            rangeMin = 0,\n            rangeMax = 1,\n        }: Partial<TgdPainterDepthOptions> = {}\n    ) {\n        super()\n        this.enabled = enabled\n        this.func = func\n        this.mask = mask\n        this.rangeMin = rangeMin\n        this.rangeMax = rangeMax\n    }\n\n    delete(): void {}\n\n    paint(): void {\n        const { gl } = this.context\n        const { enabled } = this\n        if (!enabled) {\n            gl.disable(gl.DEPTH_TEST)\n            return\n        }\n\n        const { func, mask, rangeMin, rangeMax } = this\n        gl.enable(gl.DEPTH_TEST)\n        gl.depthFunc(gl[func])\n        gl.depthMask(mask)\n        gl.depthRange(rangeMin, rangeMax)\n    }\n\n    update(): void {}\n}\n","import { TgdMat4 } from \"@tgd/math\"\nimport { TgdPainter } from \"./painter\"\nimport { TgdTransfo } from \"../math/transfo\"\n\nexport interface TgdPainterNodeChild {\n    paint(time: number, delay: number): void\n    delete(): void\n    matrixTransfo: TgdMat4\n}\n\nexport interface TgdPainterNodeOptions {\n    children: Array<TgdPainterNode | TgdPainterNodeChild>\n}\n\nexport class TgdPainterNode extends TgdPainter {\n    public parentTransfo: TgdTransfo = new TgdTransfo()\n    public readonly transfo = new TgdTransfo()\n\n    private readonly matrixTransfo = new TgdMat4()\n    private parentUpdateCount = 0\n    private updateCount = 0\n    private readonly childrenNodes: TgdPainterNode[] = []\n    private readonly children: TgdPainterNodeChild[] = []\n\n    constructor(options: Partial<TgdPainterNodeOptions> = {}) {\n        super()\n        const { children = [] } = options\n        children.forEach(child => this.add(child))\n    }\n\n    delete(): void {\n        for (const child of this.children) {\n            child.delete()\n        }\n        for (const child of this.childrenNodes) {\n            child.delete()\n        }\n    }\n\n    add(...children: Array<TgdPainterNode | TgdPainterNodeChild>) {\n        for (const child of children) {\n            if (child instanceof TgdPainterNode) {\n                this.childrenNodes.push(child)\n            } else {\n                this.children.push(child)\n            }\n        }\n    }\n\n    remove(...children: Array<TgdPainterNode | TgdPainterNodeChild>) {\n        for (const child of children) {\n            if (child instanceof TgdPainterNode) {\n                const idxNode = this.childrenNodes.indexOf(child)\n                if (idxNode > -1) this.childrenNodes.splice(idxNode, 1)\n            } else {\n                const idx = this.children.indexOf(child)\n                if (idx > -1) this.children.splice(idx, 1)\n            }\n        }\n    }\n\n    paint(time: number, delay: number): void {\n        const {\n            transfo,\n            parentTransfo,\n            matrixTransfo,\n            parentUpdateCount,\n            updateCount,\n            children,\n            childrenNodes,\n        } = this\n        if (\n            transfo.updateCount > updateCount ||\n            parentTransfo.updateCount > parentUpdateCount\n        ) {\n            this.updateCount = transfo.updateCount\n            this.parentUpdateCount = parentTransfo.updateCount\n            matrixTransfo.from(parentTransfo.matrix).multiply(transfo.matrix)\n        }\n        for (const child of children) {\n            child.matrixTransfo = matrixTransfo\n            child.paint(time, delay)\n        }\n        for (const child of childrenNodes) {\n            child.parentTransfo.matrix = matrixTransfo\n            child.paint(time, delay)\n        }\n    }\n}\n","import { TgdDataset } from \"@tgd/dataset\";\nimport { TgdPainter } from \"@tgd/painter/painter\";\nimport {\n  ArrayNumber2,\n  ArrayNumber4,\n  TgdContextInterface,\n  TgdProgram,\n  TgdTexture2D,\n} from \"@tgd/types\";\nimport { TgdVertexArray } from \"@tgd/vao\";\n\nimport FRAG from \"./segments.frag\";\nimport VERT from \"./segments.vert\";\n\nexport type TgdPainterSegmentsOptions = {\n  /**\n   * How round the tip will be?\n   *  - **0** means that the tip is flat.\n   *  - **1** will gives you a triangled tip.\n   *  - **>1** starts to have a semi-circle shape.\n   *\n   * **0** is the fastest to render, but you will have\n   * a bad connection at joints between segments.\n   *\n   * Default to **3**.\n   */\n  roundness: number;\n  /**\n   * With orthographic camera, this is a value in pixels.\n   */\n  minRadius: number;\n  /**\n   * Color texture\n   */\n  colorTexture?: TgdTexture2D;\n  /**\n   * By how much do you want to multiply the actual radius?\n   * Default to 1.\n   */\n  radiusMultiplier?: number;\n  /**\n   * Multiply the color by this value.\n   * Default to 1.\n   */\n  light?: number;\n  /**\n   * Add an offset to the Z coordinate (along camera axis).\n   */\n  shiftZ?: number;\n};\n\n/**\n * @example\n * ```\n * const factory = new TgdPainterSegmentsData()\n * factory.add(\n *   [0, 0, 0, .2],\n *   [1, 0, 0, .1],\n * )\n * factory.add(\n *   [0, 0, 0, .2],\n *   [0, 1, 0, .1],\n * )\n * factory.add(\n *   [0, 0, 0, .2],\n *   [0, 0, 1, .1],\n * )\n * const segments = new TgdPainterSegments(\n *   segment, factory\n * )\n * ```\n */\nexport class TgdPainterSegments extends TgdPainter {\n  public colorTexture: TgdTexture2D;\n  public minRadius: number = 0;\n  public radiusMultiplier = 1;\n  public radiusConstant = 1;\n  public radiusSwitch = 0;\n  public light = 1;\n  public shiftZ = 0;\n\n  private readonly vao: TgdVertexArray;\n  private readonly prg: TgdProgram;\n  private readonly vertexCount: number;\n  private readonly instanceCount: number;\n\n  /**\n   *\n   * @param factory An easy way to create a `factory` is to instantiate `TgdPainterSegmentsData`.\n   */\n  constructor(\n    protected readonly context: TgdContextInterface,\n    factory: { makeDataset: () => InstanceDataset; readonly count: number },\n    options: Partial<TgdPainterSegmentsOptions> = {}\n  ) {\n    super();\n    const {\n      roundness = 3,\n      minRadius = 0,\n      colorTexture,\n      radiusMultiplier = 1,\n      light = 1,\n      shiftZ = 0,\n    } = options;\n    this.minRadius = minRadius;\n    this.radiusMultiplier = radiusMultiplier;\n    this.light = light;\n    this.shiftZ = shiftZ;\n    if (roundness > 125) {\n      throw Error(\"[TgdPainterSegments] Max roundness is 125!\");\n    }\n    if (roundness < 0) {\n      throw Error(\"[TgdPainterSegments] Min roundness is 0!\");\n    }\n    const tex =\n      colorTexture ??\n      context.textures2D.create({\n        magFilter: \"NEAREST\",\n        minFilter: \"NEAREST\",\n        wrapR: \"CLAMP_TO_EDGE\",\n        wrapS: \"CLAMP_TO_EDGE\",\n        wrapT: \"CLAMP_TO_EDGE\",\n      });\n    if (!colorTexture) tex.makePalette([\"#f00\", \"#0f0\", \"#00f\"]);\n    this.colorTexture = tex;\n    const prg = context.programs.create({\n      vert: VERT,\n      frag: FRAG,\n    });\n    this.prg = prg;\n    const { capsule, elements } = makeCapsule(roundness);\n    const instance = factory.makeDataset();\n    this.vao = context.createVAO(prg, [capsule, instance], elements);\n    this.vertexCount = elements.length;\n    this.instanceCount = instance.count;\n  }\n\n  delete(): void {\n    this.vao.delete();\n  }\n\n  paint(_time: number, _delay: number): void {\n    const {\n      context,\n      prg,\n      vao,\n      colorTexture,\n      vertexCount,\n      instanceCount,\n      light,\n      radiusMultiplier,\n      radiusConstant,\n      radiusSwitch,\n      shiftZ,\n    } = this;\n    const { gl, camera } = context;\n    prg.use();\n    const minRadius =\n      (this.minRadius * camera.spaceHeightAtTarget) /\n      (camera.zoom * camera.screenHeight);\n    prg.uniform1f(\"uniMinRadius\", minRadius);\n    prg.uniform1f(\"uniLight\", light);\n    prg.uniform1f(\"uniShiftZ\", shiftZ);\n    prg.uniform1f(\"uniRadiusMultiplier\", radiusMultiplier);\n    prg.uniform1f(\"uniRadiusConstant\", radiusConstant);\n    prg.uniform1f(\"uniRadiusSwitch\", radiusSwitch);\n    colorTexture.activate(prg, \"uniTexture\");\n    prg.uniformMatrix4fv(\"uniModelViewMatrix\", camera.matrixModelView);\n    prg.uniformMatrix4fv(\"uniProjectionMatrix\", camera.matrixProjection);\n    vao.bind();\n    gl.drawElementsInstanced(\n      gl.TRIANGLES,\n      vertexCount,\n      gl.UNSIGNED_BYTE,\n      0,\n      instanceCount\n    );\n  }\n}\n\ntype InstanceDataset = TgdDataset;\n\nexport class TgdPainterSegmentsData {\n  private _count = 0;\n  private readonly attAxyzr: number[] = [];\n  private readonly attAuv: number[] = [];\n  private readonly attAinfluence: number[] = [];\n  private readonly attBxyzr: number[] = [];\n  private readonly attBuv: number[] = [];\n  private readonly attBinfluence: number[] = [];\n\n  get count() {\n    return this._count;\n  }\n\n  /**\n   * @param Axyzr (x,y,z) and radius of point A.\n   * @param Bxyzr (x,y,z) and radius of point B.\n   * @param Auv\n   * @param Buv\n   * @param radiusMultiplierInfluenceA\n   * @param radiusMultiplierInfluenceB\n   */\n  add(\n    Axyzr: ArrayNumber4,\n    Bxyzr: ArrayNumber4,\n    Auv: ArrayNumber2 = [0, 0],\n    Buv: ArrayNumber2 = [0, 0],\n    radiusMultiplierInfluenceA = 1,\n    radiusMultiplierInfluenceB = 1\n  ) {\n    this.attAxyzr.push(...Axyzr);\n    this.attAuv.push(...Auv);\n    this.attAinfluence.push(radiusMultiplierInfluenceA);\n    this.attBxyzr.push(...Bxyzr);\n    this.attBuv.push(...Buv);\n    this.attBinfluence.push(radiusMultiplierInfluenceB);\n    this._count++;\n  }\n\n  makeDataset(): InstanceDataset {\n    const dataset = new TgdDataset(\n      {\n        attAxyzr: \"vec4\",\n        attAuv: \"vec2\",\n        attAinfluence: \"float\",\n        attBxyzr: \"vec4\",\n        attBuv: \"vec2\",\n        attBinfluence: \"float\",\n      },\n      {\n        divisor: 1,\n      }\n    );\n    dataset.set(\"attAxyzr\", new Float32Array(this.attAxyzr));\n    dataset.set(\"attAuv\", new Float32Array(this.attAuv));\n    dataset.set(\"attAinfluence\", new Float32Array(this.attAinfluence));\n    dataset.set(\"attBxyzr\", new Float32Array(this.attBxyzr));\n    dataset.set(\"attBuv\", new Float32Array(this.attBuv));\n    dataset.set(\"attBinfluence\", new Float32Array(this.attBinfluence));\n    return dataset;\n  }\n}\n\ntype CapsuleDataset = TgdDataset;\n\n/**\n * The capsule is a 2D shape (x,y) that will be uses\n * as a pattern for the segment.\n * The segment will expand this template along Y axis.\n * The tip pointing toward +Y is called A.\n * The tip pointing toward -Y is called B.\n * The z coodinates indicates to which tip the point\n * is attached: 0 for A and 1 for B.\n */\nfunction makeCapsule(roundness: number): {\n  capsule: CapsuleDataset;\n  elements: Uint8Array;\n} {\n  // prettier-ignore\n  const offset: number[] =[\n         0, 0, 0,\n         1, 0, 0,\n        -1, 0, 0,\n         0, 0, 1,\n         1, 0, 1,\n        -1, 0, 1,\n    ]\n  // prettier-ignore\n  const elements: number[] = [\n        0, 3, 1,\n        3, 4, 1,\n        0, 2, 5,\n        3, 0, 5,\n    ]\n  if (roundness > 0) {\n    let oldIndexA = 1;\n    let oldIndexB = 4;\n    let elemIndex = 6;\n    for (let i = 0; i < roundness; i++) {\n      const ang = (Math.PI * (i + 1)) / (roundness + 1);\n      const x = Math.cos(ang);\n      const y = Math.sin(ang);\n      // We set z to 0 because it's related to tip A.\n      offset.push(x, y, 0);\n      elements.push(0, oldIndexA, elemIndex);\n      oldIndexA = elemIndex;\n      elemIndex++;\n      // We set z to 1 because it's related to tip B.\n      offset.push(x, -y, 1);\n      elements.push(3, elemIndex, oldIndexB);\n      oldIndexB = elemIndex;\n      elemIndex++;\n    }\n    elements.push(0, oldIndexA, 2);\n    elements.push(3, 5, oldIndexB);\n  }\n  const capsule: CapsuleDataset = new TgdDataset({\n    attOffset: \"vec3\",\n  });\n  capsule.set(\"attOffset\", new Float32Array(offset));\n  return {\n    capsule,\n    elements: new Uint8Array(elements),\n  };\n}\n","export * from \"./segments\"\n","import { TgdProgram, TgdTextureCube, TgdTextureCubeOptions } from \"@tgd/types\"\nimport { TgdContext } from \"@tgd/context\"\nimport { TgdPainter } from \"@tgd/painter/painter\"\nimport { TgdDataset } from \"@tgd/dataset/dataset\"\nimport { TgdVertexArray } from \"@tgd/vao\"\nimport { TgdCameraPerspective } from \"@tgd/camera\"\nimport { TgdMat4 } from \"@tgd/math\"\n\nimport VERT from \"./skybox.vert\"\nimport FRAG from \"./skybox.frag\"\n\nexport type TgdPainterSkyboxOptions = TgdTextureCubeOptions & {\n    camera?: TgdCameraPerspective\n}\n\nexport class TgdPainterSkybox extends TgdPainter {\n    public camera: TgdCameraPerspective\n\n    private readonly texture: TgdTextureCube\n    private readonly program: TgdProgram\n    private readonly vao: TgdVertexArray\n    private readonly matrix = new TgdMat4()\n    private readonly tmpMat = new TgdMat4()\n\n    constructor(\n        private readonly context: TgdContext,\n        options: TgdPainterSkyboxOptions\n    ) {\n        super()\n        this.camera = options.camera ?? new TgdCameraPerspective()\n        this.texture = context.texturesCube.create(options)\n        this.program = context.programs.create({\n            vert: VERT,\n            frag: FRAG,\n        })\n        const dataset = new TgdDataset({\n            attPoint: \"vec2\",\n        })\n        dataset.set(\n            \"attPoint\",\n            new Float32Array([-1, +1, +1, +1, -1, -1, +1, -1])\n        )\n        this.vao = context.createVAO(this.program, [dataset])\n    }\n\n    delete(): void {\n        const { vao } = this\n        vao.delete()\n    }\n\n    paint(): void {\n        const { context, vao, program, texture } = this\n        const { gl } = context\n\n        program.use()\n        program.uniformMatrix4fv(\"uniMatrix\", this.matrix)\n        texture.activate(program, \"uniTexture\")\n        vao.bind()\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n\n        // Compute matrix for the next frame.\n        const { camera, matrix, tmpMat } = this\n        if (camera !== context.camera) {\n            camera.orientation = context.camera.orientation\n        }\n        matrix.from(camera.matrixProjection)\n        tmpMat.fromMat3(camera.matrixModelView)\n        tmpMat.m30 = 0\n        tmpMat.m31 = 0\n        tmpMat.m32 = 0\n        tmpMat.m33 = 1\n        tmpMat.m03 = 0\n        tmpMat.m13 = 0\n        tmpMat.m23 = 0\n        matrix.multiply(tmpMat).invert()\n    }\n}\n","export * from \"./skybox\"\n","export * from \"./axis\";\nexport * from \"./background\";\nexport * from \"./clear\";\nexport * from \"./depth\";\nexport * from \"./group\";\nexport * from \"./logic\";\nexport * from \"./node\";\nexport * from \"./segments\";\nexport * from \"./skybox\";\n","export abstract class TgdPainter {\n    public active: boolean = true\n\n    abstract delete(): void\n\n    abstract paint(time: number, delay: number): void\n}\n","export function clamp(value: number, min: number, max: number): number {\n    if (value < min) return min\n    if (value > max) return max\n    return value\n}\n\nexport function mix(a: number, b: number, t: number): number {\n    return (1 - t) * a + t * b\n}\n","import { TgdVec3 } from \"../tgd\";\nimport { CellNodeType, CellNode } from \"../types\";\n\nexport interface Branch {\n  node: CellNode;\n  children: Branch[];\n}\n\nexport class CellNodes {\n  public readonly nodeTypes: number[];\n  public readonly averageRadius: number;\n  public readonly center: TgdVec3;\n  public readonly bbox: TgdVec3;\n  public readonly tree: Branch;\n\n  private readonly nodesByIndex = new Map<number, CellNode>();\n\n  constructor(private readonly nodes: CellNode[]) {\n    let totalRadius = 0;\n    let countRadius = 0;\n    nodes.forEach((node) => {\n      if (node.type !== CellNodeType.Soma) {\n        totalRadius += node.radius;\n        countRadius++;\n      }\n      this.nodesByIndex.set(node.index, node);\n    });\n    this.averageRadius = countRadius === 0 ? 0 : totalRadius / countRadius;\n    const setNodeTypes = new Set<number>();\n    nodes.forEach((node) => {\n      setNodeTypes.add(node.type);\n      if (node.radius === 0) node.radius = this.averageRadius;\n    });\n    const { center, bbox } = computeNodesCenterAndBBox(nodes);\n    this.center = center;\n    this.bbox = bbox;\n    this.tree = this.buildTree();\n    this.nodeTypes = Array.from(setNodeTypes);\n  }\n\n  getByIndex(index: number): CellNode | undefined {\n    return this.nodesByIndex.get(index);\n  }\n\n  forEach(callback: (node: CellNode, index: number) => void) {\n    this.nodes.forEach(callback);\n  }\n\n  computeDistancesFromSoma(): number {\n    const { nodes } = this;\n    const mapNodes = new Map<number, CellNode>();\n    const mapDistances = new Map<number, number>();\n    nodes.forEach((node) => mapNodes.set(node.index, node));\n    let maxDist = 0;\n    nodes.forEach((node) => {\n      const dist = computeDistanceFromSoma(node, mapNodes, mapDistances);\n      node.u = dist;\n      maxDist = Math.max(maxDist, dist);\n    });\n    if (maxDist === 0) return 0;\n\n    // Normalize U coordinate.\n    // 1.0 will be the further from the soma.\n    const factor = 1 / maxDist;\n    nodes.forEach((node) => (node.u *= factor));\n    return maxDist;\n  }\n\n  private buildTree(): Branch {\n    const { nodes } = this;\n    if (nodes.length === 0) throw Error(\"There are no nodes in this file!\");\n\n    let [root] = nodes;\n    const branches = new Map<number, Branch>();\n    nodes.forEach((node) => {\n      const branch: Branch = { node, children: [] };\n      branches.set(node.index, branch);\n      if (node.parent === -1) {\n        root = node;\n      } else if (node.index === node.parent) {\n        console.error(`Node #${node.index} has itself has a parent!`);\n      } else {\n        const parent = branches.get(node.parent);\n        if (parent) {\n          parent.children.push(branch);\n        } else {\n          console.error(\n            `Node #${node.index} has #${node.parent} as a parent, which is not yet defined!`\n          );\n        }\n      }\n    });\n    const tree = branches.get(root.index);\n    if (!tree) {\n      throw Error(\n        \"Impossible error! There must be a bug in CellNodes.buildTree().\"\n      );\n    }\n    return tree;\n  }\n}\n\nfunction computeDistanceFromSoma(\n  node: CellNode,\n  mapNodes: Map<number, CellNode>,\n  mapDistances: Map<number, number>\n): number {\n  // Root has a distance of 0 from the Soma.\n  if (node.parent < 0) return 0;\n\n  if (mapDistances.has(node.index))\n    return mapDistances.get(node.index) as number;\n\n  const parent = mapNodes.get(node.parent);\n  // Should never be the case, but if we are not\n  // linked to the soma, the distance is 0.\n  if (!parent) return 0;\n\n  const dx = parent.x - node.x;\n  const dy = parent.y - node.y;\n  const dz = parent.z - node.z;\n  const dist =\n    Math.sqrt(dx * dx + dy * dy + dz * dz) +\n    computeDistanceFromSoma(parent, mapNodes, mapDistances);\n  mapDistances.set(node.index, dist);\n  return dist;\n}\n\nfunction computeNodesCenterAndBBox(nodes: CellNode[]) {\n  const [firstNode] = nodes;\n  if (!firstNode)\n    throw Error(\n      \"Unable to compute bounding box because the nodes array is empty!\"\n    );\n\n  const center = new TgdVec3(firstNode.x, firstNode.y, firstNode.z);\n  const min = new TgdVec3(center);\n  const max = new TgdVec3(center);\n  const average = new TgdVec3(center);\n  let somaCount = 1;\n  for (const { x, y, z, radius, index, type, parent } of nodes) {\n    if (index === firstNode.index) continue;\n\n    const point = new TgdVec3(x, y, z);\n    if (parent === -1) center.from(point);\n    if (type === CellNodeType.Soma) {\n      average.add(point);\n      somaCount++;\n    }\n    min[0] = Math.min(min[0], point[0] - radius);\n    max[0] = Math.max(max[0], point[0] + radius);\n    min[1] = Math.min(min[1], point[1] - radius);\n    max[1] = Math.max(max[1], point[1] + radius);\n    min[2] = Math.min(min[2], point[2] - radius);\n    max[2] = Math.max(max[2], point[2] + radius);\n  }\n  average.scale(1 / somaCount);\n  min.subtract(average);\n  max.subtract(average);\n  return {\n    center: average,\n    bbox: new TgdVec3(\n      Math.max(Math.abs(min[0]), Math.abs(max[0])),\n      Math.max(Math.abs(min[1]), Math.abs(max[1])),\n      Math.max(Math.abs(min[2]), Math.abs(max[2]))\n    ),\n  };\n}\n","export type ColoringType = \"section\" | \"distance\";\n\nexport interface CellNode {\n  /** Unique ID of this segment. */\n  index: number;\n  /** Index of the parent of this node. Can be `-1` if no parent is available. */\n  parent: number;\n  type: CellNodeType;\n  x: number;\n  y: number;\n  z: number;\n  radius: number;\n  /** Used to set the distance to the soma, normalized between 0 and 1. */\n  u: number;\n  /** Type of segment (soma, axon, apical dendrite, ...) normalized between 0 and 1. */\n  v: number;\n}\n\nexport enum CellNodeType {\n  Soma = 1,\n  Axon = 2,\n  BasalDendrite = 3,\n  ApicalDendrite = 4,\n  Unknown = 666,\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"scalebar_main__7tE8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"legend\":\"legend_legend__NpS5a\",\"continue\":\"legend_continue__B7rB7\",\"colorramp\":\"legend_colorramp___T8nq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"swc-viewer_main__Fpy95\",\"gizmo\":\"swc-viewer_gizmo__VrnMg\",\"scalebar\":\"swc-viewer_scalebar__DiARD\",\"busy\":\"swc-viewer_busy__YuDwL\",\"anim-rotate\":\"swc-viewer_anim-rotate__v2zro\",\"error\":\"swc-viewer_error___DfSS\"};"],"names":["__webpack_exports__","Z","title","list","value","onSelect","color","theme","className","block","grow","param","handleSelectedElement","element","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","concat","role","jsx","p","map","aria-checked","tabIndex","onClick","layers","default","hover","selected","selectedEdges","graphTheme","red","blue","green","purple","yellow","themeColors","experimental_data","reconstruction_data","digital_reconstruction","validations","predictions","neuriteTypes","volumeSections","achConcentrations","cellGroup","defaultSelection","experimentalData","layerAnatomy","layer","neuronMorphology","mtype","instance","neuronElectrophysiology","etype","etype_instance","reconstructionData","volume","volume_section","cellComposition","neurons","digitalReconstruction","region","morphologyLibrary","morphology","schafferCollateral","prelayer","postlayer","connectionAnatomy","connectionPhysiology","acetylcholineEffectsOnCell","acetylcholineEffectsOnSynapses","ach_concentration","NeuronModelLibrary","synapticPathways","acetylcholine","neuriteColor","all","axon","apical","basal","dendrite","soma","forEachLine","content","len","length","index","cursor","indexOf","substring","trim","Segments","count","_count","addSegment","indexNodeA","indexNodeB","data","elemA","elemByIndex","get","elemB","nodeAxyzr","nodesXYZR","nodeBxyzr","nodeAuv","nodesUV","nodeBuv","influenceA","nodesInfluence","influenceB","influenceC","aV","bV","pushA","pushB","add","xA","yA","zA","rA","xB","yB","zB","rB","nodeCxyzr","_data","TgdPainterSegmentsData","i","attAxyzr","Axyzr","Auv","attAuv","Ainfluence","attAinfluence","Bxyzr","attBxyzr","Buv","attBuv","Binfluence","attBinfluence","xyzr","uv","influence","push","constructor","nodes","Map","forEach","type","x","y","z","radius","u","v","elem","CellNodeType","Soma","set","TipsPainter","TgdPainter","delete","vao","paint","camera","context","prg","gl","orientation","screenWidth","width","screenHeight","height","use","texture","activate","uniform1f","uniformMatrix4fv","matrixModelView","matrixProjection","bind","drawArrays","POINTS","setTips","canvas","ctx","tgdCanvasCreateWithContext2D","SIZE","paintDisk","loadImage","TgdCameraPerspective","distance","target","TgdVec3","fovy","Math","PI","near","far","textures2D","create","minFilter","magFilter","TgdDataset","attPos","attUV","Float32Array","X","programs","vert","frag","createVAO","col","row","size","text","colorBack","colorText","r","fillStyle","beginPath","ellipse","fill","font","textAlign","textBaseline","fillText","GizmoCanvas","attachCamera","_camera","_canvas","_this__tipsPainter","inputs","pointer","eventTap","removeListener","handleTap","destroy","orbiter","_orbiter","detach","_tipsPainter","TgdContext","alpha","depth","antialias","name","addListener","TgdControllerCameraOrbit","speedPanning","speedZoom","eventChange","eventOrbit","dispatch","cam","painter","TgdPainterClear","TgdPainterDepth","enabled","TgdEvent","eventTipClick","origin","direction","castRay","evt","bestDist","bestName","tip","TIPS","dist","distanceToLineSquared","quat","TgdQuat","face","isEqual","rotateAroundY","from","to","computeScalebarAttributes","pixelScale","preferedSizeInPixels","units","nm","µm","mm","m","km","values","arguments","unit","Object","keys","factor","targetWithUnit","sizeInPixel","Scalebar","pixelScaleWatcher","ref","useRef","scalebar","useScalebar","setScalebar","useState","options","useEffect","update","eventPixelScaleChange","current","getContext","w","clientWidth","h","clientHeight","strokeStyle","fontHeight","moveTo","lineTo","stroke","jsx_runtime","styles","PixelScaleWatcher","_context","eventResize","handleCameraChange","eventTransformChange","previousCameraHeight","spaceHeightAtTarget","zoom","previousCameraZoom","previousViewportHeight","spaceHeight","cameraZoom","Legend","Array","isArray","label","style","background","labelMin","colorRamp","join","labelMax","COLORS","DEFAULT_LEGEND","defaultTextLoader","url","resp","fetch","morphologies","parseSwc","rawLine","line","stripComment","pos","items","split","rawType","parent","Number","s","Unknown","getIndexFromType","Axon","BasalDendrite","ApicalDendrite","CellNodes","colors","ex","console","error","Error","SwcViewer","href","loader","legend","initialLegend","setLegend","React","busy","setBusy","setError","refWatcher","refContainer","refCanvas","refGizmo","refContext","useViewerInit","refQueryCounter","action","queryId","viewOptions","removeAll","TgdCameraOrthographic","minZoom","maxZoom","inertiaOrbit","fixedTarget","gizmo","interpolateCamera","journey","animSchedule","tgdActionCreateCameraInterpolation","duration","easingFunction","tgdEasingFunctionInOutCubic","func","mask","rangeMin","rangeMax","minY","MAX_VALUE","maxY","minRadius","roundness","center","halfHeight","bbox","min","max","nodesToSegmentsData","segments","childIndex","parentIndex","childType","getByIndex","parentType","TgdPainterSegments","colorTexture","wrapR","wrapS","wrapT","makePalette","painterOutline","radiusMultiplier","light","shiftZ","abs","scale","msg","message","JSON","stringify","handleFullscreen","tgdFullscreenToggle","classNames","onDoubleClick","button","svg","xmlns","viewBox","path","d","TgdMat3","transpose","tmp","m10","m01","m20","m02","m21","m12","fromQuat","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","m00","m11","m22","toAxis","axisX","axisY","axisZ","toAxisX","toAxisY","toAxisZ","debug","caption","c0","padColOfNumbers","c1","c2","log","TgdCamera","_near","dirtyProjection","_far","screenAspectRatio","_screenAspectRatio","_screenWidth","_screenHeight","getSpaceHeightAtTarget","setSpaceHeightAtTarget","spaceWidthAtTarget","_orientation","dirtyModelView","dirtyAxis","_target","copyProjectionFrom","updateAxisIfNeeded","_axisX","_axisY","_axisZ","updateIfNeeded","_matrixModelView","matrixModelViewInverse","dirtyModelViewInverse","_matrixModelViewInverse","invert","matrixProjectionInverse","dirtyProjectionInverse","_matrixProjectionInverse","setOrientation","position","_position","setTarget","shift","_shift","setShift","_distance","_zoom","moveTarget","tmpVec3","addWithScale","moveShift","sx","sy","sz","reset","_dirtyModelView","orbitAroundX","angleInRadians","rotateAround","fromAxis","orbitAroundY","orbitAroundZ","updateAxis","tmpMat3","mat","tx","ty","tz","ax","ay","az","applyMatrix","m30","m31","m32","fromMat3","_dirtyAxis","_dirtyProjection","Infinity","TgdMat4","incrementalId","qx","qy","qz","qw","screenX","screenY","_ray","_spaceHeight","updateProjectionIfNeeded","_matrixProjection","top","bottom","right","left","out","lr","bt","nf","atan","subtract","normalize","_fovy","tan","aspect","f","initialize","attributesDefinition","divisor","stride","definitions","ArrayBuffer","def","dimension","DIMS","byteOffset","bytesPerElement","BYTES_PER_ELEMENT","getter","view","byteLength","getFloat32","setter","setFloat32","addAttributes","oldDataset","clone","key","oldType","newType","attribName","newDataset","attributesNames","getAttribAccessor","idx","getDef","dim","ds","src","DataView","dst","offset","setUint8","getUint8","resize","byteStride","first","targetFirst","attribByteOffset","buffer","chunkLength","srcStride","srcOffset","dstStride","dstOffset","floor","srcStop","dstStop","srcBuffer","Uint8Array","dstBuffer","subarray","String","defineAttributes","offsetDestination","hasAttribute","att","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","vertexAttribDivisor","bytes","toCode","indent","lines","usage","float","vec2","vec3","vec4","prototype","transfer","buff","newSize","inBuff","outBuff","decimals","pow","val","n","round","txt","toFixed","padStart","listener","listeners","Set","TgdBuffer","bindBuffer","bufferData","_usage","deleteBuffer","createBuffer","TgdInputKeyboardImpl","attached","document","removeEventListener","handleKeyDown","handleKeyUp","isUp","_len","_key","isDown","keysDown","has","hasClicked","keysUp","eventKeyPress","addEventListener","TgdInputPointerImpl","handlePointerDown","handleCanvasWheel","handleContextMenu","handlePointerMove","handlePointerUp","getPoint","controlKeys","altKey","buttons","ctrlKey","metaKey","shiftKey","getBoundingClientRect","clientX","clientY","t","timeStamp","fingersCount","eventMoveStart","eventMove","eventMoveEnd","eventZoom","tapDelay","start","previous","pointerEvent","preventDefault","delta","deltaX","deltaY","deltaZ","isPrimary","setPointerCapture","pointerId","stopPropagation","point","TgdInputs","keyboard","_keyboard","_pointer","counter","TgdResource","input","id","_this_references_get","makeKeyFromInput","refCount","references","object","actualCreate","objects","actualDelete","_input","TgdProgramImpl","code","program","loc","getUniformLocation","uniformsLocations","names","warn","location","uniform2f","uniform3f","uniform3fv","uniform4f","uniform4fv","uniform1i","uniform2i","uniform3i","uniform4i","uniform1ui","uniform2ui","uniform3ui","uniform4ui","mat4","useProgram","shaders","shader","deleteShader","deleteProgram","createShader","shaderSource","compileShader","info","getShaderInfoLog","errorLines","getErrorLines","logCode","getUniformsLocations","getProgramParameter","ACTIVE_UNIFORMS","uniforms","uniform","getActiveUniform","createProgram","vertShader","attachShader","fragShader","linkProgram","LINK_STATUS","getProgramInfoLog","detachShader","RX_ERROR_LINE","messages","lastIndex","match","exec","parseInt","bold","errors","num","prefix","includes","TgdResourceProgram","TgdLoaderImage","image","Promise","resolve","img","Image","onload","onerror","createElement","naturalWidth","naturalHeight","drawImage","destination","beginSpaceHeightAtTarget","beginDistance","beginZoom","beginOrientation","beginTarget","beginShift","endSpaceHeightAtTarget","endDistance","endZoom","endOrientation","endTarget","endShift","mix","fromSlerp","fromMix","settings","tgdEasingFunctionOutQuad","tgdFullscreenRequest","navigationUI","requestFullscreen","tgdFullscreenExit","fullscreenElement","exitFullscreen","tgdFullscreenTest","root","parentElement","TgdTexture2DImpl","getParameter","glTexture","bindTexture","TEXTURE_2D","getTexParameter","columns","clamp","ceil","fillRect","fillHorizontalGradient","fillGradient","fillverticalGradient","dirX","dirY","gradient","createLinearGradient","addColorStop","deleteTexture","_image","_width","_height","uniformName","slot","activeTexture","TEXTURE0","then","catch","texImage2D","RGBA","UNSIGNED_BYTE","generateMipmap","eventImageUpdate","_this_options_format","internalFormat","createTexture","generateMipMap","format","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TgdTextureCubeImpl","ready","numberOfImagesToLoad","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","LINEAR_MIPMAP_LINEAR","TEXTURE_CUBE_MAP_POSITIVE_X","imagePosX","TEXTURE_CUBE_MAP_NEGATIVE_X","imageNegX","TEXTURE_CUBE_MAP_POSITIVE_Y","imagePosY","TEXTURE_CUBE_MAP_NEGATIVE_Y","imageNegY","TEXTURE_CUBE_MAP_POSITIVE_Z","imagePosZ","TEXTURE_CUBE_MAP_NEGATIVE_Z","imageNegZ","TgdResourceTexture2D","getDefaultEmpty","TgdResourceTextureCube","TgdVertexArray","_this_datasets","_this_datasets1","datasets","dataset","bindVertexArray","unbind","drawBuffers","elemBuffer","deleteVertexArray","elements","createVertexArray","TgdPainterGroup","forEachChild","callback","painters","child","remove","splice","time","delay","_this_onEnter","_this_onExit","active","onEnter","call","onExit","TgdManagerAnimation","schedule","animation","repeat","animations","inverseDuration","loop","cancel","anim","texturesCube","_texturesCube","result","animationManager","animCancel","drawingBufferWidth","drawingBufferHeight","playing","isPlaying","play","pause","createFramebuffer","fb","takeSnapshot","tgdCanvasCreate","actualPaint","lastTime","finish","lookupWebglConstant","window","cancelAnimationFrame","requestAnimationFrame","observer","unobserve","stateReset","numAttribs","MAX_VERTEX_ATTRIBS","ARRAY_BUFFER","ii","disableVertexAttribArray","vertexAttrib1f","numTextureUnits","MAX_TEXTURE_IMAGE_UNITS","ELEMENT_ARRAY_BUFFER","bindFramebuffer","FRAMEBUFFER","bindRenderbuffer","RENDERBUFFER","disable","BLEND","CULL_FACE","DEPTH_TEST","DITHER","SCISSOR_TEST","blendColor","blendEquation","FUNC_ADD","blendFunc","ONE","ZERO","clearColor","clearDepth","clearStencil","colorMask","cullFace","BACK","depthFunc","LESS","depthMask","depthRange","frontFace","CCW","hint","GENERATE_MIPMAP_HINT","DONT_CARE","lineWidth","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","polygonOffset","sampleCoverage","scissor","stencilFunc","ALWAYS","stencilMask","stencilOp","KEEP","viewport","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","ResizeObserver","onResize","observe","touchAction","handleMove","handleZoom","orbit","slowDown","speed","speedOrbit","fireOrbitChange","handlePan","inverseZoom","panSpeed","dx","dy","handleRotateAroundZ","x1","y1","ang","atan2","fireZoomChange","inertiaZoom","inertiaPanning","onZoomRequest","alwaysTrue","animOrbit","dt","handleMoveStart","handleMoveEnd","inverseDeltaTime","previousAlpha","dz","multiply","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","m03","m13","m23","m33","b04","b05","b06","b07","b08","b09","det","invDet","translation","vec","c3","TgdVec4","isClose","epsilon","vectors","dot","sqrt","squareLength","rx","ry","rz","rw","a","b","scale0","scale1","aw","bx","by","bz","bw","cosom","omega","acos","inverseSinom","sin","Y","fTrace","fRoot","halfRoot","axis","j","k","rotateAroundX","rad","cos","rotateAroundZ","FACES","A","newFromMix","v1","v2","C","S","Vx","Vy","Vz","Kx","Ky","Kz","crossX","crossY","crossZ","normalizedDirection","mx","my","mz","ox","oy","oz","OH","cross","z1","random","clearMask","hasAnyOption","enable","_time","_delay","vertexCount","instanceCount","radiusConstant","radiusSwitch","drawElementsInstanced","TRIANGLES","factory","tex","capsule","makeCapsule","oldIndexA","oldIndexB","elemIndex","attOffset","makeDataset","radiusMultiplierInfluenceA","radiusMultiplierInfluenceB","nodesByIndex","computeDistancesFromSoma","mapNodes","mapDistances","node","maxDist","computeDistanceFromSoma","buildTree","branches","branch","children","tree","totalRadius","countRadius","averageRadius","setNodeTypes","computeNodesCenterAndBBox","firstNode","average","somaCount","nodeTypes","module","exports"],"sourceRoot":""}