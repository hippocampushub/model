{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_highlight_haml.9a765fad525c9a52.js","mappings":"saAoHAA,EAAAC,OAAA,CA3GA,SAAAC,CAAA,EACA,OACAC,KAAA,OACAC,iBAAA,GACAC,SAAA,CACA,CACAC,UAAA,OACAC,MAAA,gEACAC,UAAA,EACA,EAEAN,EAAAO,OAAA,CACA,wBACA,GACA,CACAD,UAAA,CACA,GAEA,CACAD,MAAA,qBACAG,OAAA,CACAC,IAAA,MACAC,YAAA,MACA,CACA,EACA,CACAN,UAAA,MACAC,MAAA,SACAF,SAAA,CACA,CACAC,UAAA,eACAC,MAAA,MACA,EACA,CACAD,UAAA,cACAC,MAAA,UACA,EACA,CACAD,UAAA,iBACAC,MAAA,YACA,EACA,CACAA,MAAA,QACAI,IAAA,QACAN,SAAA,CACA,CACAE,MAAA,cACAI,IAAA,QACAE,YAAA,GACAC,eAAA,GACAT,SAAA,CACA,CACAC,UAAA,OACAC,MAAA,OACA,EACAL,EAAAa,gBAAA,CACAb,EAAAc,iBAAA,CACA,CACAT,MAAA,OACAC,UAAA,CACA,EACA,EAEA,EAEA,CACAD,MAAA,UACAI,IAAA,UACAM,WAAA,GACAZ,SAAA,CACA,CACAE,MAAA,YACAI,IAAA,OACAE,YAAA,GACAC,eAAA,GACAT,SAAA,CACA,CACAC,UAAA,OACAC,MAAA,OACAC,UAAA,CACA,EACAN,EAAAa,gBAAA,CACAb,EAAAc,iBAAA,CACA,CACAT,MAAA,OACAC,UAAA,CACA,EACA,EAEA,EAEA,EAEA,CACAD,MAAA,eACA,EACA,CACAA,MAAA,MACAG,OAAA,CACAC,IAAA,KACAC,YAAA,MACA,CACA,EACA,CAEA","sources":["webpack://_N_E/./node_modules/highlight.js/lib/languages/haml.js","webpack://_N_E/<anon>"],"sourcesContent":["/*\nLanguage: HAML\nRequires: ruby.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://haml.info\nCategory: template\n*/\n\n// TODO support filter tags like :javascript, support inline HTML\nfunction haml(hljs) {\n  return {\n    name: 'HAML',\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '^!!!( (5|1\\\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\\\b.*))?$',\n        relevance: 10\n      },\n      // FIXME these comments should be allowed to span indented lines\n      hljs.COMMENT(\n        '^\\\\s*(!=#|=#|-#|/).*$',\n        false,\n        {\n          relevance: 0\n        }\n      ),\n      {\n        begin: '^\\\\s*(-|=|!=)(?!#)',\n        starts: {\n          end: '\\\\n',\n          subLanguage: 'ruby'\n        }\n      },\n      {\n        className: 'tag',\n        begin: '^\\\\s*%',\n        contains: [\n          {\n            className: 'selector-tag',\n            begin: '\\\\w+'\n          },\n          {\n            className: 'selector-id',\n            begin: '#[\\\\w-]+'\n          },\n          {\n            className: 'selector-class',\n            begin: '\\\\.[\\\\w-]+'\n          },\n          {\n            begin: /\\{\\s*/,\n            end: /\\s*\\}/,\n            contains: [\n              {\n                begin: ':\\\\w+\\\\s*=>',\n                end: ',\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: ':\\\\w+'\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            begin: '\\\\(\\\\s*',\n            end: '\\\\s*\\\\)',\n            excludeEnd: true,\n            contains: [\n              {\n                begin: '\\\\w+\\\\s*=',\n                end: '\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: '\\\\w+',\n                    relevance: 0\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: '^\\\\s*[=~]\\\\s*'\n      },\n      {\n        begin: /#\\{/,\n        starts: {\n          end: /\\}/,\n          subLanguage: 'ruby'\n        }\n      }\n    ]\n  };\n}\n\nmodule.exports = haml;\n"],"names":["module","exports","hljs","name","case_insensitive","contains","className","begin","relevance","COMMENT","starts","end","subLanguage","returnBegin","endsWithParent","APOS_STRING_MODE","QUOTE_STRING_MODE","excludeEnd"],"sourceRoot":""}