{"version":3,"file":"static/chunks/5653-112d3de08e6e4747.js","mappings":"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","sources":["webpack://_N_E/./src/components/Unit/index.tsx","webpack://_N_E/./src/components/Factsheet/index.tsx","webpack://_N_E/./src/components/HttpData/index.tsx","webpack://_N_E/./src/components/NumberFormat/index.tsx","webpack://_N_E/./src/components/StickyContainer/index.tsx","webpack://_N_E/./src/components/Term/index.tsx","webpack://_N_E/./src/components/VolumeSectionSelector3D/index.tsx","webpack://_N_E/./src/constants.ts","webpack://_N_E/./src/hoc/with-preselection.tsx","webpack://_N_E/./src/components/StickyContainer/styles.module.scss","webpack://_N_E/./src/components/Term/styles.module.scss","webpack://_N_E/./src/components/VolumeSectionSelector3D/styles.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\n\ntype UnitProps = {\n  value?: string;\n}\n\nconst replacement = {\n  MOhm: 'MΩ',\n};\n\nconst Unit: React.FC<UnitProps> = ({ value = '' }) => {\n  return (\n    <>\n      {replacement[value] ?? value}\n    </>\n  );\n};\n\n\nexport default Unit;\n","import React from 'react';\nimport NumberFormat from '../NumberFormat';\nimport isNil from 'lodash/isNil';\n\nimport Unit from '../Unit';\nimport { termFactory } from '@/components/Term';\n\nconst Term = termFactory();\n\nconst classPrefix = 'factsheet__';\n\nexport type FactsheetEntryType = {\n  name: string;\n  description: string;\n  units?: string;\n  value?: number | string;\n  values?: number[];\n  value_map?: {\n    [key: string]: string | number;\n  };\n};\n\ntype FactsheetProps = {\n  facts: FactsheetEntryType[];\n  className?: string;\n};\n\nconst FactsheetSingleValueEntry: React.FC<{\n  fact: FactsheetEntryType;\n}> = ({\n  fact\n}) => {\n    return (\n      <div className=\"row mt-1\">\n        <div className=\"col-xs-6 col-sm-4 name\">\n          <Term term={fact.name} description={fact.description} />\n        </div>\n        <div className=\"col-xs-6 col-sm-8 value\">\n          {isNil(fact.value)\n            ? (<span>-</span>)\n            : (<span>\n              <NumberFormat value={fact.value} /> <Unit value={fact.units} />\n            </span>)\n          }\n        </div>\n      </div>\n    );\n  };\n\nconst FactsheetSingleMeanStdEntry: React.FC<{\n  fact: FactsheetEntryType;\n}> = ({\n  fact,\n}) => {\n    const mean = fact.value_map?.mean ?? (fact.values?.[0] ?? '-');\n    const std = fact.value_map?.std ?? (fact.values?.[1] ?? '-');\n\n    const formatValue = (value: string | number) => {\n      if (typeof value === 'number') {\n        return value.toFixed(3);\n      }\n      return value;\n    };\n\n    const formatNumberWithoutCommas = (value: string | number) => {\n      if (typeof value === 'number') {\n        return value.toString().replace(/,/g, '');\n      }\n      return value;\n    };\n\n    return (\n      <div className=\"row mt-1\">\n        <div className=\"col-xs-4 name\">\n          <Term term={fact.name} description={fact.description} />\n        </div>\n        <div className=\"col-xs-4 value\">\n          {formatNumberWithoutCommas(formatValue(mean))}\n          {std !== '-' ? <> ± {formatNumberWithoutCommas(formatValue(std))}</> : ''}\n          {fact.units && <> {fact.units}</>}\n        </div>\n      </div>\n    );\n  };\n\nconst FactsheetMapValueEntry: React.FC<{\n  fact: FactsheetEntryType\n}> = ({\n  fact,\n}) => {\n    // @ts-ignore\n    const maxVal = Math.max.apply(null, Object.values(fact.value_map).map(s => parseFloat(s as string)));\n    const unitCode = fact.units;\n\n    // @ts-ignore\n    const valueColumn = Object.entries(fact.value_map).map(([label, value]) => {\n      const barMaxFillRatio = 0.8;\n      const barWidthPct = (parseFloat(value as string) / maxVal) * 100 * barMaxFillRatio;\n\n      return (\n        <div key={label} className=\"row mb-1\">\n          <div className=\"col-xs-6 pos-relative\">\n            {label}\n            <div className=\"bar\" style={{ width: `${barWidthPct}%` }} />\n          </div>\n          <div className=\"col-xs-6\">\n            <NumberFormat value={value} /> <Unit value={unitCode} />\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"row mt-1\">\n        <div className=\"col-xs-6 col-lg-4 name\">\n          <Term term={fact.name} description={fact.description} />\n        </div>\n        <div className=\"col-xs-6 col-lg-8\">{valueColumn}</div>\n      </div>\n    );\n  };\n\nconst FactsheetEntry: React.FC<{\n  fact: FactsheetEntryType\n}> = ({\n  fact\n}) => {\n    if (\n      fact.value_map &&\n      !isNil(fact.value_map.mean) &&\n      !isNil(fact.value_map.std)\n    ) {\n      return (<FactsheetSingleMeanStdEntry fact={fact} />);\n    }\n\n    if (Array.isArray(fact.values)) {\n      return (<FactsheetSingleMeanStdEntry fact={fact} />);\n    }\n\n    if (fact.value_map) {\n      return (<FactsheetMapValueEntry fact={fact} />);\n    }\n\n    return (<FactsheetSingleValueEntry fact={fact} />);\n  };\n\nconst Factsheet: React.FC<FactsheetProps> = ({\n  facts,\n  className = '',\n}) => {\n  return (\n    <div className={`${classPrefix}basis ${className}`}>\n      {facts.map((fact, index) => (\n        <FactsheetEntry key={`${fact.name}-${index}`} fact={fact} />\n      ))}\n    </div>\n  );\n};\n\nexport default Factsheet;\n","import React from 'react';\nimport { captureException } from '@sentry/nextjs';\nimport { decodeAsync } from \"@msgpack/msgpack\";\n\ntype HttpDataProps = {\n  path: string;\n  label?: string;\n  children: (\n    data: any,\n    loading: boolean,\n    error: any,\n  ) => React.ReactNode;\n};\n\nconst HttpData: React.FC<HttpDataProps> = ({ path, children, label = '' }) => {\n  const msgpackEncoded = path?.match(/\\.msgpack/);\n\n  const [state, setState] = React.useState<{\n    data: any;\n    loading: boolean;\n    error: any;\n  }>({\n    data: null,\n    loading: true,\n    error: null,\n  });\n\n  React.useEffect(() => {\n    if (!path) return;\n\n    setState({ ...state, loading: true });\n    fetch(path)\n      .then(async res => {\n        // TODO: remove when factesheets don't longer contain NaN values\n        if (res.ok) {\n          if (msgpackEncoded) {\n            if (res.body) {\n              return decodeAsync(res.body);\n            }\n            const err = new Error(`Response body is null for ${path}`);\n            captureException(err);\n            return Promise.reject(err);\n          }\n\n          const resBody = await res.text();\n          return JSON.parse(resBody.replace(/NaN/g, 'null'));\n        }\n\n        const err = new Error(`Can't fetch ${path}`);\n        captureException(err);\n\n        return Promise.reject(err);\n      })\n      .then(data => setState({ ...state, data, error: null, loading: false }))\n      .catch(error => setState({ ...state, error, data: null, loading: false }));\n  }, [path]);\n\n  if (!path) {\n    return null;\n  }\n\n  if (state.error) {\n    return (\n      <p>\n        {path}\n      </p>\n    );\n  }\n\n  return (\n    <>\n      {children(state.data, state.loading, state.error)}\n    </>\n  );\n};\n\nexport default HttpData;","import React from 'react';\n\n\ntype NumberFormatProps = {\n  value?: any;\n  significantFigures?: number;\n  thousandSeparator?: boolean;\n  prefix?: string;\n  suffix?: string;\n};\n\nexport function formatNumber(value, significantFigures = 5, thousandSeparator = true, prefix = '', suffix = '') {\n  const num = parseFloat(value);\n\n  if (!Number.isFinite(num)) return value;\n\n  const formatted = thousandSeparator\n    ? num.toLocaleString('en', { maximumSignificantDigits: significantFigures })\n    : num.toPrecision(significantFigures);\n\n  return `${prefix}${formatted}${suffix}`;\n}\n\nconst NumberFormat: React.FC<NumberFormatProps> = ({\n  value,\n  significantFigures = 5,\n  thousandSeparator = true,\n  prefix = '',\n  suffix = '',\n}) => {\n  return formatNumber(value, significantFigures, thousandSeparator, prefix, suffix);\n}\n\n\nexport default NumberFormat;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\ninterface StickyContainerProps {\n  centered?: boolean;\n  children: React.ReactNode;\n}\n\nconst StickyContainer: React.FC<StickyContainerProps> = ({ centered, children }) => (\n  <div className={styles.flexWrapper}>\n    <div className={classNames(styles.container, centered ? styles['container--centered'] : '')}>\n      {children}\n    </div>\n  </div >\n);\n\nexport default StickyContainer;","import React from 'react';\nimport { Tooltip } from 'antd';\n\nimport { TermDescription } from '@/terms';\n\nimport style from './styles.module.scss';\n\ntype TermProps = {\n  term: string;\n  description?: any;\n  className?: string;\n};\n\ntype TermFormatter = (term: string) => string;\n\nexport const termFactory = (termDescription: TermDescription = {}, termFormatter?: TermFormatter) => {\n  const Term: React.FC<TermProps> = ({ className, term, description }) => {\n    const currentDescription = description || termDescription[term];\n    const formattedTerm = termFormatter\n      ? termFormatter(term)\n      : term;\n\n    if (!currentDescription) {\n      return (<span className={className}>{formattedTerm}</span>);\n    }\n\n    return (\n      <Tooltip title={currentDescription} destroyTooltipOnHide={true}>\n        <span className={`${style.container} ${className ?? ''}`}>{formattedTerm}</span>\n      </Tooltip>\n    );\n  };\n\n  return Term;\n};\n","import React, { useEffect, useRef, useCallback, useState } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\n\nimport { VolumeSection } from '@/types';\nimport { volumeSections, theme } from '@/constants';\n\nimport { basePath, dataPath } from '@/config';\n\nimport styles from './styles.module.scss';\n\ntype VolumeSectionSelectProps = {\n  value?: VolumeSection | string;\n  onSelect?: (volumeSection: VolumeSection) => void;\n  theme?: number;\n};\n\nconst VolumeSectionSelector3D: React.FC<VolumeSectionSelectProps> = ({\n  value = 'region',\n  onSelect = () => { },\n  theme: themeProp = 2,\n}) => {\n  const mountRef = useRef<HTMLDivElement>(null);\n  const hoveredObjectRef = useRef<THREE.Object3D | null>(null);\n  const selectedVolumeSectionRef = useRef<VolumeSection>(value as VolumeSection);\n  const selectedObjectRef = useRef<THREE.Object3D | null>(null);\n\n  const camera = useRef<THREE.OrthographicCamera | null>(null);\n  const scene = useRef<THREE.Scene | null>(null);\n  const renderer = useRef<THREE.WebGLRenderer | null>(null);\n  const raycaster = useRef<THREE.Raycaster | null>(null);\n  const mouse = useRef(new THREE.Vector2());\n\n  const obj1Ref = useRef<THREE.Object3D | null>(null);\n  const obj2Ref = useRef<THREE.Object3D | null>(null);\n  const obj3Ref = useRef<THREE.Object3D | null>(null);\n\n  const objectsLoadedRef = useRef(false);\n  const [offset, setOffset] = useState(21);\n  const [textSize, setTextSize] = useState(1);\n\n  const handleClick = useCallback(\n    (event) => {\n      if (!objectsLoadedRef.current) return;\n\n      const rect = mountRef.current!.getBoundingClientRect();\n      mouse.current.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      raycaster.current!.setFromCamera(mouse.current, camera.current!);\n      const intersects = raycaster.current!.intersectObjects([obj1Ref.current!, obj2Ref.current!, obj3Ref.current!], true);\n\n      if (intersects.length > 0) {\n        let intersectedObject = intersects[0].object;\n        while (intersectedObject.parent && ![obj1Ref.current, obj2Ref.current, obj3Ref.current].includes(intersectedObject)) {\n          intersectedObject = intersectedObject.parent;\n        }\n\n        if ([obj1Ref.current, obj2Ref.current, obj3Ref.current].includes(intersectedObject)) {\n          const volumeSection = intersectedObject.userData.volumeSection as VolumeSection;\n          if (volumeSection) {\n            updateSelection(volumeSection, intersectedObject);\n            onSelect(volumeSection);\n          }\n        }\n      }\n    },\n    [onSelect, themeProp]\n  );\n\n  const updateSelection = (newVolumeSection: VolumeSection, newSelectedObject: THREE.Object3D) => {\n    if (selectedObjectRef.current) {\n      updateObjectColors(selectedObjectRef.current, theme[themeProp].default, theme[themeProp].hover);\n    }\n\n    updateObjectColors(newSelectedObject, theme[themeProp].selected, 0xffffff);\n\n    selectedVolumeSectionRef.current = newVolumeSection;\n    selectedObjectRef.current = newSelectedObject;\n  };\n\n  const updateObjectColors = (object: THREE.Object3D, mainColor: number, textColor: number) => {\n    object.traverse((child: any) => {\n      if (child instanceof THREE.Mesh) {\n        if (child.name === object.userData.volumeSection) {\n          child.material.color.set(mainColor);\n        }\n        if (child.geometry && child.geometry.type === 'TextGeometry') {\n          child.material.color.set(textColor);\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    scene.current = new THREE.Scene();\n    scene.current.background = new THREE.Color('#313354');\n\n    const aspect = mountRef.current.clientWidth / mountRef.current.clientHeight;\n    camera.current = new THREE.OrthographicCamera(-aspect * 200, aspect * 200, 200, -200, 0.1, 1000);\n    camera.current.position.z = 10;\n\n    renderer.current = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.current.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    renderer.current.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.current.domElement);\n\n    raycaster.current = new THREE.Raycaster();\n\n    const loader = new OBJLoader();\n    loader.load(\n      `${dataPath}/3d/volume-selector/volume-selector.obj`,\n      (obj) => {\n        [obj1Ref, obj2Ref, obj3Ref].forEach((ref, index) => {\n          const newObj = obj.clone();\n          ref.current = newObj;\n          newObj.position.set((index - 1) * offset, 0, 0);\n          newObj.userData.volumeSection = ['region', 'slice', 'cylinder'][index];\n          applyMaterial(newObj, index);\n          scene.current!.add(newObj);\n        });\n\n        const fontLoader = new FontLoader();\n        fontLoader.load(`${basePath}/assets/fonts/Titillium_Web_Light_.json`, (font) => {\n          ['Region', 'Slice', 'Cylinder'].forEach((text, index) => {\n            createText(text, [obj1Ref, obj2Ref, obj3Ref][index].current!, text.toLowerCase(), font);\n          });\n        });\n\n        objectsLoadedRef.current = true;\n\n        if (value) {\n          setInitialSelection(value as VolumeSection);\n        }\n\n        animate();\n      },\n      (xhr) => console.log((xhr.loaded / xhr.total) * 100 + '% loaded'),\n      (error) => console.error('An error happened', error)\n    );\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.current!.render(scene.current!, camera.current!);\n    };\n\n    const handleResize = () => {\n      if (mountRef.current && renderer.current && camera.current) {\n        const width = mountRef.current.clientWidth;\n        const height = mountRef.current.clientHeight;\n        renderer.current.setSize(width, height);\n\n        const aspect = width / height;\n        camera.current.left = -aspect * 200;\n        camera.current.right = aspect * 200;\n        camera.current.top = 200;\n        camera.current.bottom = -200;\n        camera.current.updateProjectionMatrix();\n\n        const newOffset = window.innerWidth < 1400 ? 16 : 21;\n        setOffset(newOffset);\n\n        camera.current.zoom = window.innerWidth < 1200 ? 11 : 16;\n        camera.current.updateProjectionMatrix();\n\n        const newTextSize = window.innerWidth < 1200 ? 1 : 0.8;\n        setTextSize(newTextSize);\n\n        updateTextSize();\n      }\n    };\n\n    const handleMouseMove = (event) => {\n      if (!objectsLoadedRef.current) return;\n\n      const rect = mountRef.current!.getBoundingClientRect();\n      mouse.current.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n\n      raycaster.current!.setFromCamera(mouse.current, camera.current!);\n      const intersects = raycaster.current!.intersectObjects([obj1Ref.current!, obj2Ref.current!, obj3Ref.current!], true);\n\n      if (intersects.length > 0) {\n        let intersectedObject = intersects[0].object;\n        while (intersectedObject.parent && ![obj1Ref.current, obj2Ref.current, obj3Ref.current].includes(intersectedObject)) {\n          intersectedObject = intersectedObject.parent;\n        }\n\n        if (hoveredObjectRef.current !== intersectedObject && selectedObjectRef.current !== intersectedObject) {\n          if (hoveredObjectRef.current && hoveredObjectRef.current !== selectedObjectRef.current) {\n            updateObjectColors(hoveredObjectRef.current, theme[themeProp].default, theme[themeProp].hover);\n          }\n\n          updateObjectColors(intersectedObject, theme[themeProp].hover, theme[themeProp].hover);\n\n          hoveredObjectRef.current = intersectedObject;\n          mountRef.current!.style.cursor = 'pointer';\n        }\n      } else {\n        if (hoveredObjectRef.current && hoveredObjectRef.current !== selectedObjectRef.current) {\n          updateObjectColors(hoveredObjectRef.current, theme[themeProp].default, theme[themeProp].hover);\n          hoveredObjectRef.current = null;\n          mountRef.current!.style.cursor = 'default';\n        }\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    mountRef.current.addEventListener('mousemove', handleMouseMove);\n    mountRef.current.addEventListener('click', handleClick);\n\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (mountRef.current) {\n        mountRef.current.removeEventListener('mousemove', handleMouseMove);\n        mountRef.current.removeEventListener('click', handleClick);\n        mountRef.current.removeChild(renderer.current!.domElement);\n      }\n    };\n  }, [themeProp]);\n\n  useEffect(() => {\n    if (objectsLoadedRef.current) {\n      [obj1Ref, obj2Ref, obj3Ref].forEach((ref, index) => {\n        if (ref.current) {\n          ref.current.position.set((index - 1) * offset, 0, 0);\n        }\n      });\n    }\n  }, [offset]);\n\n  useEffect(() => {\n    if (objectsLoadedRef.current && value) {\n      setInitialSelection(value as VolumeSection);\n    }\n  }, [value, themeProp]);\n\n  const applyMaterial = (obj: THREE.Object3D, index: number) => {\n    obj.traverse((child) => {\n      if (child instanceof THREE.Mesh) {\n        let material;\n        if (child.name === obj.userData.volumeSection) {\n          material = new THREE.MeshBasicMaterial({\n            color: theme[themeProp].default,\n            transparent: false,\n            opacity: 1,\n            depthWrite: true,\n          });\n          child.renderOrder = 2;\n        } else if (child.name === 'skeleton') {\n          material = new THREE.MeshBasicMaterial({\n            color: theme[themeProp].selectedEdges,\n            transparent: true,\n            opacity: 0,\n            depthWrite: false,\n          });\n          const wireframeGeometry = new THREE.EdgesGeometry(child.geometry);\n          const wireframeMaterial = new THREE.LineBasicMaterial({\n            color: theme[themeProp].default,\n            transparent: true,\n            opacity: 1,\n            depthWrite: false,\n          });\n          const wireframe = new THREE.LineSegments(wireframeGeometry, wireframeMaterial);\n          wireframe.renderOrder = 1;\n          child.add(wireframe);\n        } else {\n          child.visible = false;\n        }\n        if (material) {\n          child.material = material;\n        }\n      }\n    });\n  };\n\n  const createText = (text: string, obj: THREE.Object3D, childName: string, font: THREE.Font) => {\n    const textGeometry = new TextGeometry(text, {\n      font: font,\n      size: textSize,\n      height: 0.2,\n      curveSegments: 32,\n      bevelEnabled: true,\n      bevelThickness: 0.02,\n      bevelSize: 0.02,\n    });\n\n    const textMaterialColor = selectedVolumeSectionRef.current === childName ? 0xffffff : theme[themeProp].hover;\n\n    const textMaterial = new THREE.MeshBasicMaterial({\n      color: textMaterialColor,\n      transparent: false,\n      opacity: 1,\n    });\n    const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n\n    obj.traverse((child) => {\n      if (child instanceof THREE.Mesh && child.name === childName) {\n        textMesh.position.set(0, 0, 0);\n        child.add(textMesh);\n      }\n    });\n  };\n\n  const updateTextSize = () => {\n    ['Region', 'Slice', 'Cylinder'].forEach((text, index) => {\n      const obj = [obj1Ref, obj2Ref, obj3Ref][index].current;\n      if (obj) {\n        obj.traverse((child) => {\n          if (child instanceof THREE.Mesh && child.geometry && child.geometry.type === 'TextGeometry') {\n            const oldTextMesh = child;\n            const parentMesh = oldTextMesh.parent;\n            if (parentMesh) {\n              parentMesh.remove(oldTextMesh);\n              const fontLoader = new FontLoader();\n              fontLoader.load(`${basePath}/assets/fonts/Titillium_Web_Light_.json`, (font) => {\n                createText(text, obj, text.toLowerCase(), font);\n              });\n            }\n          }\n        });\n      }\n    });\n  };\n\n  const setInitialSelection = (initialVolumeSection: VolumeSection) => {\n    const initialObjectRef = [obj1Ref, obj2Ref, obj3Ref].find(\n      (ref) => ref.current?.userData.volumeSection === initialVolumeSection\n    );\n\n    if (initialObjectRef?.current) {\n      updateSelection(initialVolumeSection, initialObjectRef.current);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.volumeSelector} ref={mountRef}></div>\n      <div className={styles.volumeList}></div>\n    </div>\n  );\n};\n\nexport default VolumeSectionSelector3D;\n","import { Layer, NeuriteType, VolumeSection, AchConcentration, CellGroup, Theme, GraphTheme, ThemeColors } from './types';\nimport NeuronModelLibrary from './views/2_reconstruction-data/NeuronModelLibrary';\nimport AcetylcholineView from './views/4_validations/Acetylcholine';\n\nexport const layers: Layer[] = [\n  'SLM',\n  'SR',\n  'SP',\n  'SO',\n];\n\nexport const theme: Theme = {\n  1: { default: 0x44405B, hover: 0x7D656F, selected: 0xB68983, selectedEdges: 0xEFAE97 },\n  2: { default: 0x44405B, hover: 0x7B5B6A, selected: 0xB37579, selectedEdges: 0xEA9088 },\n  3: { default: 0x44405B, hover: 0x715970, selected: 0x9F7184, selectedEdges: 0xCC8A99 },\n  4: { default: 0x44405B, hover: 0x625D77, selected: 0x807B92, selectedEdges: 0x9E98AE },\n  5: { default: 0x393D5E, hover: 0x595D79, selected: 0x6E7B97, selectedEdges: 0x8398B5 },\n};\n\nexport const graphTheme: GraphTheme = {\n  red: \"#C46785\",\n  blue: \"#3b4165\",\n  green: \"#7FD982\",\n  purple: \"#7F5482\",\n  yellow: \"#f9f871\",\n};\n\nexport const themeColors: ThemeColors = {\n  experimental_data: \"#EFAE97\",\n  reconstruction_data: \"#EA9088\",\n  digital_reconstruction: \"#CC8A99\",\n  validations: \"#9E98AE\",\n  predictions: \"#8398B5\",\n};\n\n\n\nexport const neuriteTypes: NeuriteType[] = [\n  'all',\n  'axon',\n  'apical',\n  'basal',\n  'dendrite',\n  'soma',\n\n];\n\nexport const volumeSections: VolumeSection[] = [\n  'region',\n  'slice',\n  'cylinder',\n];\n\n\nexport const achConcentrations: AchConcentration[] = [\n  '0um',\n  '10um',\n  '100um'\n];\n\nexport const cellGroup: CellGroup[] = [\n  'All',\n  'Excitatory',\n  'Inhibitory',\n  'SLM_PPA',\n  'SO_BP',\n  'SO_BS',\n  'SO_OLM',\n  'SO_Tri',\n  'SP_AA',\n  'SP_BS',\n  'SP_CCKBC',\n  'SP_Ivy',\n  'SP_PC',\n  'SP_PVBC',\n  'SR_SCA'\n]\n\nexport const defaultSelection = {\n  experimentalData: {\n    layerAnatomy: {\n      layer: 'SLM',\n    },\n    neuronMorphology: {\n      layer: 'SLM',\n      mtype: 'SLM_PPA',\n      instance: '011127HP1',\n    },\n    neuronElectrophysiology: {\n      etype: 'bAC',\n      etype_instance: '95810035',\n    },\n  },\n  reconstructionData: {\n    volume: {\n      volume_section: 'region',\n    },\n    cellComposition: {\n      volume_section: 'region',\n    },\n    neurons: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      instance: 'CA1_int_bAC_011127HP1_20190329115610',\n    },\n  },\n  digitalReconstruction: {\n    region: {\n      volume_section: 'region',\n    },\n    morphologyLibrary: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      morphology: '011127HP1',\n    },\n    schafferCollateral: {\n      volume_section: 'region',\n      prelayer: 'SC',\n      postlayer: 'All'\n    },\n    connectionAnatomy: {\n      volume_section: 'region',\n      prelayer: 'All',\n      postlayer: 'All'\n    },\n    connectionPhysiology: {\n      volume_section: 'region',\n      prelayer: 'all',\n      postlayer: 'all'\n    },\n    acetylcholineEffectsOnCell: {\n      morphology: \"450290\",\n      etype: \"cNAC\",\n      mtype: \"SO_BP\"\n    },\n    acetylcholineEffectsOnSynapses: {\n      ach_concentration: '0um',\n      prelayer: 'Excitatory',\n      postlayer: 'Excitatory'\n    },\n\n    neurons: {\n      layer: 'SLM',\n      etype: 'bAC',\n      mtype: 'SLM_PPA',\n      instance: '011127HP1',\n    },\n    NeuronModelLibrary: {\n      mtype: 'SO_BP',\n      etype: 'cNAC',\n      morphology: '980120A_-_Scale_x1.000_y0.900_z1.000'\n    },\n    synapticPathways: {\n      volume_section: 'slice',\n      prelayer: 'All',\n      postlayer: 'All',\n    },\n    acetylcholine: {\n      ach_concentration: '0um',\n      prelayer: 'Excitatory',\n      postlayer: 'Excitatory',\n    },\n  },\n\n};\n\nexport const neuriteColor: Record<NeuriteType, string> = {\n  all: '#1fcf1f',\n  axon: '#1111ff',\n  apical: '#f442ad',\n  basal: '#ff1111',\n  dendrite: '#ff1111',\n  soma: '#000',\n};\n","import React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\ntype PreselectionProps = {\n  key: string,\n  defaultQuery: any,\n};\n\nconst withPreselection = (WrappedComponent, options: PreselectionProps) => {\n\n  const WithPreselectionComponent: React.FC = () => {\n    const router = useRouter();\n\n    useEffect(() => {\n      if (!router.isReady) return;\n\n      if (!router.query[options.key]) {\n        const query = options.defaultQuery;\n        router.replace({ query }, undefined, { shallow: true });\n      }\n    }, [router.query]);\n\n    return (<WrappedComponent />);\n  };\n\n  return WithPreselectionComponent;\n}\n\nexport default withPreselection;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__31D34\",\"container--center\":\"styles_container--center__Yuntq\",\"flexWrapper\":\"styles_flexWrapper___gDLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__pHcWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__NKkJz\",\"volumeSelector\":\"styles_volumeSelector__dN4Dl\",\"volumeList\":\"styles_volumeList__5Src0\",\"volumeSection\":\"styles_volumeSection__yJuJz\",\"active\":\"styles_active__RrlYY\"};"],"names":["replacement","MOhm","components_Unit","value","param","jsx_runtime","jsx","Fragment","Term","termFactory","FactsheetSingleValueEntry","fact","jsxs","div","className","term","name","description","isNil","span","NumberFormat","Unit","units","FactsheetSingleMeanStdEntry","mean","value_map","values","std","formatValue","toFixed","formatNumberWithoutCommas","toString","replace","FactsheetMapValueEntry","maxVal","Math","max","apply","Object","map","s","parseFloat","unitCode","valueColumn","entries","label","barWidthPct","style","width","concat","FactsheetEntry","Array","isArray","components_Factsheet","facts","index","__webpack_exports__","Z","path","children","msgpackEncoded","match","state","setState","React","data","loading","error","fetch","then","res","ok","body","decodeAsync","err","captureException","Promise","reject","resBody","text","JSON","parse","catch","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","p","significantFigures","thousandSeparator","prefix","suffix","formatNumber","num","Number","isFinite","formatted","toLocaleString","maximumSignificantDigits","toPrecision","centered","styles","classNames","termDescription","termFormatter","currentDescription","formattedTerm","Tooltip","title","destroyTooltipOnHide","onSelect","theme","themeProp","mountRef","useRef","hoveredObjectRef","selectedVolumeSectionRef","selectedObjectRef","camera","scene","renderer","raycaster","mouse","THREE","obj1Ref","obj2Ref","obj3Ref","objectsLoadedRef","offset","setOffset","useState","textSize","setTextSize","handleClick","useCallback","current","rect","getBoundingClientRect","x","event","clientX","left","y","clientY","top","height","setFromCamera","intersects","intersectObjects","length","intersectedObject","object","parent","includes","volumeSection","userData","updateSelection","newVolumeSection","newSelectedObject","updateObjectColors","default","hover","selected","mainColor","textColor","traverse","child","material","color","set","geometry","type","useEffect","background","aspect","clientWidth","clientHeight","position","z","antialias","alpha","setSize","setPixelRatio","window","devicePixelRatio","appendChild","domElement","loader","OBJLoader","load","dataPath","forEach","ref","newObj","obj","clone","applyMaterial","add","fontLoader","FontLoader","basePath","createText","toLowerCase","font","setInitialSelection","animate","console","log","xhr","loaded","total","requestAnimationFrame","render","handleResize","right","bottom","updateProjectionMatrix","newOffset","innerWidth","zoom","newTextSize","updateTextSize","handleMouseMove","cursor","addEventListener","removeEventListener","removeChild","transparent","opacity","depthWrite","renderOrder","selectedEdges","wireframeGeometry","wireframeMaterial","wireframe","visible","childName","textGeometry","TextGeometry","size","curveSegments","bevelEnabled","bevelThickness","bevelSize","textMaterialColor","textMaterial","textMesh","parentMesh","oldTextMesh","remove","initialObjectRef","find","initialVolumeSection","layers","graphTheme","red","blue","green","purple","yellow","themeColors","experimental_data","reconstruction_data","digital_reconstruction","validations","predictions","neuriteTypes","volumeSections","achConcentrations","cellGroup","defaultSelection","experimentalData","layerAnatomy","layer","neuronMorphology","mtype","instance","neuronElectrophysiology","etype","etype_instance","reconstructionData","volume","volume_section","cellComposition","neurons","digitalReconstruction","region","morphologyLibrary","morphology","schafferCollateral","prelayer","postlayer","connectionAnatomy","connectionPhysiology","acetylcholineEffectsOnCell","acetylcholineEffectsOnSynapses","ach_concentration","NeuronModelLibrary","synapticPathways","acetylcholine","neuriteColor","all","axon","apical","basal","dendrite","soma","WrappedComponent","options","router","useRouter","isReady","query","key","defaultQuery","undefined","shallow","module","exports"],"sourceRoot":""}